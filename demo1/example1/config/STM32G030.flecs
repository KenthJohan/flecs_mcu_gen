@color #AA99AF
xmcu {}
module xmcu
module STM32G030

peripherals {
	ADC {
		(flecs.doc.Description, flecs.doc.Brief) : {"Analog to Digital ConverteR"}
		ADC_ISR {
			(flecs.doc.Description, flecs.doc.Brief) : {"ADC interrupt and status register"}
			Register : {address:0}
			ADRDY {
				(flecs.doc.Description, flecs.doc.Brief) : {"ADC ready\nThis bit is set by hardware after the ADC has been enabled (ADEN=1) and when the ADC reaches a state where it is ready to accept conversion requests.\nIt is cleared by software writing 1 to it."}
				Field : {bitoffset:0, bitwidth:1}
			}
			EOSMP {
				(flecs.doc.Description, flecs.doc.Brief) : {"End of sampling flag\nThis bit is set by hardware during the conversion, at the end of the sampling phase.It is cleared by software by programming it to '1'."}
				Field : {bitoffset:1, bitwidth:1}
			}
			EOC {
				(flecs.doc.Description, flecs.doc.Brief) : {"End of conversion flag\nThis bit is set by hardware at the end of each conversion of a channel when a new data result is available in the ADC_DR register. It is cleared by software writing 1 to it or by reading the ADC_DR register."}
				Field : {bitoffset:2, bitwidth:1}
			}
			EOS {
				(flecs.doc.Description, flecs.doc.Brief) : {"End of sequence flag\nThis bit is set by hardware at the end of the conversion of a sequence of channels selected by the CHSEL bits. It is cleared by software writing 1 to it."}
				Field : {bitoffset:3, bitwidth:1}
			}
			OVR {
				(flecs.doc.Description, flecs.doc.Brief) : {"ADC overrun\nThis bit is set by hardware when an overrun occurs, meaning that a new conversion has complete while the EOC flag was already set. It is cleared by software writing 1 to it."}
				Field : {bitoffset:4, bitwidth:1}
			}
			AWD1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog 1 flag\nThis bit is set by hardware when the converted voltage crosses the values programmed in ADC_TR1 and ADC_HR1 registers. It is cleared by software by programming it to 1."}
				Field : {bitoffset:7, bitwidth:1}
			}
			AWD2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog 2 flag\nThis bit is set by hardware when the converted voltage crosses the values programmed in ADC_AWD2TR and ADC_AWD2TR registers. It is cleared by software programming it it."}
				Field : {bitoffset:8, bitwidth:1}
			}
			AWD3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog 3 flag\nThis bit is set by hardware when the converted voltage crosses the values programmed in ADC_AWD3TR and ADC_AWD3TR registers. It is cleared by software by programming it to 1."}
				Field : {bitoffset:9, bitwidth:1}
			}
			EOCAL {
				(flecs.doc.Description, flecs.doc.Brief) : {"End Of Calibration flag\nThis bit is set by hardware when calibration is complete. It is cleared by software writing 1 to it."}
				Field : {bitoffset:11, bitwidth:1}
			}
			CCRDY {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel Configuration Ready flag\nThis flag bit is set by hardware when the channel configuration is applied after programming to ADC_CHSELR register or changing CHSELRMOD or SCANDIR. It is cleared by software by programming it to it.\nNote: When the softwa"}
				Field : {bitoffset:13, bitwidth:1}
			}
		}
		ADC_IER {
			(flecs.doc.Description, flecs.doc.Brief) : {"ADC interrupt enable register "}
			Register : {address:0}
			ADRDYIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"ADC ready interrupt enable\nThis bit is set and cleared by software to enable/disable the ADC Ready interrupt.\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."}
				Field : {bitoffset:0, bitwidth:1}
			}
			EOSMPIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"End of sampling flag interrupt enable\nThis bit is set and cleared by software to enable/disable the end of the sampling phase interrupt.\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion"}
				Field : {bitoffset:1, bitwidth:1}
			}
			EOCIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"End of conversion interrupt enable\nThis bit is set and cleared by software to enable/disable the end of conversion interrupt.\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing"}
				Field : {bitoffset:2, bitwidth:1}
			}
			EOSIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"End of conversion sequence interrupt enable\nThis bit is set and cleared by software to enable/disable the end of sequence of conversions interrupt.\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no"}
				Field : {bitoffset:3, bitwidth:1}
			}
			OVRIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Overrun interrupt enable\nThis bit is set and cleared by software to enable/disable the overrun interrupt.\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."}
				Field : {bitoffset:4, bitwidth:1}
			}
			AWD1IE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog 1 interrupt enable\nThis bit is set and cleared by software to enable/disable the analog watchdog interrupt.\nNote: The Software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."}
				Field : {bitoffset:7, bitwidth:1}
			}
			AWD2IE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog 2 interrupt enable\nThis bit is set and cleared by software to enable/disable the analog watchdog interrupt.\nNote: The Software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."}
				Field : {bitoffset:8, bitwidth:1}
			}
			AWD3IE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog 3 interrupt enable\nThis bit is set and cleared by software to enable/disable the analog watchdog interrupt.\nNote: The Software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."}
				Field : {bitoffset:9, bitwidth:1}
			}
			EOCALIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"End of calibration interrupt enable\nThis bit is set and cleared by software to enable/disable the end of calibration interrupt.\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoi"}
				Field : {bitoffset:11, bitwidth:1}
			}
			CCRDYIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel Configuration Ready Interrupt enable\nThis bit is set and cleared by software to enable/disable the channel configuration ready interrupt.\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no c"}
				Field : {bitoffset:13, bitwidth:1}
			}
		}
		ADC_CR {
			(flecs.doc.Description, flecs.doc.Brief) : {"ADC control register"}
			Register : {address:0}
			ADEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"ADC enable command\nThis bit is set by software to enable the ADC. The ADC is effectively ready to operate once the ADRDY flag has been set.\nIt is cleared by hardware when the ADC is disabled, after the execution of the ADDIS command.\nNote: The software is"}
				Field : {bitoffset:0, bitwidth:1}
			}
			ADDIS {
				(flecs.doc.Description, flecs.doc.Brief) : {"ADC disable command\nThis bit is set by software to disable the ADC (ADDIS command) and put it into power-down state (OFF state).\nIt is cleared by hardware once the ADC is effectively disabled (ADEN is also cleared by hardware at this time).\nNote: Setting "}
				Field : {bitoffset:1, bitwidth:1}
			}
			ADSTART {
				(flecs.doc.Description, flecs.doc.Brief) : {"ADC start conversion command\nThis bit is set by software to start ADC conversion. Depending on the EXTEN [1:0] configuration bits, a conversion either starts immediately (software trigger configuration) or once a hardware trigger event occurs (hardware tr"}
				Field : {bitoffset:2, bitwidth:1}
			}
			ADSTP {
				(flecs.doc.Description, flecs.doc.Brief) : {"ADC stop conversion command\nThis bit is set by software to stop and discard an ongoing conversion (ADSTP Command).\nIt is cleared by hardware when the conversion is effectively discarded and the ADC is ready to accept a new start conversion command.\nNote: "}
				Field : {bitoffset:4, bitwidth:1}
			}
			ADVREGEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"ADC Voltage Regulator Enable\nThis bit is set by software, to enable the ADC internal voltage regulator. The voltage regulator output is available after tADCVREG_SETUP.\nIt is cleared by software to disable the voltage regulator. It can be cleared only if A"}
				Field : {bitoffset:28, bitwidth:1}
			}
			ADCAL {
				(flecs.doc.Description, flecs.doc.Brief) : {"ADC calibration\nThis bit is set by software to start the calibration of the ADC.\nIt is cleared by hardware after calibration is complete.\nNote: The software is allowed to set ADCAL only when the ADC is disabled (ADCAL=0, ADSTART=0, ADSTP=0, ADDIS=0 and AD"}
				Field : {bitoffset:31, bitwidth:1}
			}
		}
		ADC_CFGR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"ADC configuration register 1"}
			Register : {address:0}
			DMAEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Direct memory access enable\nThis bit is set and cleared by software to enable the generation of DMA requests. This allows the DMA controller to be used to manage automatically the converted data. For more details, refer to .\nNote: The software is allowed "}
				Field : {bitoffset:0, bitwidth:1}
			}
			DMACFG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Direct memory access configuration\nThis bit is set and cleared by software to select between two DMA modes of operation and is effective only when DMAEN=1.\nFor more details, refer to page351\nNote: The software is allowed to write this bit only when ADSTAR"}
				Field : {bitoffset:1, bitwidth:1}
			}
			SCANDIR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Scan sequence direction\nThis bit is set and cleared by software to select the direction in which the channels is scanned in the sequence. It is effective only if CHSELMOD bit is cleared to 0.\nNote: The software is allowed to write this bit only when ADSTA"}
				Field : {bitoffset:2, bitwidth:1}
			}
			RES {
				(flecs.doc.Description, flecs.doc.Brief) : {"Data resolution\nThese bits are written by software to select the resolution of the conversion.\nNote: The software is allowed to write these bits only when ADEN=0."}
				Field : {bitoffset:3, bitwidth:2}
			}
			ALIGN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Data alignment\nThis bit is set and cleared by software to select right or left alignment. Refer to Data alignment and resolution (oversampling disabled: OVSE = 0) on page349\nNote: The software is allowed to write this bit only when ADSTART bit is cleared "}
				Field : {bitoffset:5, bitwidth:1}
			}
			EXTSEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"External trigger selection\nThese bits select the external event used to trigger the start of conversion (refer to External triggers for details):\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no c"}
				Field : {bitoffset:6, bitwidth:3}
			}
			EXTEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"External trigger enable and polarity selection\nThese bits are set and cleared by software to select the external trigger polarity and enable the trigger.\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures t"}
				Field : {bitoffset:10, bitwidth:2}
			}
			OVRMOD {
				(flecs.doc.Description, flecs.doc.Brief) : {"Overrun management mode\nThis bit is set and cleared by software and configure the way data overruns are managed.\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."}
				Field : {bitoffset:12, bitwidth:1}
			}
			CONT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Single / continuous conversion mode\nThis bit is set and cleared by software. If it is set, conversion takes place continuously until it is cleared.\nNote: It is not possible to have both discontinuous mode and continuous mode enabled: it is forbidden to se"}
				Field : {bitoffset:13, bitwidth:1}
			}
			WAIT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wait conversion mode\nThis bit is set and cleared by software to enable/disable wait conversion mode..\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."}
				Field : {bitoffset:14, bitwidth:1}
			}
			AUTOFF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Auto-off mode\nThis bit is set and cleared by software to enable/disable auto-off mode..\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."}
				Field : {bitoffset:15, bitwidth:1}
			}
			DISCEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Discontinuous mode\nThis bit is set and cleared by software to enable/disable discontinuous mode.\nNote: It is not possible to have both discontinuous mode and continuous mode enabled: it is forbidden to set both bits DISCEN=1 and CONT=1.\nThe software is al"}
				Field : {bitoffset:16, bitwidth:1}
			}
			CHSELRMOD {
				(flecs.doc.Description, flecs.doc.Brief) : {"Mode selection of the ADC_CHSELR register\nThis bit is set and cleared by software to control the ADC_CHSELR feature:\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing).\nIf CCR"}
				Field : {bitoffset:21, bitwidth:1}
			}
			AWD1SGL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Enable the watchdog on a single channel or on all channels\nThis bit is set and cleared by software to enable the analog watchdog on the channel identified by the AWDCH[4:0] bits or on all the channels\nNote: The software is allowed to write this bit only w"}
				Field : {bitoffset:22, bitwidth:1}
			}
			AWD1EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog enable\nThis bit is set and cleared by software.\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."}
				Field : {bitoffset:23, bitwidth:1}
			}
			AWD1CH {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They select the input channel to be guarded by the analog watchdog.\n.....\nOthers: Reserved\nNote: The channel selected by the AWDCH[4:0] bits must be also set into the CHSELR reg"}
				Field : {bitoffset:26, bitwidth:5}
			}
		}
		ADC_CFGR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"ADC configuration register 2"}
			Register : {address:0}
			OVSE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Oversampler Enable\nThis bit is set and cleared by software.\nNote: Software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:0, bitwidth:1}
			}
			OVSR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Oversampling ratio\nThis bit filed defines the number of oversampling ratio.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:2, bitwidth:3}
			}
			OVSS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Oversampling shift\nThis bit is set and cleared by software.\nOthers: Reserved\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:5, bitwidth:4}
			}
			TOVS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Triggered Oversampling\nThis bit is set and cleared by software.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:9, bitwidth:1}
			}
			LFTRIG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Low frequency trigger mode enable\nThis bit is set and cleared by software.\nNote: The software is allowed to write this bit only when ADSTART bit is cleared to 0 (this ensures that no conversion is ongoing)."}
				Field : {bitoffset:29, bitwidth:1}
			}
			CKMODE {
				(flecs.doc.Description, flecs.doc.Brief) : {"ADC clock mode\nThese bits are set and cleared by software to define how the analog ADC is clocked:\nIn all synchronous clock modes, there is no jitter in the delay from a timer trigger to the start of a conversion.\nNote: The software is allowed to write th"}
				Field : {bitoffset:30, bitwidth:2}
			}
		}
		ADC_SMPR {
			(flecs.doc.Description, flecs.doc.Brief) : {"ADC sampling time register"}
			Register : {address:0}
			SMP1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Sampling time selection 1\nThese bits are written by software to select the sampling time that applies to all channels.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:0, bitwidth:3}
			}
			SMP2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Sampling time selection 2\nThese bits are written by software to select the sampling time that applies to all channels.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:4, bitwidth:3}
			}
			SMPSEL0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:8, bitwidth:1}
			}
			SMPSEL1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:9, bitwidth:1}
			}
			SMPSEL2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:10, bitwidth:1}
			}
			SMPSEL3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:11, bitwidth:1}
			}
			SMPSEL4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:12, bitwidth:1}
			}
			SMPSEL5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:13, bitwidth:1}
			}
			SMPSEL6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:14, bitwidth:1}
			}
			SMPSEL7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:15, bitwidth:1}
			}
			SMPSEL8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:16, bitwidth:1}
			}
			SMPSEL9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:17, bitwidth:1}
			}
			SMPSEL10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:18, bitwidth:1}
			}
			SMPSEL11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:19, bitwidth:1}
			}
			SMPSEL12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:20, bitwidth:1}
			}
			SMPSEL13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:21, bitwidth:1}
			}
			SMPSEL14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:22, bitwidth:1}
			}
			SMPSEL15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:23, bitwidth:1}
			}
			SMPSEL16 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:24, bitwidth:1}
			}
			SMPSEL17 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:25, bitwidth:1}
			}
			SMPSEL18 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x sampling time selection\nThese bits are written by software to define which sampling time is used.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:26, bitwidth:1}
			}
		}
		ADC_AWD1TR {
			(flecs.doc.Description, flecs.doc.Brief) : {"ADC watchdog threshold register"}
			Register : {address:0}
			LT1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog 1 lower threshold\nThese bits are written by software to define the lower threshold for the analog watchdog.\nRefer to ADC_AWDxTR) on page355."}
				Field : {bitoffset:0, bitwidth:12}
			}
			HT1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog 1 higher threshold\nThese bits are written by software to define the higher threshold for the analog watchdog.\nRefer to ADC_AWDxTR) on page355."}
				Field : {bitoffset:16, bitwidth:12}
			}
		}
		ADC_AWD2TR {
			(flecs.doc.Description, flecs.doc.Brief) : {"ADC watchdog threshold register"}
			Register : {address:0}
			LT2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog 2 lower threshold\nThese bits are written by software to define the lower threshold for the analog watchdog.\nRefer to ADC_AWDxTR) on page355."}
				Field : {bitoffset:0, bitwidth:12}
			}
			HT2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog 2 higher threshold\nThese bits are written by software to define the higher threshold for the analog watchdog.\nRefer to ADC_AWDxTR) on page355."}
				Field : {bitoffset:16, bitwidth:12}
			}
		}
		ADC_CHSELR_0 {
			(flecs.doc.Description, flecs.doc.Brief) : {"ADC channel selection register [alternate] "}
			Register : {address:0}
			CHSEL0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write thi"}
				Field : {bitoffset:0, bitwidth:1}
			}
			CHSEL1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write thi"}
				Field : {bitoffset:1, bitwidth:1}
			}
			CHSEL2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write thi"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CHSEL3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write thi"}
				Field : {bitoffset:3, bitwidth:1}
			}
			CHSEL4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write thi"}
				Field : {bitoffset:4, bitwidth:1}
			}
			CHSEL5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write thi"}
				Field : {bitoffset:5, bitwidth:1}
			}
			CHSEL6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write thi"}
				Field : {bitoffset:6, bitwidth:1}
			}
			CHSEL7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write thi"}
				Field : {bitoffset:7, bitwidth:1}
			}
			CHSEL8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write thi"}
				Field : {bitoffset:8, bitwidth:1}
			}
			CHSEL9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write thi"}
				Field : {bitoffset:9, bitwidth:1}
			}
			CHSEL10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write thi"}
				Field : {bitoffset:10, bitwidth:1}
			}
			CHSEL11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write thi"}
				Field : {bitoffset:11, bitwidth:1}
			}
			CHSEL12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write thi"}
				Field : {bitoffset:12, bitwidth:1}
			}
			CHSEL13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write thi"}
				Field : {bitoffset:13, bitwidth:1}
			}
			CHSEL14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write thi"}
				Field : {bitoffset:14, bitwidth:1}
			}
			CHSEL15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write thi"}
				Field : {bitoffset:15, bitwidth:1}
			}
			CHSEL16 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write thi"}
				Field : {bitoffset:16, bitwidth:1}
			}
			CHSEL17 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write thi"}
				Field : {bitoffset:17, bitwidth:1}
			}
			CHSEL18 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel-x selection\nThese bits are written by software and define which channels are part of the sequence of channels to be converted. Refer to  for ADC inputs connected to external channels and internal sources.\nNote: The software is allowed to write thi"}
				Field : {bitoffset:18, bitwidth:1}
			}
		}
		ADC_CHSELR_1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"channel selection register CHSELRMOD = 1 in\n            ADC_CFGR1"}
			Register : {address:0}
			SQ1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"1st conversion of the sequence\nThese bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence.\nWhen 0b1111 (end of sequence) is programmed to the lower sequence c"}
				Field : {bitoffset:0, bitwidth:4}
			}
			SQ2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"2nd conversion of the sequence\nThese bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence.\nWhen 0b1111 (end of sequence) is programmed to the lower sequence c"}
				Field : {bitoffset:4, bitwidth:4}
			}
			SQ3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"3rd conversion of the sequence\nThese bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence.\nWhen 0b1111 (end of sequence) is programmed to the lower sequence c"}
				Field : {bitoffset:8, bitwidth:4}
			}
			SQ4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"4th conversion of the sequence\nThese bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence.\nWhen 0b1111 (end of sequence) is programmed to the lower sequence c"}
				Field : {bitoffset:12, bitwidth:4}
			}
			SQ5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"5th conversion of the sequence\nThese bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence.\nWhen 0b1111 (end of sequence) is programmed to the lower sequence c"}
				Field : {bitoffset:16, bitwidth:4}
			}
			SQ6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"6th conversion of the sequence\nThese bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence.\nWhen 0b1111 (end of sequence) is programmed to the lower sequence c"}
				Field : {bitoffset:20, bitwidth:4}
			}
			SQ7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"7th conversion of the sequence\nThese bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence.\nWhen 0b1111 (end of sequence) is programmed to the lower sequence c"}
				Field : {bitoffset:24, bitwidth:4}
			}
			SQ8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"8th conversion of the sequence\nThese bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates the end of the sequence.\nWhen 0b1111 (end of sequence) is programmed to the lower sequen"}
				Field : {bitoffset:28, bitwidth:4}
			}
		}
		ADC_AWD3TR {
			(flecs.doc.Description, flecs.doc.Brief) : {"ADC watchdog threshold register"}
			Register : {address:0}
			LT3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog 3lower threshold\nThese bits are written by software to define the lower threshold for the analog watchdog.\nRefer to ADC_AWDxTR) on page355."}
				Field : {bitoffset:0, bitwidth:12}
			}
			HT3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog 3 higher threshold\nThese bits are written by software to define the higher threshold for the analog watchdog.\nRefer to ADC_AWDxTR) on page355."}
				Field : {bitoffset:16, bitwidth:12}
			}
		}
		ADC_DR {
			(flecs.doc.Description, flecs.doc.Brief) : {"ADC data register"}
			Register : {address:0}
			DATA {
				(flecs.doc.Description, flecs.doc.Brief) : {"Converted data\nThese bits are read-only. They contain the conversion result from the last converted channel. The data are left- or right-aligned as shown in OVSE = 0) on page349.\nJust after a calibration is complete, DATA[6:0] contains the calibration fac"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		ADC_AWD2CR {
			(flecs.doc.Description, flecs.doc.Brief) : {"ADC Analog Watchdog 2 Configuration register"}
			Register : {address:0}
			AWD2CH0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:0, bitwidth:1}
			}
			AWD2CH1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:1, bitwidth:1}
			}
			AWD2CH2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:2, bitwidth:1}
			}
			AWD2CH3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:3, bitwidth:1}
			}
			AWD2CH4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:4, bitwidth:1}
			}
			AWD2CH5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:5, bitwidth:1}
			}
			AWD2CH6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:6, bitwidth:1}
			}
			AWD2CH7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:7, bitwidth:1}
			}
			AWD2CH8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:8, bitwidth:1}
			}
			AWD2CH9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:9, bitwidth:1}
			}
			AWD2CH10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:10, bitwidth:1}
			}
			AWD2CH11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:11, bitwidth:1}
			}
			AWD2CH12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:12, bitwidth:1}
			}
			AWD2CH13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:13, bitwidth:1}
			}
			AWD2CH14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:14, bitwidth:1}
			}
			AWD2CH15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:15, bitwidth:1}
			}
			AWD2CH16 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:16, bitwidth:1}
			}
			AWD2CH17 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:17, bitwidth:1}
			}
			AWD2CH18 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2).\nNote: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:18, bitwidth:1}
			}
		}
		ADC_AWD3CR {
			(flecs.doc.Description, flecs.doc.Brief) : {"ADC Analog Watchdog 3 Configuration register"}
			Register : {address:0}
			AWD3CH0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:0, bitwidth:1}
			}
			AWD3CH1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:1, bitwidth:1}
			}
			AWD3CH2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:2, bitwidth:1}
			}
			AWD3CH3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:3, bitwidth:1}
			}
			AWD3CH4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:4, bitwidth:1}
			}
			AWD3CH5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:5, bitwidth:1}
			}
			AWD3CH6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:6, bitwidth:1}
			}
			AWD3CH7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:7, bitwidth:1}
			}
			AWD3CH8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:8, bitwidth:1}
			}
			AWD3CH9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:9, bitwidth:1}
			}
			AWD3CH10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:10, bitwidth:1}
			}
			AWD3CH11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:11, bitwidth:1}
			}
			AWD3CH12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:12, bitwidth:1}
			}
			AWD3CH13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:13, bitwidth:1}
			}
			AWD3CH14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:14, bitwidth:1}
			}
			AWD3CH15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:15, bitwidth:1}
			}
			AWD3CH16 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:16, bitwidth:1}
			}
			AWD3CH17 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:17, bitwidth:1}
			}
			AWD3CH18 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog watchdog channel selection\nThese bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3).\nNote: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR r"}
				Field : {bitoffset:18, bitwidth:1}
			}
		}
		ADC_CALFACT {
			(flecs.doc.Description, flecs.doc.Brief) : {"ADC Calibration factor"}
			Register : {address:0}
			CALFACT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Calibration factor\nThese bits are written by hardware or by software.\nOnce a calibration is complete,they are updated by hardware with the calibration factors.\nSoftware can write these bits with a new calibration factor. If the new calibration factor is d"}
				Field : {bitoffset:0, bitwidth:7}
			}
		}
		ADC_CCR {
			(flecs.doc.Description, flecs.doc.Brief) : {"ADC common configuration register"}
			Register : {address:0}
			PRESC {
				(flecs.doc.Description, flecs.doc.Brief) : {"ADC prescaler\nSet and cleared by software to select the frequency of the clock to the ADC.\nOther: Reserved\nNote: Software is allowed to write these bits only when the ADC is disabled (ADCAL=0, ADSTART=0, ADSTP=0, ADDIS=0 and ADEN=0)."}
				Field : {bitoffset:18, bitwidth:4}
			}
			VREFEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"VREFINT enable\nThis bit is set and cleared by software to enable/disable the VREFINT.\nNote: Software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:22, bitwidth:1}
			}
			TSEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Temperature sensor enable\nThis bit is set and cleared by software to enable/disable the temperature sensor.\nNote: Software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)."}
				Field : {bitoffset:23, bitwidth:1}
			}
			VBATEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"VBAT enable\nThis bit is set and cleared by software to enable/disable the VBAT channel.\nNote: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing)"}
				Field : {bitoffset:24, bitwidth:1}
			}
		}
	}
	IWDG {
		(flecs.doc.Description, flecs.doc.Brief) : {"Independent watchdog"}
		KR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Key register"}
			Register : {address:0}
			KEY {
				(flecs.doc.Description, flecs.doc.Brief) : {"Key value (write only, read\n              0x0000)"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		PR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Prescaler register"}
			Register : {address:0}
			PR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Prescaler divider"}
				Field : {bitoffset:0, bitwidth:3}
			}
		}
		RLR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Reload register"}
			Register : {address:0}
			RL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Watchdog counter reload\n              value"}
				Field : {bitoffset:0, bitwidth:12}
			}
		}
		SR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Status register"}
			Register : {address:0}
			WVU {
				(flecs.doc.Description, flecs.doc.Brief) : {"Watchdog counter window value\n              update"}
				Field : {bitoffset:2, bitwidth:1}
			}
			RVU {
				(flecs.doc.Description, flecs.doc.Brief) : {"Watchdog counter reload value\n              update"}
				Field : {bitoffset:1, bitwidth:1}
			}
			PVU {
				(flecs.doc.Description, flecs.doc.Brief) : {"Watchdog prescaler value\n              update"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		WINR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Window register"}
			Register : {address:0}
			WIN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Watchdog counter window\n              value"}
				Field : {bitoffset:0, bitwidth:12}
			}
		}
	}
	WWDG {
		(flecs.doc.Description, flecs.doc.Brief) : {"System window watchdog"}
		CR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Control register"}
			Register : {address:0}
			WDGA {
				(flecs.doc.Description, flecs.doc.Brief) : {"Activation bit"}
				Field : {bitoffset:7, bitwidth:1}
			}
			T {
				(flecs.doc.Description, flecs.doc.Brief) : {"7-bit counter (MSB to LSB)"}
				Field : {bitoffset:0, bitwidth:7}
			}
		}
		CFR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Configuration register"}
			Register : {address:0}
			WDGTB {
				(flecs.doc.Description, flecs.doc.Brief) : {"Timer base"}
				Field : {bitoffset:11, bitwidth:3}
			}
			EWI {
				(flecs.doc.Description, flecs.doc.Brief) : {"Early wakeup interrupt"}
				Field : {bitoffset:9, bitwidth:1}
			}
			W {
				(flecs.doc.Description, flecs.doc.Brief) : {"7-bit window value"}
				Field : {bitoffset:0, bitwidth:7}
			}
		}
		SR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Status register"}
			Register : {address:0}
			EWIF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Early wakeup interrupt\n              flag"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
	}
	FLASH {
		(flecs.doc.Description, flecs.doc.Brief) : {"Flash"}
		ACR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Access control register"}
			Register : {address:0}
			LATENCY {
				(flecs.doc.Description, flecs.doc.Brief) : {"Latency"}
				Field : {bitoffset:0, bitwidth:3}
			}
			PRFTEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Prefetch enable"}
				Field : {bitoffset:8, bitwidth:1}
			}
			ICEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Instruction cache enable"}
				Field : {bitoffset:9, bitwidth:1}
			}
			ICRST {
				(flecs.doc.Description, flecs.doc.Brief) : {"Instruction cache reset"}
				Field : {bitoffset:11, bitwidth:1}
			}
			EMPTY {
				(flecs.doc.Description, flecs.doc.Brief) : {"Flash User area empty"}
				Field : {bitoffset:16, bitwidth:1}
			}
		}
		KEYR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Flash key register"}
			Register : {address:0}
			KEYR {
				(flecs.doc.Description, flecs.doc.Brief) : {"KEYR"}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		OPTKEYR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Option byte key register"}
			Register : {address:0}
			OPTKEYR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Option byte key"}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		SR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Status register"}
			Register : {address:0}
			EOP {
				(flecs.doc.Description, flecs.doc.Brief) : {"End of operation"}
				Field : {bitoffset:0, bitwidth:1}
			}
			OPERR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Operation error"}
				Field : {bitoffset:1, bitwidth:1}
			}
			PROGERR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Programming error"}
				Field : {bitoffset:3, bitwidth:1}
			}
			WRPERR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Write protected error"}
				Field : {bitoffset:4, bitwidth:1}
			}
			PGAERR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Programming alignment\n              error"}
				Field : {bitoffset:5, bitwidth:1}
			}
			SIZERR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Size error"}
				Field : {bitoffset:6, bitwidth:1}
			}
			PGSERR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Programming sequence error"}
				Field : {bitoffset:7, bitwidth:1}
			}
			MISERR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Fast programming data miss\n              error"}
				Field : {bitoffset:8, bitwidth:1}
			}
			FASTERR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Fast programming error"}
				Field : {bitoffset:9, bitwidth:1}
			}
			OPTVERR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Option and Engineering bits loading\n              validity error"}
				Field : {bitoffset:15, bitwidth:1}
			}
			BSY1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"BSY1"}
				Field : {bitoffset:16, bitwidth:1}
			}
			BSY2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"BSY2"}
				Field : {bitoffset:17, bitwidth:1}
			}
			CFGBSY {
				(flecs.doc.Description, flecs.doc.Brief) : {"Programming or erase configuration\n              busy."}
				Field : {bitoffset:18, bitwidth:1}
			}
		}
		CR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Flash control register"}
			Register : {address:0}
			PG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Programming"}
				Field : {bitoffset:0, bitwidth:1}
			}
			PER {
				(flecs.doc.Description, flecs.doc.Brief) : {"Page erase"}
				Field : {bitoffset:1, bitwidth:1}
			}
			MER1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Mass erase"}
				Field : {bitoffset:2, bitwidth:1}
			}
			PNB {
				(flecs.doc.Description, flecs.doc.Brief) : {"Page number"}
				Field : {bitoffset:3, bitwidth:10}
			}
			BKER {
				(flecs.doc.Description, flecs.doc.Brief) : {"BKER"}
				Field : {bitoffset:13, bitwidth:1}
			}
			MER2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"MER2"}
				Field : {bitoffset:15, bitwidth:1}
			}
			STRT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Start"}
				Field : {bitoffset:16, bitwidth:1}
			}
			OPTSTRT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Options modification start"}
				Field : {bitoffset:17, bitwidth:1}
			}
			FSTPG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Fast programming"}
				Field : {bitoffset:18, bitwidth:1}
			}
			EOPIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"End of operation interrupt\n              enable"}
				Field : {bitoffset:24, bitwidth:1}
			}
			ERRIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Error interrupt enable"}
				Field : {bitoffset:25, bitwidth:1}
			}
			OBL_LAUNCH {
				(flecs.doc.Description, flecs.doc.Brief) : {"Force the option byte\n              loading"}
				Field : {bitoffset:27, bitwidth:1}
			}
			OPTLOCK {
				(flecs.doc.Description, flecs.doc.Brief) : {"Options Lock"}
				Field : {bitoffset:30, bitwidth:1}
			}
			LOCK {
				(flecs.doc.Description, flecs.doc.Brief) : {"FLASH_CR Lock"}
				Field : {bitoffset:31, bitwidth:1}
			}
		}
		ECCR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Flash ECC register"}
			Register : {address:0}
			ADDR_ECC {
				(flecs.doc.Description, flecs.doc.Brief) : {"ECC fail address"}
				Field : {bitoffset:0, bitwidth:14}
			}
			SYSF_ECC {
				(flecs.doc.Description, flecs.doc.Brief) : {"ECC fail for Corrected ECC Error or\n              Double ECC Error in info block"}
				Field : {bitoffset:20, bitwidth:1}
			}
			ECCIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"ECC correction interrupt\n              enable"}
				Field : {bitoffset:24, bitwidth:1}
			}
			ECCC {
				(flecs.doc.Description, flecs.doc.Brief) : {"ECC correction"}
				Field : {bitoffset:30, bitwidth:1}
			}
			ECCD {
				(flecs.doc.Description, flecs.doc.Brief) : {"ECC detection"}
				Field : {bitoffset:31, bitwidth:1}
			}
		}
		OPTR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Flash option register"}
			Register : {address:0}
			RDP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Read protection level"}
				Field : {bitoffset:0, bitwidth:8}
			}
			nRST_STOP {
				(flecs.doc.Description, flecs.doc.Brief) : {"nRST_STOP"}
				Field : {bitoffset:13, bitwidth:1}
			}
			nRST_STDBY {
				(flecs.doc.Description, flecs.doc.Brief) : {"nRST_STDBY"}
				Field : {bitoffset:14, bitwidth:1}
			}
			IDWG_SW {
				(flecs.doc.Description, flecs.doc.Brief) : {"Independent watchdog\n              selection"}
				Field : {bitoffset:16, bitwidth:1}
			}
			IWDG_STOP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Independent watchdog counter freeze in\n              Stop mode"}
				Field : {bitoffset:17, bitwidth:1}
			}
			IWDG_STDBY {
				(flecs.doc.Description, flecs.doc.Brief) : {"Independent watchdog counter freeze in\n              Standby mode"}
				Field : {bitoffset:18, bitwidth:1}
			}
			WWDG_SW {
				(flecs.doc.Description, flecs.doc.Brief) : {"Window watchdog selection"}
				Field : {bitoffset:19, bitwidth:1}
			}
			nSWAP_BANK {
				(flecs.doc.Description, flecs.doc.Brief) : {"nSWAP_BANK"}
				Field : {bitoffset:20, bitwidth:1}
			}
			DUAL_BANK {
				(flecs.doc.Description, flecs.doc.Brief) : {"DUAL_BANK"}
				Field : {bitoffset:21, bitwidth:1}
			}
			RAM_PARITY_CHECK {
				(flecs.doc.Description, flecs.doc.Brief) : {"SRAM parity check control"}
				Field : {bitoffset:22, bitwidth:1}
			}
			nBOOT_SEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"nBOOT_SEL"}
				Field : {bitoffset:24, bitwidth:1}
			}
			nBOOT1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Boot configuration"}
				Field : {bitoffset:25, bitwidth:1}
			}
			nBOOT0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"nBOOT0 option bit"}
				Field : {bitoffset:26, bitwidth:1}
			}
		}
		WRP1AR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Flash WRP area A address\n          register"}
			Register : {address:0}
			WRP1A_STRT {
				(flecs.doc.Description, flecs.doc.Brief) : {"WRP area A start offset"}
				Field : {bitoffset:0, bitwidth:7}
			}
			WRP1A_END {
				(flecs.doc.Description, flecs.doc.Brief) : {"WRP area A end offset"}
				Field : {bitoffset:16, bitwidth:7}
			}
		}
		WRP1BR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Flash WRP area B address\n          register"}
			Register : {address:0}
			WRP1B_STRT {
				(flecs.doc.Description, flecs.doc.Brief) : {"WRP area B start offset"}
				Field : {bitoffset:0, bitwidth:7}
			}
			WRP1B_END {
				(flecs.doc.Description, flecs.doc.Brief) : {"WRP area B end offset"}
				Field : {bitoffset:16, bitwidth:7}
			}
		}
		WRP2AR {
			(flecs.doc.Description, flecs.doc.Brief) : {"FLASH WRP2 area A address register"}
			Register : {address:0}
			WRP2A_STRT {
				(flecs.doc.Description, flecs.doc.Brief) : {"WRP2A_STRT"}
				Field : {bitoffset:0, bitwidth:7}
			}
			WRP2A_END {
				(flecs.doc.Description, flecs.doc.Brief) : {"WRP2A_END"}
				Field : {bitoffset:16, bitwidth:7}
			}
		}
		WRP2BR {
			(flecs.doc.Description, flecs.doc.Brief) : {"FLASH WRP2 area B address register"}
			Register : {address:0}
			WRP2B_STRT {
				(flecs.doc.Description, flecs.doc.Brief) : {"WRP2B_STRT"}
				Field : {bitoffset:0, bitwidth:7}
			}
			WRP2B_END {
				(flecs.doc.Description, flecs.doc.Brief) : {"WRP2B_END"}
				Field : {bitoffset:16, bitwidth:7}
			}
		}
	}
	RCC {
		(flecs.doc.Description, flecs.doc.Brief) : {"Reset and clock control"}
		CR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Clock control register"}
			Register : {address:0}
			HSION {
				(flecs.doc.Description, flecs.doc.Brief) : {"HSI16 clock enable"}
				Field : {bitoffset:8, bitwidth:1}
			}
			HSIKERON {
				(flecs.doc.Description, flecs.doc.Brief) : {"HSI16 always enable for peripheral\n              kernels"}
				Field : {bitoffset:9, bitwidth:1}
			}
			HSIRDY {
				(flecs.doc.Description, flecs.doc.Brief) : {"HSI16 clock ready flag"}
				Field : {bitoffset:10, bitwidth:1}
			}
			HSIDIV {
				(flecs.doc.Description, flecs.doc.Brief) : {"HSI16 clock division\n              factor"}
				Field : {bitoffset:11, bitwidth:3}
			}
			HSEON {
				(flecs.doc.Description, flecs.doc.Brief) : {"HSE clock enable"}
				Field : {bitoffset:16, bitwidth:1}
			}
			HSERDY {
				(flecs.doc.Description, flecs.doc.Brief) : {"HSE clock ready flag"}
				Field : {bitoffset:17, bitwidth:1}
			}
			HSEBYP {
				(flecs.doc.Description, flecs.doc.Brief) : {"HSE crystal oscillator\n              bypass"}
				Field : {bitoffset:18, bitwidth:1}
			}
			CSSON {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clock security system\n              enable"}
				Field : {bitoffset:19, bitwidth:1}
			}
			PLLON {
				(flecs.doc.Description, flecs.doc.Brief) : {"PLL enable"}
				Field : {bitoffset:24, bitwidth:1}
			}
			PLLRDY {
				(flecs.doc.Description, flecs.doc.Brief) : {"PLL clock ready flag"}
				Field : {bitoffset:25, bitwidth:1}
			}
		}
		ICSCR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Internal clock sources calibration\n          register"}
			Register : {address:0}
			HSICAL {
				(flecs.doc.Description, flecs.doc.Brief) : {"HSI16 clock calibration"}
				Field : {bitoffset:0, bitwidth:8}
			}
			HSITRIM {
				(flecs.doc.Description, flecs.doc.Brief) : {"HSI16 clock trimming"}
				Field : {bitoffset:8, bitwidth:7}
			}
		}
		CFGR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Clock configuration register"}
			Register : {address:0}
			MCOPRE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Microcontroller clock output\n              prescaler"}
				Field : {bitoffset:28, bitwidth:4}
			}
			MCOSEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Microcontroller clock\n              output"}
				Field : {bitoffset:24, bitwidth:4}
			}
			MCO2PRE {
				(flecs.doc.Description, flecs.doc.Brief) : {"MCO2PRE"}
				Field : {bitoffset:20, bitwidth:4}
			}
			MCO2SEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"MCO2SEL"}
				Field : {bitoffset:16, bitwidth:4}
			}
			PPRE {
				(flecs.doc.Description, flecs.doc.Brief) : {"APB prescaler"}
				Field : {bitoffset:12, bitwidth:3}
			}
			HPRE {
				(flecs.doc.Description, flecs.doc.Brief) : {"AHB prescaler"}
				Field : {bitoffset:8, bitwidth:4}
			}
			SWS {
				(flecs.doc.Description, flecs.doc.Brief) : {"System clock switch status"}
				Field : {bitoffset:3, bitwidth:3}
			}
			SW {
				(flecs.doc.Description, flecs.doc.Brief) : {"System clock switch"}
				Field : {bitoffset:0, bitwidth:3}
			}
		}
		PLLSYSCFGR {
			(flecs.doc.Description, flecs.doc.Brief) : {"PLL configuration register"}
			Register : {address:0}
			PLLSRC {
				(flecs.doc.Description, flecs.doc.Brief) : {"PLL input clock source"}
				Field : {bitoffset:0, bitwidth:2}
			}
			PLLM {
				(flecs.doc.Description, flecs.doc.Brief) : {"Division factor M of the PLL input clock\n              divider"}
				Field : {bitoffset:4, bitwidth:3}
			}
			PLLN {
				(flecs.doc.Description, flecs.doc.Brief) : {"PLL frequency multiplication factor\n              N"}
				Field : {bitoffset:8, bitwidth:8}
			}
			PLLPEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"PLLPCLK clock output\n              enable"}
				Field : {bitoffset:16, bitwidth:1}
			}
			PLLP {
				(flecs.doc.Description, flecs.doc.Brief) : {"PLL VCO division factor P for PLLPCLK\n              clock output"}
				Field : {bitoffset:17, bitwidth:5}
			}
			PLLQEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"PLLQCLK clock output\n              enable"}
				Field : {bitoffset:24, bitwidth:1}
			}
			PLLQ {
				(flecs.doc.Description, flecs.doc.Brief) : {"PLL VCO division factor Q for PLLQCLK\n              clock output"}
				Field : {bitoffset:25, bitwidth:3}
			}
			PLLREN {
				(flecs.doc.Description, flecs.doc.Brief) : {"PLLRCLK clock output\n              enable"}
				Field : {bitoffset:28, bitwidth:1}
			}
			PLLR {
				(flecs.doc.Description, flecs.doc.Brief) : {"PLL VCO division factor R for PLLRCLK\n              clock output"}
				Field : {bitoffset:29, bitwidth:3}
			}
		}
		CIER {
			(flecs.doc.Description, flecs.doc.Brief) : {"Clock interrupt enable\n          register"}
			Register : {address:0}
			LSIRDYIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"LSI ready interrupt enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
			LSERDYIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"LSE ready interrupt enable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			HSIRDYIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"HSI ready interrupt enable"}
				Field : {bitoffset:3, bitwidth:1}
			}
			HSERDYIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"HSE ready interrupt enable"}
				Field : {bitoffset:4, bitwidth:1}
			}
			PLLSYSRDYIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"PLL ready interrupt enable"}
				Field : {bitoffset:5, bitwidth:1}
			}
		}
		CIFR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Clock interrupt flag register"}
			Register : {address:0}
			LSIRDYF {
				(flecs.doc.Description, flecs.doc.Brief) : {"LSI ready interrupt flag"}
				Field : {bitoffset:0, bitwidth:1}
			}
			LSERDYF {
				(flecs.doc.Description, flecs.doc.Brief) : {"LSE ready interrupt flag"}
				Field : {bitoffset:1, bitwidth:1}
			}
			HSIRDYF {
				(flecs.doc.Description, flecs.doc.Brief) : {"HSI ready interrupt flag"}
				Field : {bitoffset:3, bitwidth:1}
			}
			HSERDYF {
				(flecs.doc.Description, flecs.doc.Brief) : {"HSE ready interrupt flag"}
				Field : {bitoffset:4, bitwidth:1}
			}
			PLLSYSRDYF {
				(flecs.doc.Description, flecs.doc.Brief) : {"PLL ready interrupt flag"}
				Field : {bitoffset:5, bitwidth:1}
			}
			CSSF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clock security system interrupt\n              flag"}
				Field : {bitoffset:8, bitwidth:1}
			}
			LSECSSF {
				(flecs.doc.Description, flecs.doc.Brief) : {"LSE Clock security system interrupt\n              flag"}
				Field : {bitoffset:9, bitwidth:1}
			}
		}
		CICR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Clock interrupt clear register"}
			Register : {address:0}
			LSIRDYC {
				(flecs.doc.Description, flecs.doc.Brief) : {"LSI ready interrupt clear"}
				Field : {bitoffset:0, bitwidth:1}
			}
			LSERDYC {
				(flecs.doc.Description, flecs.doc.Brief) : {"LSE ready interrupt clear"}
				Field : {bitoffset:1, bitwidth:1}
			}
			HSIRDYC {
				(flecs.doc.Description, flecs.doc.Brief) : {"HSI ready interrupt clear"}
				Field : {bitoffset:3, bitwidth:1}
			}
			HSERDYC {
				(flecs.doc.Description, flecs.doc.Brief) : {"HSE ready interrupt clear"}
				Field : {bitoffset:4, bitwidth:1}
			}
			PLLSYSRDYC {
				(flecs.doc.Description, flecs.doc.Brief) : {"PLL ready interrupt clear"}
				Field : {bitoffset:5, bitwidth:1}
			}
			CSSC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clock security system interrupt\n              clear"}
				Field : {bitoffset:8, bitwidth:1}
			}
			LSECSSC {
				(flecs.doc.Description, flecs.doc.Brief) : {"LSE Clock security system interrupt\n              clear"}
				Field : {bitoffset:9, bitwidth:1}
			}
		}
		IOPRSTR {
			(flecs.doc.Description, flecs.doc.Brief) : {"I/O port reset register"}
			Register : {address:0}
			GPIOARST {
				(flecs.doc.Description, flecs.doc.Brief) : {"GPIOARST"}
				Field : {bitoffset:0, bitwidth:1}
			}
			GPIOBRST {
				(flecs.doc.Description, flecs.doc.Brief) : {"GPIOBRST"}
				Field : {bitoffset:1, bitwidth:1}
			}
			GPIOCRST {
				(flecs.doc.Description, flecs.doc.Brief) : {"GPIOCRST"}
				Field : {bitoffset:2, bitwidth:1}
			}
			GPIODRST {
				(flecs.doc.Description, flecs.doc.Brief) : {"GPIODRST"}
				Field : {bitoffset:3, bitwidth:1}
			}
			GPIOERST {
				(flecs.doc.Description, flecs.doc.Brief) : {"GPIOERST"}
				Field : {bitoffset:4, bitwidth:1}
			}
			GPIOFRST {
				(flecs.doc.Description, flecs.doc.Brief) : {"GPIOFRST"}
				Field : {bitoffset:5, bitwidth:1}
			}
		}
		AHBRSTR {
			(flecs.doc.Description, flecs.doc.Brief) : {"AHB peripheral reset register"}
			Register : {address:0}
			DMA1RST {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA1 reset"}
				Field : {bitoffset:0, bitwidth:1}
			}
			DMA2RST {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA1 reset"}
				Field : {bitoffset:1, bitwidth:1}
			}
			FLASHRST {
				(flecs.doc.Description, flecs.doc.Brief) : {"FLITF reset"}
				Field : {bitoffset:8, bitwidth:1}
			}
			CRCRST {
				(flecs.doc.Description, flecs.doc.Brief) : {"CRC reset"}
				Field : {bitoffset:12, bitwidth:1}
			}
		}
		APBRSTR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"APB peripheral reset register\n          1"}
			Register : {address:0}
			TIM3RST {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM3 timer reset"}
				Field : {bitoffset:1, bitwidth:1}
			}
			TIM4RST {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM4 timer reset"}
				Field : {bitoffset:2, bitwidth:1}
			}
			TIM6RST {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM6 timer reset"}
				Field : {bitoffset:4, bitwidth:1}
			}
			TIM7RST {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM7 timer reset"}
				Field : {bitoffset:5, bitwidth:1}
			}
			USART5RST {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART5RST"}
				Field : {bitoffset:8, bitwidth:1}
			}
			USART6RST {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART6RST"}
				Field : {bitoffset:9, bitwidth:1}
			}
			USBRST {
				(flecs.doc.Description, flecs.doc.Brief) : {"USBRST"}
				Field : {bitoffset:13, bitwidth:1}
			}
			SPI2RST {
				(flecs.doc.Description, flecs.doc.Brief) : {"SPI2 reset"}
				Field : {bitoffset:14, bitwidth:1}
			}
			SPI3RST {
				(flecs.doc.Description, flecs.doc.Brief) : {"SPI3 reset"}
				Field : {bitoffset:15, bitwidth:1}
			}
			USART2RST {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART2 reset"}
				Field : {bitoffset:17, bitwidth:1}
			}
			USART3RST {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART3 reset"}
				Field : {bitoffset:18, bitwidth:1}
			}
			USART4RST {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART4 reset"}
				Field : {bitoffset:19, bitwidth:1}
			}
			I2C1RST {
				(flecs.doc.Description, flecs.doc.Brief) : {"I2C1 reset"}
				Field : {bitoffset:21, bitwidth:1}
			}
			I2C2RST {
				(flecs.doc.Description, flecs.doc.Brief) : {"I2C2 reset"}
				Field : {bitoffset:22, bitwidth:1}
			}
			I2C3RST {
				(flecs.doc.Description, flecs.doc.Brief) : {"I2C3RST reset"}
				Field : {bitoffset:23, bitwidth:1}
			}
			DBGRST {
				(flecs.doc.Description, flecs.doc.Brief) : {"Debug support reset"}
				Field : {bitoffset:27, bitwidth:1}
			}
			PWRRST {
				(flecs.doc.Description, flecs.doc.Brief) : {"Power interface reset"}
				Field : {bitoffset:28, bitwidth:1}
			}
		}
		APBRSTR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"APB peripheral reset register\n          2"}
			Register : {address:0}
			SYSCFGRST {
				(flecs.doc.Description, flecs.doc.Brief) : {"SYSCFG, COMP and VREFBUF\n              reset"}
				Field : {bitoffset:0, bitwidth:1}
			}
			TIM1RST {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM1 timer reset"}
				Field : {bitoffset:11, bitwidth:1}
			}
			SPI1RST {
				(flecs.doc.Description, flecs.doc.Brief) : {"SPI1 reset"}
				Field : {bitoffset:12, bitwidth:1}
			}
			USART1RST {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART1 reset"}
				Field : {bitoffset:14, bitwidth:1}
			}
			TIM14RST {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM14 timer reset"}
				Field : {bitoffset:15, bitwidth:1}
			}
			TIM15RST {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM15 timer reset"}
				Field : {bitoffset:16, bitwidth:1}
			}
			TIM16RST {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM16 timer reset"}
				Field : {bitoffset:17, bitwidth:1}
			}
			TIM17RST {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM17 timer reset"}
				Field : {bitoffset:18, bitwidth:1}
			}
			ADCRST {
				(flecs.doc.Description, flecs.doc.Brief) : {"ADC reset"}
				Field : {bitoffset:20, bitwidth:1}
			}
		}
		IOPENR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO clock enable register"}
			Register : {address:0}
			GPIOAEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"I/O port A clock enable during Sleep\n              mode"}
				Field : {bitoffset:0, bitwidth:1}
			}
			GPIOBEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"I/O port B clock enable during Sleep\n              mode"}
				Field : {bitoffset:1, bitwidth:1}
			}
			GPIOCEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"I/O port C clock enable during Sleep\n              mode"}
				Field : {bitoffset:2, bitwidth:1}
			}
			GPIODEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"I/O port D clock enable during Sleep\n              mode"}
				Field : {bitoffset:3, bitwidth:1}
			}
			GPIOEEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"I/O port E clock enable during Sleep\n              mode"}
				Field : {bitoffset:4, bitwidth:1}
			}
			GPIOFEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"I/O port F clock enable during Sleep\n              mode"}
				Field : {bitoffset:5, bitwidth:1}
			}
		}
		AHBENR {
			(flecs.doc.Description, flecs.doc.Brief) : {"AHB peripheral clock enable\n          register"}
			Register : {address:0}
			DMA1EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA1 clock enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
			DMA2EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA2 clock enable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			FLASHEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Flash memory interface clock\n              enable"}
				Field : {bitoffset:8, bitwidth:1}
			}
			CRCEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"CRC clock enable"}
				Field : {bitoffset:12, bitwidth:1}
			}
		}
		APBENR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"APB peripheral clock enable register\n          1"}
			Register : {address:0}
			TIM3EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM3 timer clock enable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			TIM4EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM4 timer clock enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			TIM6EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM6 timer clock enable"}
				Field : {bitoffset:4, bitwidth:1}
			}
			TIM7EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM7 timer clock enable"}
				Field : {bitoffset:5, bitwidth:1}
			}
			USART5EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART5EN"}
				Field : {bitoffset:8, bitwidth:1}
			}
			USART6EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART6EN"}
				Field : {bitoffset:9, bitwidth:1}
			}
			RTCAPBEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"RTC APB clock enable"}
				Field : {bitoffset:10, bitwidth:1}
			}
			WWDGEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"WWDG clock enable"}
				Field : {bitoffset:11, bitwidth:1}
			}
			USBEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"USBEN"}
				Field : {bitoffset:13, bitwidth:1}
			}
			SPI2EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"SPI2 clock enable"}
				Field : {bitoffset:14, bitwidth:1}
			}
			SPI3EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"SPI3 clock enable"}
				Field : {bitoffset:15, bitwidth:1}
			}
			USART2EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART2 clock enable"}
				Field : {bitoffset:17, bitwidth:1}
			}
			USART3EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART3 clock enable"}
				Field : {bitoffset:18, bitwidth:1}
			}
			USART4EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART4 clock enable"}
				Field : {bitoffset:19, bitwidth:1}
			}
			I2C1EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"I2C1 clock enable"}
				Field : {bitoffset:21, bitwidth:1}
			}
			I2C2EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"I2C2 clock enable"}
				Field : {bitoffset:22, bitwidth:1}
			}
			I2C3EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"I2C3 clock enable"}
				Field : {bitoffset:23, bitwidth:1}
			}
			DBGEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Debug support clock enable"}
				Field : {bitoffset:27, bitwidth:1}
			}
			PWREN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Power interface clock\n              enable"}
				Field : {bitoffset:28, bitwidth:1}
			}
		}
		APBENR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"APB peripheral clock enable register\n          2"}
			Register : {address:0}
			SYSCFGEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"SYSCFG, COMP and VREFBUF clock\n              enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
			TIM1EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM1 timer clock enable"}
				Field : {bitoffset:11, bitwidth:1}
			}
			SPI1EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"SPI1 clock enable"}
				Field : {bitoffset:12, bitwidth:1}
			}
			USART1EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART1 clock enable"}
				Field : {bitoffset:14, bitwidth:1}
			}
			TIM14EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM14 timer clock enable"}
				Field : {bitoffset:15, bitwidth:1}
			}
			TIM15EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM15 timer clock enable"}
				Field : {bitoffset:16, bitwidth:1}
			}
			TIM16EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM16 timer clock enable"}
				Field : {bitoffset:17, bitwidth:1}
			}
			TIM17EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM16 timer clock enable"}
				Field : {bitoffset:18, bitwidth:1}
			}
			ADCEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"ADC clock enable"}
				Field : {bitoffset:20, bitwidth:1}
			}
		}
		IOPSMENR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO in Sleep mode clock enable\n          register"}
			Register : {address:0}
			GPIOASMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"I/O port A clock enable during Sleep\n              mode"}
				Field : {bitoffset:0, bitwidth:1}
			}
			GPIOBSMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"I/O port B clock enable during Sleep\n              mode"}
				Field : {bitoffset:1, bitwidth:1}
			}
			GPIOCSMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"I/O port C clock enable during Sleep\n              mode"}
				Field : {bitoffset:2, bitwidth:1}
			}
			GPIODSMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"I/O port D clock enable during Sleep\n              mode"}
				Field : {bitoffset:3, bitwidth:1}
			}
			GPIOESMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"I/O port E clock enable during Sleep\n              mode"}
				Field : {bitoffset:4, bitwidth:1}
			}
			GPIOFSMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"I/O port F clock enable during Sleep\n              mode"}
				Field : {bitoffset:5, bitwidth:1}
			}
		}
		AHBSMENR {
			(flecs.doc.Description, flecs.doc.Brief) : {"AHB peripheral clock enable in Sleep mode\n          register"}
			Register : {address:0}
			DMA1SMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA1 clock enable during Sleep\n              mode"}
				Field : {bitoffset:0, bitwidth:1}
			}
			DMA2SMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA2 clock enable during Sleep\n              mode"}
				Field : {bitoffset:1, bitwidth:1}
			}
			FLASHSMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Flash memory interface clock enable\n              during Sleep mode"}
				Field : {bitoffset:8, bitwidth:1}
			}
			SRAMSMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"SRAM clock enable during Sleep\n              mode"}
				Field : {bitoffset:9, bitwidth:1}
			}
			CRCSMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"CRC clock enable during Sleep\n              mode"}
				Field : {bitoffset:12, bitwidth:1}
			}
		}
		APBSMENR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"APB peripheral clock enable in Sleep mode\n          register 1"}
			Register : {address:0}
			TIM3SMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM3 timer clock enable during Sleep\n              mode"}
				Field : {bitoffset:1, bitwidth:1}
			}
			TIM4SMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM4 timer clock enable during Sleep\n              mode"}
				Field : {bitoffset:2, bitwidth:1}
			}
			TIM6SMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM6 timer clock enable during Sleep\n              mode"}
				Field : {bitoffset:4, bitwidth:1}
			}
			TIM7SMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM7 timer clock enable during Sleep\n              mode"}
				Field : {bitoffset:5, bitwidth:1}
			}
			USART5SMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART5 clock enable"}
				Field : {bitoffset:8, bitwidth:1}
			}
			USART6SMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART6 clock enable"}
				Field : {bitoffset:9, bitwidth:1}
			}
			RTCAPBSMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"RTC APB clock enable during Sleep\n              mode"}
				Field : {bitoffset:10, bitwidth:1}
			}
			WWDGSMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"WWDG clock enable during Sleep\n              mode"}
				Field : {bitoffset:11, bitwidth:1}
			}
			USBSMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"USB clock enable during Sleep\n              mode"}
				Field : {bitoffset:13, bitwidth:1}
			}
			SPI2SMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"SPI2 clock enable during Sleep\n              mode"}
				Field : {bitoffset:14, bitwidth:1}
			}
			SPI3SMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"SPI3 clock enable during Sleep\n              mode"}
				Field : {bitoffset:15, bitwidth:1}
			}
			USART2SMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART2 clock enable during Sleep\n              mode"}
				Field : {bitoffset:17, bitwidth:1}
			}
			USART3SMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART3 clock enable during Sleep\n              mode"}
				Field : {bitoffset:18, bitwidth:1}
			}
			USART4SMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART4 clock enable during Sleep\n              mode"}
				Field : {bitoffset:19, bitwidth:1}
			}
			I2C1SMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"I2C1 clock enable during Sleep\n              mode"}
				Field : {bitoffset:21, bitwidth:1}
			}
			I2C2SMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"I2C2 clock enable during Sleep\n              mode"}
				Field : {bitoffset:22, bitwidth:1}
			}
			I2C3SMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"I2C3 clock enable during Sleep\n              mode"}
				Field : {bitoffset:23, bitwidth:1}
			}
			DBGSMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Debug support clock enable during Sleep\n              mode"}
				Field : {bitoffset:27, bitwidth:1}
			}
			PWRSMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Power interface clock enable during\n              Sleep mode"}
				Field : {bitoffset:28, bitwidth:1}
			}
		}
		APBSMENR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"APB peripheral clock enable in Sleep mode\n          register 2"}
			Register : {address:0}
			SYSCFGSMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"SYSCFG, COMP and VREFBUF clock enable\n              during Sleep mode"}
				Field : {bitoffset:0, bitwidth:1}
			}
			TIM1SMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM1 timer clock enable during Sleep\n              mode"}
				Field : {bitoffset:11, bitwidth:1}
			}
			SPI1SMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"SPI1 clock enable during Sleep\n              mode"}
				Field : {bitoffset:12, bitwidth:1}
			}
			USART1SMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART1 clock enable during Sleep\n              mode"}
				Field : {bitoffset:14, bitwidth:1}
			}
			TIM14SMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM14 timer clock enable during Sleep\n              mode"}
				Field : {bitoffset:15, bitwidth:1}
			}
			TIM15SMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM15 timer clock enable during Sleep\n              mode"}
				Field : {bitoffset:16, bitwidth:1}
			}
			TIM16SMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM16 timer clock enable during Sleep\n              mode"}
				Field : {bitoffset:17, bitwidth:1}
			}
			TIM17SMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM16 timer clock enable during Sleep\n              mode"}
				Field : {bitoffset:18, bitwidth:1}
			}
			ADCSMEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"ADC clock enable during Sleep\n              mode"}
				Field : {bitoffset:20, bitwidth:1}
			}
		}
		CCIPR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Peripherals independent clock configuration\n          register"}
			Register : {address:0}
			USART1SEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART1 clock source\n              selection"}
				Field : {bitoffset:0, bitwidth:2}
			}
			USART2SEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART2 clock source\n              selection"}
				Field : {bitoffset:2, bitwidth:2}
			}
			USART3SEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART3 clock source\n              selection"}
				Field : {bitoffset:4, bitwidth:2}
			}
			I2C1SEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"I2C1 clock source\n              selection"}
				Field : {bitoffset:12, bitwidth:2}
			}
			I2S2SEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"I2S1 clock source\n              selection"}
				Field : {bitoffset:14, bitwidth:2}
			}
			TIM1SEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM1 clock source\n              selection"}
				Field : {bitoffset:22, bitwidth:1}
			}
			TIM15SEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM15 clock source\n              selection"}
				Field : {bitoffset:24, bitwidth:1}
			}
			ADCSEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"ADCs clock source\n              selection"}
				Field : {bitoffset:30, bitwidth:2}
			}
		}
		CCIPR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"Peripherals independent clock configuration register 2"}
			Register : {address:0}
			I2S1SEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"2S1SEL"}
				Field : {bitoffset:0, bitwidth:2}
			}
			I2S2SEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"I2S2SEL"}
				Field : {bitoffset:2, bitwidth:2}
			}
			USBSEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"USBSEL"}
				Field : {bitoffset:12, bitwidth:2}
			}
		}
		BDCR {
			(flecs.doc.Description, flecs.doc.Brief) : {"RTC domain control register"}
			Register : {address:0}
			LSEON {
				(flecs.doc.Description, flecs.doc.Brief) : {"LSE oscillator enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
			LSERDY {
				(flecs.doc.Description, flecs.doc.Brief) : {"LSE oscillator ready"}
				Field : {bitoffset:1, bitwidth:1}
			}
			LSEBYP {
				(flecs.doc.Description, flecs.doc.Brief) : {"LSE oscillator bypass"}
				Field : {bitoffset:2, bitwidth:1}
			}
			LSEDRV {
				(flecs.doc.Description, flecs.doc.Brief) : {"LSE oscillator drive\n              capability"}
				Field : {bitoffset:3, bitwidth:2}
			}
			LSECSSON {
				(flecs.doc.Description, flecs.doc.Brief) : {"CSS on LSE enable"}
				Field : {bitoffset:5, bitwidth:1}
			}
			LSECSSD {
				(flecs.doc.Description, flecs.doc.Brief) : {"CSS on LSE failure\n              Detection"}
				Field : {bitoffset:6, bitwidth:1}
			}
			RTCSEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"RTC clock source selection"}
				Field : {bitoffset:8, bitwidth:2}
			}
			RTCEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"RTC clock enable"}
				Field : {bitoffset:15, bitwidth:1}
			}
			BDRST {
				(flecs.doc.Description, flecs.doc.Brief) : {"RTC domain software reset"}
				Field : {bitoffset:16, bitwidth:1}
			}
			LSCOEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Low-speed clock output (LSCO)\n              enable"}
				Field : {bitoffset:24, bitwidth:1}
			}
			LSCOSEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Low-speed clock output\n              selection"}
				Field : {bitoffset:25, bitwidth:1}
			}
		}
		CSR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Control/status register"}
			Register : {address:0}
			LSION {
				(flecs.doc.Description, flecs.doc.Brief) : {"LSI oscillator enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
			LSIRDY {
				(flecs.doc.Description, flecs.doc.Brief) : {"LSI oscillator ready"}
				Field : {bitoffset:1, bitwidth:1}
			}
			RMVF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Remove reset flags"}
				Field : {bitoffset:23, bitwidth:1}
			}
			OBLRSTF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Option byte loader reset\n              flag"}
				Field : {bitoffset:25, bitwidth:1}
			}
			PINRSTF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Pin reset flag"}
				Field : {bitoffset:26, bitwidth:1}
			}
			PWRRSTF {
				(flecs.doc.Description, flecs.doc.Brief) : {"BOR or POR/PDR flag"}
				Field : {bitoffset:27, bitwidth:1}
			}
			SFTRSTF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Software reset flag"}
				Field : {bitoffset:28, bitwidth:1}
			}
			IWDGRSTF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Independent window watchdog reset\n              flag"}
				Field : {bitoffset:29, bitwidth:1}
			}
			WWDGRSTF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Window watchdog reset flag"}
				Field : {bitoffset:30, bitwidth:1}
			}
			LPWRRSTF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Low-power reset flag"}
				Field : {bitoffset:31, bitwidth:1}
			}
		}
	}
	PWR {
		(flecs.doc.Description, flecs.doc.Brief) : {"Power control"}
		CR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"Power control register 1"}
			Register : {address:0}
			LPR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Low-power run"}
				Field : {bitoffset:14, bitwidth:1}
			}
			VOS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Voltage scaling range\n              selection"}
				Field : {bitoffset:9, bitwidth:2}
			}
			DBP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Disable backup domain write\n              protection"}
				Field : {bitoffset:8, bitwidth:1}
			}
			FPD_LPSLP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Flash memory powered down during\n              Low-power sleep mode"}
				Field : {bitoffset:5, bitwidth:1}
			}
			FPD_LPRUN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Flash memory powered down during\n              Low-power run mode"}
				Field : {bitoffset:4, bitwidth:1}
			}
			FPD_STOP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Flash memory powered down during Stop\n              mode"}
				Field : {bitoffset:3, bitwidth:1}
			}
			LPMS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Low-power mode selection"}
				Field : {bitoffset:0, bitwidth:3}
			}
		}
		CR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"Power control register 2"}
			Register : {address:0}
			USV {
				(flecs.doc.Description, flecs.doc.Brief) : {"USV"}
				Field : {bitoffset:10, bitwidth:1}
			}
		}
		CR3 {
			(flecs.doc.Description, flecs.doc.Brief) : {"Power control register 3"}
			Register : {address:0}
			EWUP1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Enable Wakeup pin WKUP1"}
				Field : {bitoffset:0, bitwidth:1}
			}
			EWUP2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Enable Wakeup pin WKUP2"}
				Field : {bitoffset:1, bitwidth:1}
			}
			EWUP3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Enable Wakeup pin WKUP3"}
				Field : {bitoffset:2, bitwidth:1}
			}
			EWUP4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Enable Wakeup pin WKUP4"}
				Field : {bitoffset:3, bitwidth:1}
			}
			EWUP5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Enable WKUP5 wakeup pin"}
				Field : {bitoffset:4, bitwidth:1}
			}
			EWUP6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Enable WKUP6 wakeup pin"}
				Field : {bitoffset:5, bitwidth:1}
			}
			APC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Apply pull-up and pull-down\n              configuration"}
				Field : {bitoffset:10, bitwidth:1}
			}
			EIWUL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Enable internal wakeup\n              line"}
				Field : {bitoffset:15, bitwidth:1}
			}
		}
		CR4 {
			(flecs.doc.Description, flecs.doc.Brief) : {"Power control register 4"}
			Register : {address:0}
			WP1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wakeup pin WKUP1 polarity"}
				Field : {bitoffset:0, bitwidth:1}
			}
			WP2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wakeup pin WKUP2 polarity"}
				Field : {bitoffset:1, bitwidth:1}
			}
			WP3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wakeup pin WKUP3 polarity"}
				Field : {bitoffset:2, bitwidth:1}
			}
			WP4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wakeup pin WKUP4 polarity"}
				Field : {bitoffset:3, bitwidth:1}
			}
			WP5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wakeup pin WKUP5 polarity"}
				Field : {bitoffset:4, bitwidth:1}
			}
			WP6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"WKUP6 wakeup pin polarity"}
				Field : {bitoffset:5, bitwidth:1}
			}
			VBE {
				(flecs.doc.Description, flecs.doc.Brief) : {"VBAT battery charging\n              enable"}
				Field : {bitoffset:8, bitwidth:1}
			}
			VBRS {
				(flecs.doc.Description, flecs.doc.Brief) : {"VBAT battery charging resistor\n              selection"}
				Field : {bitoffset:9, bitwidth:1}
			}
		}
		SR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"Power status register 1"}
			Register : {address:0}
			WUF1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wakeup flag 1"}
				Field : {bitoffset:0, bitwidth:1}
			}
			WUF2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wakeup flag 2"}
				Field : {bitoffset:1, bitwidth:1}
			}
			WUF3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wakeup flag 3"}
				Field : {bitoffset:2, bitwidth:1}
			}
			WUF4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wakeup flag 4"}
				Field : {bitoffset:3, bitwidth:1}
			}
			WUF5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wakeup flag 5"}
				Field : {bitoffset:4, bitwidth:1}
			}
			WUF6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wakeup flag 6"}
				Field : {bitoffset:5, bitwidth:1}
			}
			SBF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Standby flag"}
				Field : {bitoffset:8, bitwidth:1}
			}
			WUFI {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wakeup flag internal"}
				Field : {bitoffset:15, bitwidth:1}
			}
		}
		SR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"Power status register 2"}
			Register : {address:0}
			VOSF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Voltage scaling flag"}
				Field : {bitoffset:10, bitwidth:1}
			}
			REGLPF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Low-power regulator flag"}
				Field : {bitoffset:9, bitwidth:1}
			}
			REGLPS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Low-power regulator\n              started"}
				Field : {bitoffset:8, bitwidth:1}
			}
			FLASH_RDY {
				(flecs.doc.Description, flecs.doc.Brief) : {"Flash ready flag"}
				Field : {bitoffset:7, bitwidth:1}
			}
		}
		SCR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Power status clear register"}
			Register : {address:0}
			CSBF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clear standby flag"}
				Field : {bitoffset:8, bitwidth:1}
			}
			CWUF6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clear wakeup flag 6"}
				Field : {bitoffset:5, bitwidth:1}
			}
			CWUF5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clear wakeup flag 5"}
				Field : {bitoffset:4, bitwidth:1}
			}
			CWUF4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clear wakeup flag 4"}
				Field : {bitoffset:3, bitwidth:1}
			}
			CWUF3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clear wakeup flag 3"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CWUF2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clear wakeup flag 2"}
				Field : {bitoffset:1, bitwidth:1}
			}
			CWUF1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clear wakeup flag 1"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		PUCRA {
			(flecs.doc.Description, flecs.doc.Brief) : {"Power Port A pull-up control\n          register"}
			Register : {address:0}
			PU15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			PU14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			PU13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			PU12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			PU11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			PU10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			PU9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			PU8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			PU7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			PU6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			PU5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			PU4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			PU3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			PU2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			PU1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			PU0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		PDCRA {
			(flecs.doc.Description, flecs.doc.Brief) : {"Power Port A pull-down control\n          register"}
			Register : {address:0}
			PD15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			PD14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			PD13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			PD12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			PD11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			PD10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			PD9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			PD8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			PD7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			PD6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			PD5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			PD4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			PD3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			PD2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			PD1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			PD0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port A pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		PUCRB {
			(flecs.doc.Description, flecs.doc.Brief) : {"Power Port B pull-up control\n          register"}
			Register : {address:0}
			PU15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			PU14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			PU13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			PU12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			PU11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			PU10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			PU9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			PU8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			PU7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			PU6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			PU5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			PU4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			PU3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			PU2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			PU1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			PU0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		PDCRB {
			(flecs.doc.Description, flecs.doc.Brief) : {"Power Port B pull-down control\n          register"}
			Register : {address:0}
			PD15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			PD14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			PD13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			PD12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			PD11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			PD10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			PD9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			PD8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			PD7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			PD6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			PD5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			PD4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			PD3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			PD2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			PD1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			PD0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port B pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		PUCRC {
			(flecs.doc.Description, flecs.doc.Brief) : {"Power Port C pull-up control\n          register"}
			Register : {address:0}
			PU15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			PU14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			PU13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			PU12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			PU11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			PU10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			PU9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			PU8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			PU7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			PU6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			PU5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			PU4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			PU3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			PU2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			PU1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			PU0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		PDCRC {
			(flecs.doc.Description, flecs.doc.Brief) : {"Power Port C pull-down control\n          register"}
			Register : {address:0}
			PD15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			PD14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			PD13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			PD12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			PD11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			PD10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			PD9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			PD8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			PD7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			PD6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			PD5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			PD4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			PD3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			PD2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			PD1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			PD0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port C pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		PUCRD {
			(flecs.doc.Description, flecs.doc.Brief) : {"Power Port D pull-up control\n          register"}
			Register : {address:0}
			PU15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			PU14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			PU13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			PU12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			PU11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			PU10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			PU9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			PU8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			PU7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			PU6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			PU5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			PU4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			PU3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			PU2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			PU1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			PU0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		PDCRD {
			(flecs.doc.Description, flecs.doc.Brief) : {"Power Port D pull-down control\n          register"}
			Register : {address:0}
			PD15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			PD14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			PD13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			PD12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			PD11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			PD10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			PD9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			PD8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			PD7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			PD6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			PD5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			PD4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			PD3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			PD2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			PD1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			PD0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port D pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		PUCRE {
			(flecs.doc.Description, flecs.doc.Brief) : {"Power Port E pull-UP control\n          register"}
			Register : {address:0}
			PU15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			PU14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			PU13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			PU12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			PU11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			PU10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			PU9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			PU8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			PU7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			PU6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			PU5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			PU4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			PU3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			PU2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			PU1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			PU0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		PDCRE {
			(flecs.doc.Description, flecs.doc.Brief) : {"Power Port E pull-down control\n          register"}
			Register : {address:0}
			PD15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			PD14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			PD13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			PD12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			PD11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			PD10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			PD9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			PD8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			PD7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			PD6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			PD5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			PD4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			PD3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			PD2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			PD1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			PD0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port E pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		PUCRF {
			(flecs.doc.Description, flecs.doc.Brief) : {"Power Port F pull-up control\n          register"}
			Register : {address:0}
			PU13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			PU12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			PU11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			PU10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			PU9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			PU8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			PU7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			PU6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			PU5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			PU4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			PU3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			PU2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			PU1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			PU0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-up bit y\n              (y=0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		PDCRF {
			(flecs.doc.Description, flecs.doc.Brief) : {"Power Port F pull-down control\n          register"}
			Register : {address:0}
			PD13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			PD12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			PD11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			PD10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			PD9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			PD8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			PD7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			PD6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			PD5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			PD4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			PD3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			PD2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			PD1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			PD0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port F pull-down bit y\n              (y=0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
	}
	DMA1 {
		(flecs.doc.Description, flecs.doc.Brief) : {"DMA controller"}
		DMA_ISR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA interrupt status register "}
			Register : {address:0}
			GIF1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag for channel 1"}
				Field : {bitoffset:0, bitwidth:1}
			}
			TCIF1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete (TC) flag for channel 1"}
				Field : {bitoffset:1, bitwidth:1}
			}
			HTIF1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer (HT) flag for channel 1"}
				Field : {bitoffset:2, bitwidth:1}
			}
			TEIF1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error (TE) flag for channel 1"}
				Field : {bitoffset:3, bitwidth:1}
			}
			GIF2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag for channel 2"}
				Field : {bitoffset:4, bitwidth:1}
			}
			TCIF2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete (TC) flag for channel 2"}
				Field : {bitoffset:5, bitwidth:1}
			}
			HTIF2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer (HT) flag for channel 2"}
				Field : {bitoffset:6, bitwidth:1}
			}
			TEIF2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error (TE) flag for channel 2"}
				Field : {bitoffset:7, bitwidth:1}
			}
			GIF3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag for channel 3"}
				Field : {bitoffset:8, bitwidth:1}
			}
			TCIF3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete (TC) flag for channel 3"}
				Field : {bitoffset:9, bitwidth:1}
			}
			HTIF3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer (HT) flag for channel 3"}
				Field : {bitoffset:10, bitwidth:1}
			}
			TEIF3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error (TE) flag for channel 3"}
				Field : {bitoffset:11, bitwidth:1}
			}
			GIF4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag for channel 4"}
				Field : {bitoffset:12, bitwidth:1}
			}
			TCIF4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete (TC) flag for channel 4"}
				Field : {bitoffset:13, bitwidth:1}
			}
			HTIF4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer (HT) flag for channel 4"}
				Field : {bitoffset:14, bitwidth:1}
			}
			TEIF4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error (TE) flag for channel 4"}
				Field : {bitoffset:15, bitwidth:1}
			}
			GIF5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag for channel 5"}
				Field : {bitoffset:16, bitwidth:1}
			}
			TCIF5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete (TC) flag for channel 5"}
				Field : {bitoffset:17, bitwidth:1}
			}
			HTIF5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer (HT) flag for channel 5"}
				Field : {bitoffset:18, bitwidth:1}
			}
			TEIF5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error (TE) flag for channel 5"}
				Field : {bitoffset:19, bitwidth:1}
			}
			GIF6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag for channel 6"}
				Field : {bitoffset:20, bitwidth:1}
			}
			TCIF6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete (TC) flag for channel 6"}
				Field : {bitoffset:21, bitwidth:1}
			}
			HTIF6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer (HT) flag for channel 6"}
				Field : {bitoffset:22, bitwidth:1}
			}
			TEIF6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error (TE) flag for channel 6"}
				Field : {bitoffset:23, bitwidth:1}
			}
			GIF7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag for channel 7"}
				Field : {bitoffset:24, bitwidth:1}
			}
			TCIF7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete (TC) flag for channel 7"}
				Field : {bitoffset:25, bitwidth:1}
			}
			HTIF7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer (HT) flag for channel 7"}
				Field : {bitoffset:26, bitwidth:1}
			}
			TEIF7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error (TE) flag for channel 7"}
				Field : {bitoffset:27, bitwidth:1}
			}
		}
		DMA_IFCR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA interrupt flag clear register "}
			Register : {address:0}
			CGIF1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag clear for channel 1"}
				Field : {bitoffset:0, bitwidth:1}
			}
			CTCIF1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete flag clear for channel 1"}
				Field : {bitoffset:1, bitwidth:1}
			}
			CHTIF1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer flag clear for channel 1"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CTEIF1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error flag clear for channel 1"}
				Field : {bitoffset:3, bitwidth:1}
			}
			CGIF2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag clear for channel 2"}
				Field : {bitoffset:4, bitwidth:1}
			}
			CTCIF2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete flag clear for channel 2"}
				Field : {bitoffset:5, bitwidth:1}
			}
			CHTIF2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer flag clear for channel 2"}
				Field : {bitoffset:6, bitwidth:1}
			}
			CTEIF2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error flag clear for channel 2"}
				Field : {bitoffset:7, bitwidth:1}
			}
			CGIF3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag clear for channel 3"}
				Field : {bitoffset:8, bitwidth:1}
			}
			CTCIF3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete flag clear for channel 3"}
				Field : {bitoffset:9, bitwidth:1}
			}
			CHTIF3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer flag clear for channel 3"}
				Field : {bitoffset:10, bitwidth:1}
			}
			CTEIF3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error flag clear for channel 3"}
				Field : {bitoffset:11, bitwidth:1}
			}
			CGIF4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag clear for channel 4"}
				Field : {bitoffset:12, bitwidth:1}
			}
			CTCIF4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete flag clear for channel 4"}
				Field : {bitoffset:13, bitwidth:1}
			}
			CHTIF4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer flag clear for channel 4"}
				Field : {bitoffset:14, bitwidth:1}
			}
			CTEIF4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error flag clear for channel 4"}
				Field : {bitoffset:15, bitwidth:1}
			}
			CGIF5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag clear for channel 5"}
				Field : {bitoffset:16, bitwidth:1}
			}
			CTCIF5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete flag clear for channel 5"}
				Field : {bitoffset:17, bitwidth:1}
			}
			CHTIF5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer flag clear for channel 5"}
				Field : {bitoffset:18, bitwidth:1}
			}
			CTEIF5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error flag clear for channel 5"}
				Field : {bitoffset:19, bitwidth:1}
			}
			CGIF6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag clear for channel 6"}
				Field : {bitoffset:20, bitwidth:1}
			}
			CTCIF6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete flag clear for channel 6"}
				Field : {bitoffset:21, bitwidth:1}
			}
			CHTIF6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer flag clear for channel 6"}
				Field : {bitoffset:22, bitwidth:1}
			}
			CTEIF6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error flag clear for channel 6"}
				Field : {bitoffset:23, bitwidth:1}
			}
			CGIF7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag clear for channel 7"}
				Field : {bitoffset:24, bitwidth:1}
			}
			CTCIF7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete flag clear for channel 7"}
				Field : {bitoffset:25, bitwidth:1}
			}
			CHTIF7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer flag clear for channel 7"}
				Field : {bitoffset:26, bitwidth:1}
			}
			CTEIF7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error flag clear for channel 7"}
				Field : {bitoffset:27, bitwidth:1}
			}
		}
		DMA_CCR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel 1 configuration register"}
			Register : {address:0}
			EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"channel enable\nWhen a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by setting the CTEIFx bit of the DMA_IFCR register)."}
				Field : {bitoffset:0, bitwidth:1}
			}
			TCIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:1, bitwidth:1}
			}
			HTIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:2, bitwidth:1}
			}
			TEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:3, bitwidth:1}
			}
			DIR {
				(flecs.doc.Description, flecs.doc.Brief) : {"data transfer direction\nThis bit must be set only in memory-to-peripheral and peripheral-to-memory modes.\nSource attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nDestination attributes "}
				Field : {bitoffset:4, bitwidth:1}
			}
			CIRC {
				(flecs.doc.Description, flecs.doc.Brief) : {"circular mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:5, bitwidth:1}
			}
			PINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral increment mode\nDefines the increment mode for each DMA transfer to the identified peripheral.\nn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this "}
				Field : {bitoffset:6, bitwidth:1}
			}
			MINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory increment mode\nDefines the increment mode for each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field i"}
				Field : {bitoffset:7, bitwidth:1}
			}
			PSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral size\nDefines the data size of each DMA transfer to the identified peripheral.\nIn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifie"}
				Field : {bitoffset:8, bitwidth:2}
			}
			MSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory size\nDefines the data size of each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the pe"}
				Field : {bitoffset:10, bitwidth:2}
			}
			PL {
				(flecs.doc.Description, flecs.doc.Brief) : {"priority level\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:12, bitwidth:2}
			}
			MEM2MEM {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory-to-memory mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:14, bitwidth:1}
			}
		}
		DMA_CNDTR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x number of data register"}
			Register : {address:0}
			NDT {
				(flecs.doc.Description, flecs.doc.Brief) : {"number of data to transfer (0 to 216-1)\nThis field is updated by hardware when the channel is enabled:\nIt is decremented after each single DMA 'read followed by write' transfer, indicating the remaining amount of data items to transfer.\nIt is kept at zero"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		DMA_CPAR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x peripheral address register"}
			Register : {address:0}
			PA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the peripheral data register from/to which the data will be read/written.\nWhen PSIZE[1:0]=01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen PSIZE=10 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		DMA_CMAR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x memory address register"}
			Register : {address:0}
			MA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the memory from/to which the data will be read/written.\nWhen MSIZE[1:0]=01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen MSIZE=10 (32 bits), bits 1 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		DMA_CCR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel 2 configuration register"}
			Register : {address:0}
			EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"channel enable\nWhen a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by setting the CTEIFx bit of the DMA_IFCR register)."}
				Field : {bitoffset:0, bitwidth:1}
			}
			TCIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:1, bitwidth:1}
			}
			HTIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:2, bitwidth:1}
			}
			TEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:3, bitwidth:1}
			}
			DIR {
				(flecs.doc.Description, flecs.doc.Brief) : {"data transfer direction\nThis bit must be set only in memory-to-peripheral and peripheral-to-memory modes.\nSource attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nDestination attributes "}
				Field : {bitoffset:4, bitwidth:1}
			}
			CIRC {
				(flecs.doc.Description, flecs.doc.Brief) : {"circular mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:5, bitwidth:1}
			}
			PINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral increment mode\nDefines the increment mode for each DMA transfer to the identified peripheral.\nn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this "}
				Field : {bitoffset:6, bitwidth:1}
			}
			MINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory increment mode\nDefines the increment mode for each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field i"}
				Field : {bitoffset:7, bitwidth:1}
			}
			PSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral size\nDefines the data size of each DMA transfer to the identified peripheral.\nIn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifie"}
				Field : {bitoffset:8, bitwidth:2}
			}
			MSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory size\nDefines the data size of each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the pe"}
				Field : {bitoffset:10, bitwidth:2}
			}
			PL {
				(flecs.doc.Description, flecs.doc.Brief) : {"priority level\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:12, bitwidth:2}
			}
			MEM2MEM {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory-to-memory mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:14, bitwidth:1}
			}
		}
		DMA_CNDTR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x number of data register"}
			Register : {address:0}
			NDT {
				(flecs.doc.Description, flecs.doc.Brief) : {"number of data to transfer (0 to 216-1)\nThis field is updated by hardware when the channel is enabled:\nIt is decremented after each single DMA 'read followed by write' transfer, indicating the remaining amount of data items to transfer.\nIt is kept at zero"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		DMA_CPAR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x peripheral address register"}
			Register : {address:0}
			PA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the peripheral data register from/to which the data will be read/written.\nWhen PSIZE[1:0]=01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen PSIZE=10 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		DMA_CMAR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x memory address register"}
			Register : {address:0}
			MA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the memory from/to which the data will be read/written.\nWhen MSIZE[1:0]=01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen MSIZE=10 (32 bits), bits 1 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		DMA_CCR3 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel 3 configuration register"}
			Register : {address:0}
			EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"channel enable\nWhen a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by setting the CTEIFx bit of the DMA_IFCR register)."}
				Field : {bitoffset:0, bitwidth:1}
			}
			TCIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:1, bitwidth:1}
			}
			HTIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:2, bitwidth:1}
			}
			TEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:3, bitwidth:1}
			}
			DIR {
				(flecs.doc.Description, flecs.doc.Brief) : {"data transfer direction\nThis bit must be set only in memory-to-peripheral and peripheral-to-memory modes.\nSource attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nDestination attributes "}
				Field : {bitoffset:4, bitwidth:1}
			}
			CIRC {
				(flecs.doc.Description, flecs.doc.Brief) : {"circular mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:5, bitwidth:1}
			}
			PINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral increment mode\nDefines the increment mode for each DMA transfer to the identified peripheral.\nn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this "}
				Field : {bitoffset:6, bitwidth:1}
			}
			MINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory increment mode\nDefines the increment mode for each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field i"}
				Field : {bitoffset:7, bitwidth:1}
			}
			PSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral size\nDefines the data size of each DMA transfer to the identified peripheral.\nIn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifie"}
				Field : {bitoffset:8, bitwidth:2}
			}
			MSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory size\nDefines the data size of each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the pe"}
				Field : {bitoffset:10, bitwidth:2}
			}
			PL {
				(flecs.doc.Description, flecs.doc.Brief) : {"priority level\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:12, bitwidth:2}
			}
			MEM2MEM {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory-to-memory mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:14, bitwidth:1}
			}
		}
		DMA_CNDTR3 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x configuration register"}
			Register : {address:0}
			NDT {
				(flecs.doc.Description, flecs.doc.Brief) : {"number of data to transfer (0 to 216-1)\nThis field is updated by hardware when the channel is enabled:\nIt is decremented after each single DMA 'read followed by write' transfer, indicating the remaining amount of data items to transfer.\nIt is kept at zero"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		DMA_CPAR3 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x peripheral address register"}
			Register : {address:0}
			PA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the peripheral data register from/to which the data will be read/written.\nWhen PSIZE[1:0]=01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen PSIZE=10 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		DMA_CMAR3 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x memory address register"}
			Register : {address:0}
			MA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the memory from/to which the data will be read/written.\nWhen MSIZE[1:0]=01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen MSIZE=10 (32 bits), bits 1 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		DMA_CCR4 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel 4 configuration register"}
			Register : {address:0}
			EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"channel enable\nWhen a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by setting the CTEIFx bit of the DMA_IFCR register)."}
				Field : {bitoffset:0, bitwidth:1}
			}
			TCIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:1, bitwidth:1}
			}
			HTIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:2, bitwidth:1}
			}
			TEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:3, bitwidth:1}
			}
			DIR {
				(flecs.doc.Description, flecs.doc.Brief) : {"data transfer direction\nThis bit must be set only in memory-to-peripheral and peripheral-to-memory modes.\nSource attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nDestination attributes "}
				Field : {bitoffset:4, bitwidth:1}
			}
			CIRC {
				(flecs.doc.Description, flecs.doc.Brief) : {"circular mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:5, bitwidth:1}
			}
			PINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral increment mode\nDefines the increment mode for each DMA transfer to the identified peripheral.\nn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this "}
				Field : {bitoffset:6, bitwidth:1}
			}
			MINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory increment mode\nDefines the increment mode for each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field i"}
				Field : {bitoffset:7, bitwidth:1}
			}
			PSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral size\nDefines the data size of each DMA transfer to the identified peripheral.\nIn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifie"}
				Field : {bitoffset:8, bitwidth:2}
			}
			MSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory size\nDefines the data size of each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the pe"}
				Field : {bitoffset:10, bitwidth:2}
			}
			PL {
				(flecs.doc.Description, flecs.doc.Brief) : {"priority level\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:12, bitwidth:2}
			}
			MEM2MEM {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory-to-memory mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:14, bitwidth:1}
			}
		}
		DMA_CNDTR4 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x configuration register"}
			Register : {address:0}
			NDT {
				(flecs.doc.Description, flecs.doc.Brief) : {"number of data to transfer (0 to 216-1)\nThis field is updated by hardware when the channel is enabled:\nIt is decremented after each single DMA 'read followed by write' transfer, indicating the remaining amount of data items to transfer.\nIt is kept at zero"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		DMA_CPAR4 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x peripheral address register"}
			Register : {address:0}
			PA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the peripheral data register from/to which the data will be read/written.\nWhen PSIZE[1:0]=01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen PSIZE=10 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		DMA_CMAR4 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x memory address register"}
			Register : {address:0}
			MA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the memory from/to which the data will be read/written.\nWhen MSIZE[1:0]=01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen MSIZE=10 (32 bits), bits 1 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		DMA_CCR5 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel 5 configuration register"}
			Register : {address:0}
			EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"channel enable\nWhen a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by setting the CTEIFx bit of the DMA_IFCR register)."}
				Field : {bitoffset:0, bitwidth:1}
			}
			TCIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:1, bitwidth:1}
			}
			HTIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:2, bitwidth:1}
			}
			TEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:3, bitwidth:1}
			}
			DIR {
				(flecs.doc.Description, flecs.doc.Brief) : {"data transfer direction\nThis bit must be set only in memory-to-peripheral and peripheral-to-memory modes.\nSource attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nDestination attributes "}
				Field : {bitoffset:4, bitwidth:1}
			}
			CIRC {
				(flecs.doc.Description, flecs.doc.Brief) : {"circular mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:5, bitwidth:1}
			}
			PINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral increment mode\nDefines the increment mode for each DMA transfer to the identified peripheral.\nn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this "}
				Field : {bitoffset:6, bitwidth:1}
			}
			MINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory increment mode\nDefines the increment mode for each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field i"}
				Field : {bitoffset:7, bitwidth:1}
			}
			PSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral size\nDefines the data size of each DMA transfer to the identified peripheral.\nIn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifie"}
				Field : {bitoffset:8, bitwidth:2}
			}
			MSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory size\nDefines the data size of each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the pe"}
				Field : {bitoffset:10, bitwidth:2}
			}
			PL {
				(flecs.doc.Description, flecs.doc.Brief) : {"priority level\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:12, bitwidth:2}
			}
			MEM2MEM {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory-to-memory mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:14, bitwidth:1}
			}
		}
		DMA_CNDTR5 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x configuration register"}
			Register : {address:0}
			NDT {
				(flecs.doc.Description, flecs.doc.Brief) : {"number of data to transfer (0 to 216-1)\nThis field is updated by hardware when the channel is enabled:\nIt is decremented after each single DMA 'read followed by write' transfer, indicating the remaining amount of data items to transfer.\nIt is kept at zero"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		DMA_CPAR5 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x peripheral address register"}
			Register : {address:0}
			PA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the peripheral data register from/to which the data will be read/written.\nWhen PSIZE[1:0]=01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen PSIZE=10 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		DMA_CMAR5 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x memory address register"}
			Register : {address:0}
			MA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the memory from/to which the data will be read/written.\nWhen MSIZE[1:0]=01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen MSIZE=10 (32 bits), bits 1 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		DMA_CCR6 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel 6 configuration register"}
			Register : {address:0}
			EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"channel enable\nWhen a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by setting the CTEIFx bit of the DMA_IFCR register)."}
				Field : {bitoffset:0, bitwidth:1}
			}
			TCIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:1, bitwidth:1}
			}
			HTIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:2, bitwidth:1}
			}
			TEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:3, bitwidth:1}
			}
			DIR {
				(flecs.doc.Description, flecs.doc.Brief) : {"data transfer direction\nThis bit must be set only in memory-to-peripheral and peripheral-to-memory modes.\nSource attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nDestination attributes "}
				Field : {bitoffset:4, bitwidth:1}
			}
			CIRC {
				(flecs.doc.Description, flecs.doc.Brief) : {"circular mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:5, bitwidth:1}
			}
			PINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral increment mode\nDefines the increment mode for each DMA transfer to the identified peripheral.\nn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this "}
				Field : {bitoffset:6, bitwidth:1}
			}
			MINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory increment mode\nDefines the increment mode for each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field i"}
				Field : {bitoffset:7, bitwidth:1}
			}
			PSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral size\nDefines the data size of each DMA transfer to the identified peripheral.\nIn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifie"}
				Field : {bitoffset:8, bitwidth:2}
			}
			MSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory size\nDefines the data size of each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the pe"}
				Field : {bitoffset:10, bitwidth:2}
			}
			PL {
				(flecs.doc.Description, flecs.doc.Brief) : {"priority level\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:12, bitwidth:2}
			}
			MEM2MEM {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory-to-memory mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:14, bitwidth:1}
			}
		}
		DMA_CNDTR6 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x configuration register"}
			Register : {address:0}
			NDT {
				(flecs.doc.Description, flecs.doc.Brief) : {"number of data to transfer (0 to 216-1)\nThis field is updated by hardware when the channel is enabled:\nIt is decremented after each single DMA 'read followed by write' transfer, indicating the remaining amount of data items to transfer.\nIt is kept at zero"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		DMA_CPAR6 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x peripheral address register"}
			Register : {address:0}
			PA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the peripheral data register from/to which the data will be read/written.\nWhen PSIZE[1:0]=01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen PSIZE=10 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		DMA_CMAR6 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x memory address register"}
			Register : {address:0}
			MA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the memory from/to which the data will be read/written.\nWhen MSIZE[1:0]=01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen MSIZE=10 (32 bits), bits 1 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		DMA_CCR7 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel 7 configuration register"}
			Register : {address:0}
			EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"channel enable\nWhen a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by setting the CTEIFx bit of the DMA_IFCR register)."}
				Field : {bitoffset:0, bitwidth:1}
			}
			TCIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:1, bitwidth:1}
			}
			HTIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:2, bitwidth:1}
			}
			TEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:3, bitwidth:1}
			}
			DIR {
				(flecs.doc.Description, flecs.doc.Brief) : {"data transfer direction\nThis bit must be set only in memory-to-peripheral and peripheral-to-memory modes.\nSource attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nDestination attributes "}
				Field : {bitoffset:4, bitwidth:1}
			}
			CIRC {
				(flecs.doc.Description, flecs.doc.Brief) : {"circular mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:5, bitwidth:1}
			}
			PINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral increment mode\nDefines the increment mode for each DMA transfer to the identified peripheral.\nn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this "}
				Field : {bitoffset:6, bitwidth:1}
			}
			MINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory increment mode\nDefines the increment mode for each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field i"}
				Field : {bitoffset:7, bitwidth:1}
			}
			PSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral size\nDefines the data size of each DMA transfer to the identified peripheral.\nIn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifie"}
				Field : {bitoffset:8, bitwidth:2}
			}
			MSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory size\nDefines the data size of each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the pe"}
				Field : {bitoffset:10, bitwidth:2}
			}
			PL {
				(flecs.doc.Description, flecs.doc.Brief) : {"priority level\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:12, bitwidth:2}
			}
			MEM2MEM {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory-to-memory mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:14, bitwidth:1}
			}
		}
		DMA_CNDTR7 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x configuration register"}
			Register : {address:0}
			NDT {
				(flecs.doc.Description, flecs.doc.Brief) : {"number of data to transfer (0 to 216-1)\nThis field is updated by hardware when the channel is enabled:\nIt is decremented after each single DMA 'read followed by write' transfer, indicating the remaining amount of data items to transfer.\nIt is kept at zero"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		DMA_CPAR7 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x peripheral address register"}
			Register : {address:0}
			PA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the peripheral data register from/to which the data will be read/written.\nWhen PSIZE[1:0]=01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen PSIZE=10 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		DMA_CMAR7 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x memory address register"}
			Register : {address:0}
			MA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the memory from/to which the data will be read/written.\nWhen MSIZE[1:0]=01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen MSIZE=10 (32 bits), bits 1 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
	}
	DMA2 {
		(flecs.doc.Description, flecs.doc.Brief) : {"DMA controller"}
		DMA_ISR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA interrupt status register "}
			Register : {address:0}
			GIF1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag for channel 1"}
				Field : {bitoffset:0, bitwidth:1}
			}
			TCIF1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete (TC) flag for channel 1"}
				Field : {bitoffset:1, bitwidth:1}
			}
			HTIF1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer (HT) flag for channel 1"}
				Field : {bitoffset:2, bitwidth:1}
			}
			TEIF1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error (TE) flag for channel 1"}
				Field : {bitoffset:3, bitwidth:1}
			}
			GIF2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag for channel 2"}
				Field : {bitoffset:4, bitwidth:1}
			}
			TCIF2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete (TC) flag for channel 2"}
				Field : {bitoffset:5, bitwidth:1}
			}
			HTIF2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer (HT) flag for channel 2"}
				Field : {bitoffset:6, bitwidth:1}
			}
			TEIF2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error (TE) flag for channel 2"}
				Field : {bitoffset:7, bitwidth:1}
			}
			GIF3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag for channel 3"}
				Field : {bitoffset:8, bitwidth:1}
			}
			TCIF3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete (TC) flag for channel 3"}
				Field : {bitoffset:9, bitwidth:1}
			}
			HTIF3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer (HT) flag for channel 3"}
				Field : {bitoffset:10, bitwidth:1}
			}
			TEIF3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error (TE) flag for channel 3"}
				Field : {bitoffset:11, bitwidth:1}
			}
			GIF4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag for channel 4"}
				Field : {bitoffset:12, bitwidth:1}
			}
			TCIF4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete (TC) flag for channel 4"}
				Field : {bitoffset:13, bitwidth:1}
			}
			HTIF4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer (HT) flag for channel 4"}
				Field : {bitoffset:14, bitwidth:1}
			}
			TEIF4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error (TE) flag for channel 4"}
				Field : {bitoffset:15, bitwidth:1}
			}
			GIF5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag for channel 5"}
				Field : {bitoffset:16, bitwidth:1}
			}
			TCIF5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete (TC) flag for channel 5"}
				Field : {bitoffset:17, bitwidth:1}
			}
			HTIF5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer (HT) flag for channel 5"}
				Field : {bitoffset:18, bitwidth:1}
			}
			TEIF5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error (TE) flag for channel 5"}
				Field : {bitoffset:19, bitwidth:1}
			}
			GIF6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag for channel 6"}
				Field : {bitoffset:20, bitwidth:1}
			}
			TCIF6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete (TC) flag for channel 6"}
				Field : {bitoffset:21, bitwidth:1}
			}
			HTIF6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer (HT) flag for channel 6"}
				Field : {bitoffset:22, bitwidth:1}
			}
			TEIF6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error (TE) flag for channel 6"}
				Field : {bitoffset:23, bitwidth:1}
			}
			GIF7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag for channel 7"}
				Field : {bitoffset:24, bitwidth:1}
			}
			TCIF7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete (TC) flag for channel 7"}
				Field : {bitoffset:25, bitwidth:1}
			}
			HTIF7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer (HT) flag for channel 7"}
				Field : {bitoffset:26, bitwidth:1}
			}
			TEIF7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error (TE) flag for channel 7"}
				Field : {bitoffset:27, bitwidth:1}
			}
		}
		DMA_IFCR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA interrupt flag clear register "}
			Register : {address:0}
			CGIF1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag clear for channel 1"}
				Field : {bitoffset:0, bitwidth:1}
			}
			CTCIF1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete flag clear for channel 1"}
				Field : {bitoffset:1, bitwidth:1}
			}
			CHTIF1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer flag clear for channel 1"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CTEIF1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error flag clear for channel 1"}
				Field : {bitoffset:3, bitwidth:1}
			}
			CGIF2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag clear for channel 2"}
				Field : {bitoffset:4, bitwidth:1}
			}
			CTCIF2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete flag clear for channel 2"}
				Field : {bitoffset:5, bitwidth:1}
			}
			CHTIF2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer flag clear for channel 2"}
				Field : {bitoffset:6, bitwidth:1}
			}
			CTEIF2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error flag clear for channel 2"}
				Field : {bitoffset:7, bitwidth:1}
			}
			CGIF3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag clear for channel 3"}
				Field : {bitoffset:8, bitwidth:1}
			}
			CTCIF3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete flag clear for channel 3"}
				Field : {bitoffset:9, bitwidth:1}
			}
			CHTIF3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer flag clear for channel 3"}
				Field : {bitoffset:10, bitwidth:1}
			}
			CTEIF3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error flag clear for channel 3"}
				Field : {bitoffset:11, bitwidth:1}
			}
			CGIF4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag clear for channel 4"}
				Field : {bitoffset:12, bitwidth:1}
			}
			CTCIF4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete flag clear for channel 4"}
				Field : {bitoffset:13, bitwidth:1}
			}
			CHTIF4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer flag clear for channel 4"}
				Field : {bitoffset:14, bitwidth:1}
			}
			CTEIF4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error flag clear for channel 4"}
				Field : {bitoffset:15, bitwidth:1}
			}
			CGIF5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag clear for channel 5"}
				Field : {bitoffset:16, bitwidth:1}
			}
			CTCIF5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete flag clear for channel 5"}
				Field : {bitoffset:17, bitwidth:1}
			}
			CHTIF5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer flag clear for channel 5"}
				Field : {bitoffset:18, bitwidth:1}
			}
			CTEIF5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error flag clear for channel 5"}
				Field : {bitoffset:19, bitwidth:1}
			}
			CGIF6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag clear for channel 6"}
				Field : {bitoffset:20, bitwidth:1}
			}
			CTCIF6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete flag clear for channel 6"}
				Field : {bitoffset:21, bitwidth:1}
			}
			CHTIF6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer flag clear for channel 6"}
				Field : {bitoffset:22, bitwidth:1}
			}
			CTEIF6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error flag clear for channel 6"}
				Field : {bitoffset:23, bitwidth:1}
			}
			CGIF7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"global interrupt flag clear for channel 7"}
				Field : {bitoffset:24, bitwidth:1}
			}
			CTCIF7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete flag clear for channel 7"}
				Field : {bitoffset:25, bitwidth:1}
			}
			CHTIF7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer flag clear for channel 7"}
				Field : {bitoffset:26, bitwidth:1}
			}
			CTEIF7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error flag clear for channel 7"}
				Field : {bitoffset:27, bitwidth:1}
			}
		}
		DMA_CCR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel 1 configuration register"}
			Register : {address:0}
			EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"channel enable\nWhen a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by setting the CTEIFx bit of the DMA_IFCR register)."}
				Field : {bitoffset:0, bitwidth:1}
			}
			TCIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:1, bitwidth:1}
			}
			HTIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:2, bitwidth:1}
			}
			TEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:3, bitwidth:1}
			}
			DIR {
				(flecs.doc.Description, flecs.doc.Brief) : {"data transfer direction\nThis bit must be set only in memory-to-peripheral and peripheral-to-memory modes.\nSource attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nDestination attributes "}
				Field : {bitoffset:4, bitwidth:1}
			}
			CIRC {
				(flecs.doc.Description, flecs.doc.Brief) : {"circular mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:5, bitwidth:1}
			}
			PINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral increment mode\nDefines the increment mode for each DMA transfer to the identified peripheral.\nn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this "}
				Field : {bitoffset:6, bitwidth:1}
			}
			MINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory increment mode\nDefines the increment mode for each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field i"}
				Field : {bitoffset:7, bitwidth:1}
			}
			PSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral size\nDefines the data size of each DMA transfer to the identified peripheral.\nIn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifie"}
				Field : {bitoffset:8, bitwidth:2}
			}
			MSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory size\nDefines the data size of each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the pe"}
				Field : {bitoffset:10, bitwidth:2}
			}
			PL {
				(flecs.doc.Description, flecs.doc.Brief) : {"priority level\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:12, bitwidth:2}
			}
			MEM2MEM {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory-to-memory mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:14, bitwidth:1}
			}
		}
		DMA_CNDTR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x number of data register"}
			Register : {address:0}
			NDT {
				(flecs.doc.Description, flecs.doc.Brief) : {"number of data to transfer (0 to 216-1)\nThis field is updated by hardware when the channel is enabled:\nIt is decremented after each single DMA 'read followed by write' transfer, indicating the remaining amount of data items to transfer.\nIt is kept at zero"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		DMA_CPAR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x peripheral address register"}
			Register : {address:0}
			PA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the peripheral data register from/to which the data will be read/written.\nWhen PSIZE[1:0]=01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen PSIZE=10 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		DMA_CMAR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x memory address register"}
			Register : {address:0}
			MA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the memory from/to which the data will be read/written.\nWhen MSIZE[1:0]=01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen MSIZE=10 (32 bits), bits 1 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		DMA_CCR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel 2 configuration register"}
			Register : {address:0}
			EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"channel enable\nWhen a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by setting the CTEIFx bit of the DMA_IFCR register)."}
				Field : {bitoffset:0, bitwidth:1}
			}
			TCIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:1, bitwidth:1}
			}
			HTIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:2, bitwidth:1}
			}
			TEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:3, bitwidth:1}
			}
			DIR {
				(flecs.doc.Description, flecs.doc.Brief) : {"data transfer direction\nThis bit must be set only in memory-to-peripheral and peripheral-to-memory modes.\nSource attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nDestination attributes "}
				Field : {bitoffset:4, bitwidth:1}
			}
			CIRC {
				(flecs.doc.Description, flecs.doc.Brief) : {"circular mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:5, bitwidth:1}
			}
			PINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral increment mode\nDefines the increment mode for each DMA transfer to the identified peripheral.\nn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this "}
				Field : {bitoffset:6, bitwidth:1}
			}
			MINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory increment mode\nDefines the increment mode for each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field i"}
				Field : {bitoffset:7, bitwidth:1}
			}
			PSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral size\nDefines the data size of each DMA transfer to the identified peripheral.\nIn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifie"}
				Field : {bitoffset:8, bitwidth:2}
			}
			MSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory size\nDefines the data size of each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the pe"}
				Field : {bitoffset:10, bitwidth:2}
			}
			PL {
				(flecs.doc.Description, flecs.doc.Brief) : {"priority level\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:12, bitwidth:2}
			}
			MEM2MEM {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory-to-memory mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:14, bitwidth:1}
			}
		}
		DMA_CNDTR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x number of data register"}
			Register : {address:0}
			NDT {
				(flecs.doc.Description, flecs.doc.Brief) : {"number of data to transfer (0 to 216-1)\nThis field is updated by hardware when the channel is enabled:\nIt is decremented after each single DMA 'read followed by write' transfer, indicating the remaining amount of data items to transfer.\nIt is kept at zero"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		DMA_CPAR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x peripheral address register"}
			Register : {address:0}
			PA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the peripheral data register from/to which the data will be read/written.\nWhen PSIZE[1:0]=01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen PSIZE=10 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		DMA_CMAR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x memory address register"}
			Register : {address:0}
			MA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the memory from/to which the data will be read/written.\nWhen MSIZE[1:0]=01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen MSIZE=10 (32 bits), bits 1 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		DMA_CCR3 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel 3 configuration register"}
			Register : {address:0}
			EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"channel enable\nWhen a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by setting the CTEIFx bit of the DMA_IFCR register)."}
				Field : {bitoffset:0, bitwidth:1}
			}
			TCIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:1, bitwidth:1}
			}
			HTIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:2, bitwidth:1}
			}
			TEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:3, bitwidth:1}
			}
			DIR {
				(flecs.doc.Description, flecs.doc.Brief) : {"data transfer direction\nThis bit must be set only in memory-to-peripheral and peripheral-to-memory modes.\nSource attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nDestination attributes "}
				Field : {bitoffset:4, bitwidth:1}
			}
			CIRC {
				(flecs.doc.Description, flecs.doc.Brief) : {"circular mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:5, bitwidth:1}
			}
			PINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral increment mode\nDefines the increment mode for each DMA transfer to the identified peripheral.\nn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this "}
				Field : {bitoffset:6, bitwidth:1}
			}
			MINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory increment mode\nDefines the increment mode for each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field i"}
				Field : {bitoffset:7, bitwidth:1}
			}
			PSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral size\nDefines the data size of each DMA transfer to the identified peripheral.\nIn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifie"}
				Field : {bitoffset:8, bitwidth:2}
			}
			MSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory size\nDefines the data size of each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the pe"}
				Field : {bitoffset:10, bitwidth:2}
			}
			PL {
				(flecs.doc.Description, flecs.doc.Brief) : {"priority level\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:12, bitwidth:2}
			}
			MEM2MEM {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory-to-memory mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:14, bitwidth:1}
			}
		}
		DMA_CNDTR3 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x configuration register"}
			Register : {address:0}
			NDT {
				(flecs.doc.Description, flecs.doc.Brief) : {"number of data to transfer (0 to 216-1)\nThis field is updated by hardware when the channel is enabled:\nIt is decremented after each single DMA 'read followed by write' transfer, indicating the remaining amount of data items to transfer.\nIt is kept at zero"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		DMA_CPAR3 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x peripheral address register"}
			Register : {address:0}
			PA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the peripheral data register from/to which the data will be read/written.\nWhen PSIZE[1:0]=01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen PSIZE=10 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		DMA_CMAR3 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x memory address register"}
			Register : {address:0}
			MA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the memory from/to which the data will be read/written.\nWhen MSIZE[1:0]=01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen MSIZE=10 (32 bits), bits 1 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		DMA_CCR4 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel 4 configuration register"}
			Register : {address:0}
			EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"channel enable\nWhen a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by setting the CTEIFx bit of the DMA_IFCR register)."}
				Field : {bitoffset:0, bitwidth:1}
			}
			TCIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:1, bitwidth:1}
			}
			HTIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:2, bitwidth:1}
			}
			TEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:3, bitwidth:1}
			}
			DIR {
				(flecs.doc.Description, flecs.doc.Brief) : {"data transfer direction\nThis bit must be set only in memory-to-peripheral and peripheral-to-memory modes.\nSource attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nDestination attributes "}
				Field : {bitoffset:4, bitwidth:1}
			}
			CIRC {
				(flecs.doc.Description, flecs.doc.Brief) : {"circular mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:5, bitwidth:1}
			}
			PINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral increment mode\nDefines the increment mode for each DMA transfer to the identified peripheral.\nn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this "}
				Field : {bitoffset:6, bitwidth:1}
			}
			MINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory increment mode\nDefines the increment mode for each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field i"}
				Field : {bitoffset:7, bitwidth:1}
			}
			PSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral size\nDefines the data size of each DMA transfer to the identified peripheral.\nIn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifie"}
				Field : {bitoffset:8, bitwidth:2}
			}
			MSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory size\nDefines the data size of each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the pe"}
				Field : {bitoffset:10, bitwidth:2}
			}
			PL {
				(flecs.doc.Description, flecs.doc.Brief) : {"priority level\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:12, bitwidth:2}
			}
			MEM2MEM {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory-to-memory mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:14, bitwidth:1}
			}
		}
		DMA_CNDTR4 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x configuration register"}
			Register : {address:0}
			NDT {
				(flecs.doc.Description, flecs.doc.Brief) : {"number of data to transfer (0 to 216-1)\nThis field is updated by hardware when the channel is enabled:\nIt is decremented after each single DMA 'read followed by write' transfer, indicating the remaining amount of data items to transfer.\nIt is kept at zero"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		DMA_CPAR4 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x peripheral address register"}
			Register : {address:0}
			PA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the peripheral data register from/to which the data will be read/written.\nWhen PSIZE[1:0]=01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen PSIZE=10 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		DMA_CMAR4 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x memory address register"}
			Register : {address:0}
			MA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the memory from/to which the data will be read/written.\nWhen MSIZE[1:0]=01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen MSIZE=10 (32 bits), bits 1 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		DMA_CCR5 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel 5 configuration register"}
			Register : {address:0}
			EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"channel enable\nWhen a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by setting the CTEIFx bit of the DMA_IFCR register)."}
				Field : {bitoffset:0, bitwidth:1}
			}
			TCIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:1, bitwidth:1}
			}
			HTIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:2, bitwidth:1}
			}
			TEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:3, bitwidth:1}
			}
			DIR {
				(flecs.doc.Description, flecs.doc.Brief) : {"data transfer direction\nThis bit must be set only in memory-to-peripheral and peripheral-to-memory modes.\nSource attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nDestination attributes "}
				Field : {bitoffset:4, bitwidth:1}
			}
			CIRC {
				(flecs.doc.Description, flecs.doc.Brief) : {"circular mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:5, bitwidth:1}
			}
			PINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral increment mode\nDefines the increment mode for each DMA transfer to the identified peripheral.\nn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this "}
				Field : {bitoffset:6, bitwidth:1}
			}
			MINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory increment mode\nDefines the increment mode for each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field i"}
				Field : {bitoffset:7, bitwidth:1}
			}
			PSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral size\nDefines the data size of each DMA transfer to the identified peripheral.\nIn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifie"}
				Field : {bitoffset:8, bitwidth:2}
			}
			MSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory size\nDefines the data size of each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the pe"}
				Field : {bitoffset:10, bitwidth:2}
			}
			PL {
				(flecs.doc.Description, flecs.doc.Brief) : {"priority level\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:12, bitwidth:2}
			}
			MEM2MEM {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory-to-memory mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:14, bitwidth:1}
			}
		}
		DMA_CNDTR5 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x configuration register"}
			Register : {address:0}
			NDT {
				(flecs.doc.Description, flecs.doc.Brief) : {"number of data to transfer (0 to 216-1)\nThis field is updated by hardware when the channel is enabled:\nIt is decremented after each single DMA 'read followed by write' transfer, indicating the remaining amount of data items to transfer.\nIt is kept at zero"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		DMA_CPAR5 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x peripheral address register"}
			Register : {address:0}
			PA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the peripheral data register from/to which the data will be read/written.\nWhen PSIZE[1:0]=01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen PSIZE=10 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		DMA_CMAR5 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x memory address register"}
			Register : {address:0}
			MA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the memory from/to which the data will be read/written.\nWhen MSIZE[1:0]=01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen MSIZE=10 (32 bits), bits 1 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		DMA_CCR6 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel 6 configuration register"}
			Register : {address:0}
			EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"channel enable\nWhen a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by setting the CTEIFx bit of the DMA_IFCR register)."}
				Field : {bitoffset:0, bitwidth:1}
			}
			TCIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:1, bitwidth:1}
			}
			HTIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:2, bitwidth:1}
			}
			TEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:3, bitwidth:1}
			}
			DIR {
				(flecs.doc.Description, flecs.doc.Brief) : {"data transfer direction\nThis bit must be set only in memory-to-peripheral and peripheral-to-memory modes.\nSource attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nDestination attributes "}
				Field : {bitoffset:4, bitwidth:1}
			}
			CIRC {
				(flecs.doc.Description, flecs.doc.Brief) : {"circular mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:5, bitwidth:1}
			}
			PINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral increment mode\nDefines the increment mode for each DMA transfer to the identified peripheral.\nn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this "}
				Field : {bitoffset:6, bitwidth:1}
			}
			MINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory increment mode\nDefines the increment mode for each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field i"}
				Field : {bitoffset:7, bitwidth:1}
			}
			PSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral size\nDefines the data size of each DMA transfer to the identified peripheral.\nIn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifie"}
				Field : {bitoffset:8, bitwidth:2}
			}
			MSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory size\nDefines the data size of each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the pe"}
				Field : {bitoffset:10, bitwidth:2}
			}
			PL {
				(flecs.doc.Description, flecs.doc.Brief) : {"priority level\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:12, bitwidth:2}
			}
			MEM2MEM {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory-to-memory mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:14, bitwidth:1}
			}
		}
		DMA_CNDTR6 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x configuration register"}
			Register : {address:0}
			NDT {
				(flecs.doc.Description, flecs.doc.Brief) : {"number of data to transfer (0 to 216-1)\nThis field is updated by hardware when the channel is enabled:\nIt is decremented after each single DMA 'read followed by write' transfer, indicating the remaining amount of data items to transfer.\nIt is kept at zero"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		DMA_CPAR6 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x peripheral address register"}
			Register : {address:0}
			PA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the peripheral data register from/to which the data will be read/written.\nWhen PSIZE[1:0]=01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen PSIZE=10 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		DMA_CMAR6 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x memory address register"}
			Register : {address:0}
			MA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the memory from/to which the data will be read/written.\nWhen MSIZE[1:0]=01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen MSIZE=10 (32 bits), bits 1 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		DMA_CCR7 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel 7 configuration register"}
			Register : {address:0}
			EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"channel enable\nWhen a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by setting the CTEIFx bit of the DMA_IFCR register)."}
				Field : {bitoffset:0, bitwidth:1}
			}
			TCIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer complete interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:1, bitwidth:1}
			}
			HTIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"half transfer interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:2, bitwidth:1}
			}
			TEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"transfer error interrupt enable\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:3, bitwidth:1}
			}
			DIR {
				(flecs.doc.Description, flecs.doc.Brief) : {"data transfer direction\nThis bit must be set only in memory-to-peripheral and peripheral-to-memory modes.\nSource attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode.\nDestination attributes "}
				Field : {bitoffset:4, bitwidth:1}
			}
			CIRC {
				(flecs.doc.Description, flecs.doc.Brief) : {"circular mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is not read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:5, bitwidth:1}
			}
			PINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral increment mode\nDefines the increment mode for each DMA transfer to the identified peripheral.\nn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this "}
				Field : {bitoffset:6, bitwidth:1}
			}
			MINC {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory increment mode\nDefines the increment mode for each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field i"}
				Field : {bitoffset:7, bitwidth:1}
			}
			PSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral size\nDefines the data size of each DMA transfer to the identified peripheral.\nIn memory-to-memory mode, this field identifies the memory destination if DIR=1 and the memory source if DIR=0.\nIn peripheral-to-peripheral mode, this field identifie"}
				Field : {bitoffset:8, bitwidth:2}
			}
			MSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory size\nDefines the data size of each DMA transfer to the identified memory.\nIn memory-to-memory mode, this field identifies the memory source if DIR=1 and the memory destination if DIR=0.\nIn peripheral-to-peripheral mode, this field identifies the pe"}
				Field : {bitoffset:10, bitwidth:2}
			}
			PL {
				(flecs.doc.Description, flecs.doc.Brief) : {"priority level\nNote: this field is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:12, bitwidth:2}
			}
			MEM2MEM {
				(flecs.doc.Description, flecs.doc.Brief) : {"memory-to-memory mode\nNote: this bit is set and cleared by software.\nIt must not be written when the channel is enabled (EN = 1).\nIt is read-only when the channel is enabled (EN=1)."}
				Field : {bitoffset:14, bitwidth:1}
			}
		}
		DMA_CNDTR7 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x configuration register"}
			Register : {address:0}
			NDT {
				(flecs.doc.Description, flecs.doc.Brief) : {"number of data to transfer (0 to 216-1)\nThis field is updated by hardware when the channel is enabled:\nIt is decremented after each single DMA 'read followed by write' transfer, indicating the remaining amount of data items to transfer.\nIt is kept at zero"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		DMA_CPAR7 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x peripheral address register"}
			Register : {address:0}
			PA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the peripheral data register from/to which the data will be read/written.\nWhen PSIZE[1:0]=01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen PSIZE=10 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		DMA_CMAR7 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA channel x memory address register"}
			Register : {address:0}
			MA {
				(flecs.doc.Description, flecs.doc.Brief) : {"peripheral address\nIt contains the base address of the memory from/to which the data will be read/written.\nWhen MSIZE[1:0]=01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address.\nWhen MSIZE=10 (32 bits), bits 1 "}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
	}
	DMAMUX {
		(flecs.doc.Description, flecs.doc.Brief) : {"DMAMUX"}
		C0CR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMAMux - DMA request line multiplexer\n          channel x control register"}
			Register : {address:0}
			DMAREQ_ID {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input DMA request line\n              selected"}
				Field : {bitoffset:0, bitwidth:8}
			}
			SOIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Interrupt enable at synchronization\n              event overrun"}
				Field : {bitoffset:8, bitwidth:1}
			}
			EGE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Event generation\n              enable/disable"}
				Field : {bitoffset:9, bitwidth:1}
			}
			SE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Synchronous operating mode\n              enable/disable"}
				Field : {bitoffset:16, bitwidth:1}
			}
			SPOL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Synchronization event type selector\n              Defines the synchronization event on the selected\n              synchronization input:"}
				Field : {bitoffset:17, bitwidth:2}
			}
			NBREQ {
				(flecs.doc.Description, flecs.doc.Brief) : {"Number of DMA requests to forward\n              Defines the number of DMA requests forwarded before\n              output event is generated. In synchronous mode, it\n              also defines the number of DMA requests to forward\n              after a syn"}
				Field : {bitoffset:19, bitwidth:5}
			}
			SYNC_ID {
				(flecs.doc.Description, flecs.doc.Brief) : {"Synchronization input\n              selected"}
				Field : {bitoffset:24, bitwidth:5}
			}
		}
		C1CR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMAMux - DMA request line multiplexer\n          channel x control register"}
			Register : {address:0}
			DMAREQ_ID {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input DMA request line\n              selected"}
				Field : {bitoffset:0, bitwidth:8}
			}
			SOIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Interrupt enable at synchronization\n              event overrun"}
				Field : {bitoffset:8, bitwidth:1}
			}
			EGE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Event generation\n              enable/disable"}
				Field : {bitoffset:9, bitwidth:1}
			}
			SE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Synchronous operating mode\n              enable/disable"}
				Field : {bitoffset:16, bitwidth:1}
			}
			SPOL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Synchronization event type selector\n              Defines the synchronization event on the selected\n              synchronization input:"}
				Field : {bitoffset:17, bitwidth:2}
			}
			NBREQ {
				(flecs.doc.Description, flecs.doc.Brief) : {"Number of DMA requests to forward\n              Defines the number of DMA requests forwarded before\n              output event is generated. In synchronous mode, it\n              also defines the number of DMA requests to forward\n              after a syn"}
				Field : {bitoffset:19, bitwidth:5}
			}
			SYNC_ID {
				(flecs.doc.Description, flecs.doc.Brief) : {"Synchronization input\n              selected"}
				Field : {bitoffset:24, bitwidth:5}
			}
		}
		C2CR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMAMux - DMA request line multiplexer\n          channel x control register"}
			Register : {address:0}
			DMAREQ_ID {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input DMA request line\n              selected"}
				Field : {bitoffset:0, bitwidth:8}
			}
			SOIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Interrupt enable at synchronization\n              event overrun"}
				Field : {bitoffset:8, bitwidth:1}
			}
			EGE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Event generation\n              enable/disable"}
				Field : {bitoffset:9, bitwidth:1}
			}
			SE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Synchronous operating mode\n              enable/disable"}
				Field : {bitoffset:16, bitwidth:1}
			}
			SPOL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Synchronization event type selector\n              Defines the synchronization event on the selected\n              synchronization input:"}
				Field : {bitoffset:17, bitwidth:2}
			}
			NBREQ {
				(flecs.doc.Description, flecs.doc.Brief) : {"Number of DMA requests to forward\n              Defines the number of DMA requests forwarded before\n              output event is generated. In synchronous mode, it\n              also defines the number of DMA requests to forward\n              after a syn"}
				Field : {bitoffset:19, bitwidth:5}
			}
			SYNC_ID {
				(flecs.doc.Description, flecs.doc.Brief) : {"Synchronization input\n              selected"}
				Field : {bitoffset:24, bitwidth:5}
			}
		}
		C3CR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMAMux - DMA request line multiplexer\n          channel x control register"}
			Register : {address:0}
			DMAREQ_ID {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input DMA request line\n              selected"}
				Field : {bitoffset:0, bitwidth:8}
			}
			SOIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Interrupt enable at synchronization\n              event overrun"}
				Field : {bitoffset:8, bitwidth:1}
			}
			EGE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Event generation\n              enable/disable"}
				Field : {bitoffset:9, bitwidth:1}
			}
			SE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Synchronous operating mode\n              enable/disable"}
				Field : {bitoffset:16, bitwidth:1}
			}
			SPOL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Synchronization event type selector\n              Defines the synchronization event on the selected\n              synchronization input:"}
				Field : {bitoffset:17, bitwidth:2}
			}
			NBREQ {
				(flecs.doc.Description, flecs.doc.Brief) : {"Number of DMA requests to forward\n              Defines the number of DMA requests forwarded before\n              output event is generated. In synchronous mode, it\n              also defines the number of DMA requests to forward\n              after a syn"}
				Field : {bitoffset:19, bitwidth:5}
			}
			SYNC_ID {
				(flecs.doc.Description, flecs.doc.Brief) : {"Synchronization input\n              selected"}
				Field : {bitoffset:24, bitwidth:5}
			}
		}
		C4CR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMAMux - DMA request line multiplexer\n          channel x control register"}
			Register : {address:0}
			DMAREQ_ID {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input DMA request line\n              selected"}
				Field : {bitoffset:0, bitwidth:8}
			}
			SOIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Interrupt enable at synchronization\n              event overrun"}
				Field : {bitoffset:8, bitwidth:1}
			}
			EGE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Event generation\n              enable/disable"}
				Field : {bitoffset:9, bitwidth:1}
			}
			SE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Synchronous operating mode\n              enable/disable"}
				Field : {bitoffset:16, bitwidth:1}
			}
			SPOL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Synchronization event type selector\n              Defines the synchronization event on the selected\n              synchronization input:"}
				Field : {bitoffset:17, bitwidth:2}
			}
			NBREQ {
				(flecs.doc.Description, flecs.doc.Brief) : {"Number of DMA requests to forward\n              Defines the number of DMA requests forwarded before\n              output event is generated. In synchronous mode, it\n              also defines the number of DMA requests to forward\n              after a syn"}
				Field : {bitoffset:19, bitwidth:5}
			}
			SYNC_ID {
				(flecs.doc.Description, flecs.doc.Brief) : {"Synchronization input\n              selected"}
				Field : {bitoffset:24, bitwidth:5}
			}
		}
		C5CR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMAMux - DMA request line multiplexer\n          channel x control register"}
			Register : {address:0}
			DMAREQ_ID {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input DMA request line\n              selected"}
				Field : {bitoffset:0, bitwidth:8}
			}
			SOIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Interrupt enable at synchronization\n              event overrun"}
				Field : {bitoffset:8, bitwidth:1}
			}
			EGE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Event generation\n              enable/disable"}
				Field : {bitoffset:9, bitwidth:1}
			}
			SE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Synchronous operating mode\n              enable/disable"}
				Field : {bitoffset:16, bitwidth:1}
			}
			SPOL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Synchronization event type selector\n              Defines the synchronization event on the selected\n              synchronization input:"}
				Field : {bitoffset:17, bitwidth:2}
			}
			NBREQ {
				(flecs.doc.Description, flecs.doc.Brief) : {"Number of DMA requests to forward\n              Defines the number of DMA requests forwarded before\n              output event is generated. In synchronous mode, it\n              also defines the number of DMA requests to forward\n              after a syn"}
				Field : {bitoffset:19, bitwidth:5}
			}
			SYNC_ID {
				(flecs.doc.Description, flecs.doc.Brief) : {"Synchronization input\n              selected"}
				Field : {bitoffset:24, bitwidth:5}
			}
		}
		C6CR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMAMux - DMA request line multiplexer\n          channel x control register"}
			Register : {address:0}
			DMAREQ_ID {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input DMA request line\n              selected"}
				Field : {bitoffset:0, bitwidth:8}
			}
			SOIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Interrupt enable at synchronization\n              event overrun"}
				Field : {bitoffset:8, bitwidth:1}
			}
			EGE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Event generation\n              enable/disable"}
				Field : {bitoffset:9, bitwidth:1}
			}
			SE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Synchronous operating mode\n              enable/disable"}
				Field : {bitoffset:16, bitwidth:1}
			}
			SPOL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Synchronization event type selector\n              Defines the synchronization event on the selected\n              synchronization input:"}
				Field : {bitoffset:17, bitwidth:2}
			}
			NBREQ {
				(flecs.doc.Description, flecs.doc.Brief) : {"Number of DMA requests to forward\n              Defines the number of DMA requests forwarded before\n              output event is generated. In synchronous mode, it\n              also defines the number of DMA requests to forward\n              after a syn"}
				Field : {bitoffset:19, bitwidth:5}
			}
			SYNC_ID {
				(flecs.doc.Description, flecs.doc.Brief) : {"Synchronization input\n              selected"}
				Field : {bitoffset:24, bitwidth:5}
			}
		}
		RG0CR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMAMux - DMA request generator channel x\n          control register"}
			Register : {address:0}
			SIG_ID {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA request trigger input\n              selected"}
				Field : {bitoffset:0, bitwidth:5}
			}
			OIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Interrupt enable at trigger event\n              overrun"}
				Field : {bitoffset:8, bitwidth:1}
			}
			GE {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA request generator channel\n              enable/disable"}
				Field : {bitoffset:16, bitwidth:1}
			}
			GPOL {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA request generator trigger event type\n              selection Defines the trigger event on the selected\n              DMA request trigger input"}
				Field : {bitoffset:17, bitwidth:2}
			}
			GNBREQ {
				(flecs.doc.Description, flecs.doc.Brief) : {"Number of DMA requests to generate\n              Defines the number of DMA requests generated after a\n              trigger event, then stop generating. The actual\n              number of generated DMA requests is GNBREQ+1. Note:\n              This field "}
				Field : {bitoffset:19, bitwidth:5}
			}
		}
		RG1CR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMAMux - DMA request generator channel x\n          control register"}
			Register : {address:0}
			SIG_ID {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA request trigger input\n              selected"}
				Field : {bitoffset:0, bitwidth:5}
			}
			OIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Interrupt enable at trigger event\n              overrun"}
				Field : {bitoffset:8, bitwidth:1}
			}
			GE {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA request generator channel\n              enable/disable"}
				Field : {bitoffset:16, bitwidth:1}
			}
			GPOL {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA request generator trigger event type\n              selection Defines the trigger event on the selected\n              DMA request trigger input"}
				Field : {bitoffset:17, bitwidth:2}
			}
			GNBREQ {
				(flecs.doc.Description, flecs.doc.Brief) : {"Number of DMA requests to generate\n              Defines the number of DMA requests generated after a\n              trigger event, then stop generating. The actual\n              number of generated DMA requests is GNBREQ+1. Note:\n              This field "}
				Field : {bitoffset:19, bitwidth:5}
			}
		}
		RG2CR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMAMux - DMA request generator channel x\n          control register"}
			Register : {address:0}
			SIG_ID {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA request trigger input\n              selected"}
				Field : {bitoffset:0, bitwidth:5}
			}
			OIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Interrupt enable at trigger event\n              overrun"}
				Field : {bitoffset:8, bitwidth:1}
			}
			GE {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA request generator channel\n              enable/disable"}
				Field : {bitoffset:16, bitwidth:1}
			}
			GPOL {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA request generator trigger event type\n              selection Defines the trigger event on the selected\n              DMA request trigger input"}
				Field : {bitoffset:17, bitwidth:2}
			}
			GNBREQ {
				(flecs.doc.Description, flecs.doc.Brief) : {"Number of DMA requests to generate\n              Defines the number of DMA requests generated after a\n              trigger event, then stop generating. The actual\n              number of generated DMA requests is GNBREQ+1. Note:\n              This field "}
				Field : {bitoffset:19, bitwidth:5}
			}
		}
		RG3CR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMAMux - DMA request generator channel x\n          control register"}
			Register : {address:0}
			SIG_ID {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA request trigger input\n              selected"}
				Field : {bitoffset:0, bitwidth:5}
			}
			OIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Interrupt enable at trigger event\n              overrun"}
				Field : {bitoffset:8, bitwidth:1}
			}
			GE {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA request generator channel\n              enable/disable"}
				Field : {bitoffset:16, bitwidth:1}
			}
			GPOL {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA request generator trigger event type\n              selection Defines the trigger event on the selected\n              DMA request trigger input"}
				Field : {bitoffset:17, bitwidth:2}
			}
			GNBREQ {
				(flecs.doc.Description, flecs.doc.Brief) : {"Number of DMA requests to generate\n              Defines the number of DMA requests generated after a\n              trigger event, then stop generating. The actual\n              number of generated DMA requests is GNBREQ+1. Note:\n              This field "}
				Field : {bitoffset:19, bitwidth:5}
			}
		}
		RGSR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMAMux - DMA request generator status\n          register"}
			Register : {address:0}
			OF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Trigger event overrun flag The flag is\n              set when a trigger event occurs on DMA request\n              generator channel x, while the DMA request generator\n              counter value is lower than GNBREQ. The flag is\n              cleared by w"}
				Field : {bitoffset:0, bitwidth:4}
			}
		}
		RGCFR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMAMux - DMA request generator clear flag\n          register"}
			Register : {address:0}
			COF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clear trigger event overrun flag Upon\n              setting, this bit clears the corresponding overrun\n              flag OFx in the DMAMUX_RGCSR register."}
				Field : {bitoffset:0, bitwidth:4}
			}
		}
	}
	GPIOA {
		(flecs.doc.Description, flecs.doc.Brief) : {"General-purpose I/Os"}
		MODER {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port mode register"}
			Register : {address:0}
			MODER15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:30, bitwidth:2}
			}
			MODER14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:28, bitwidth:2}
			}
			MODER13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:26, bitwidth:2}
			}
			MODER12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:24, bitwidth:2}
			}
			MODER11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:22, bitwidth:2}
			}
			MODER10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:20, bitwidth:2}
			}
			MODER9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:18, bitwidth:2}
			}
			MODER8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:16, bitwidth:2}
			}
			MODER7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:2}
			}
			MODER6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:2}
			}
			MODER5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:2}
			}
			MODER4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:2}
			}
			MODER3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:2}
			}
			MODER2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:2}
			}
			MODER1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:2}
			}
			MODER0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		OTYPER {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port output type register"}
			Register : {address:0}
			OT15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			OT14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			OT13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			OT12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			OT11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			OT10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			OT9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			OT8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			OT7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			OT6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			OT5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			OT4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			OT3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			OT2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			OT1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			OT0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		OSPEEDR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port output speed\n          register"}
			Register : {address:0}
			OSPEEDR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:30, bitwidth:2}
			}
			OSPEEDR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:28, bitwidth:2}
			}
			OSPEEDR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:26, bitwidth:2}
			}
			OSPEEDR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:24, bitwidth:2}
			}
			OSPEEDR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:22, bitwidth:2}
			}
			OSPEEDR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:20, bitwidth:2}
			}
			OSPEEDR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:18, bitwidth:2}
			}
			OSPEEDR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:16, bitwidth:2}
			}
			OSPEEDR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:2}
			}
			OSPEEDR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:2}
			}
			OSPEEDR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:2}
			}
			OSPEEDR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:2}
			}
			OSPEEDR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:2}
			}
			OSPEEDR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:2}
			}
			OSPEEDR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:2}
			}
			OSPEEDR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		PUPDR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port pull-up/pull-down\n          register"}
			Register : {address:0}
			PUPDR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:30, bitwidth:2}
			}
			PUPDR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:28, bitwidth:2}
			}
			PUPDR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:26, bitwidth:2}
			}
			PUPDR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:24, bitwidth:2}
			}
			PUPDR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:22, bitwidth:2}
			}
			PUPDR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:20, bitwidth:2}
			}
			PUPDR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:18, bitwidth:2}
			}
			PUPDR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:16, bitwidth:2}
			}
			PUPDR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:2}
			}
			PUPDR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:2}
			}
			PUPDR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:2}
			}
			PUPDR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:2}
			}
			PUPDR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:2}
			}
			PUPDR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:2}
			}
			PUPDR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:2}
			}
			PUPDR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		IDR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port input data register"}
			Register : {address:0}
			IDR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			IDR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			IDR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			IDR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			IDR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			IDR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			IDR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			IDR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			IDR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			IDR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			IDR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			IDR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			IDR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			IDR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			IDR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			IDR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		ODR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port output data register"}
			Register : {address:0}
			ODR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			ODR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			ODR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			ODR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			ODR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			ODR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			ODR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			ODR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			ODR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			ODR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			ODR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			ODR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			ODR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			ODR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			ODR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			ODR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		BSRR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port bit set/reset\n          register"}
			Register : {address:0}
			BR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:31, bitwidth:1}
			}
			BR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:30, bitwidth:1}
			}
			BR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:29, bitwidth:1}
			}
			BR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:28, bitwidth:1}
			}
			BR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:27, bitwidth:1}
			}
			BR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:26, bitwidth:1}
			}
			BR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:25, bitwidth:1}
			}
			BR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:24, bitwidth:1}
			}
			BR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:23, bitwidth:1}
			}
			BR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:22, bitwidth:1}
			}
			BR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:21, bitwidth:1}
			}
			BR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:20, bitwidth:1}
			}
			BR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:19, bitwidth:1}
			}
			BR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:18, bitwidth:1}
			}
			BR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:17, bitwidth:1}
			}
			BR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:16, bitwidth:1}
			}
			BS15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			BS14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			BS13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			BS12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			BS11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			BS10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			BS9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			BS8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			BS7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			BS6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			BS5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			BS4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			BS3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			BS2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			BS1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			BS0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		LCKR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port configuration lock\n          register"}
			Register : {address:0}
			LCKK {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:16, bitwidth:1}
			}
			LCK15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			LCK14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			LCK13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			LCK12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			LCK11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			LCK10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			LCK9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			LCK8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			LCK7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			LCK6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			LCK5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			LCK4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			LCK3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			LCK2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			LCK1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			LCK0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		AFRL {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO alternate function low\n          register"}
			Register : {address:0}
			AFSEL7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:28, bitwidth:4}
			}
			AFSEL6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:24, bitwidth:4}
			}
			AFSEL5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:20, bitwidth:4}
			}
			AFSEL4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:16, bitwidth:4}
			}
			AFSEL3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:12, bitwidth:4}
			}
			AFSEL2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:8, bitwidth:4}
			}
			AFSEL1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:4, bitwidth:4}
			}
			AFSEL0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:0, bitwidth:4}
			}
		}
		AFRH {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO alternate function high\n          register"}
			Register : {address:0}
			AFSEL15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:28, bitwidth:4}
			}
			AFSEL14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:24, bitwidth:4}
			}
			AFSEL13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:20, bitwidth:4}
			}
			AFSEL12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:16, bitwidth:4}
			}
			AFSEL11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:12, bitwidth:4}
			}
			AFSEL10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:8, bitwidth:4}
			}
			AFSEL9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:4, bitwidth:4}
			}
			AFSEL8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:0, bitwidth:4}
			}
		}
		BRR {
			(flecs.doc.Description, flecs.doc.Brief) : {"port bit reset register"}
			Register : {address:0}
			BR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:0, bitwidth:1}
			}
			BR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:1, bitwidth:1}
			}
			BR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:2, bitwidth:1}
			}
			BR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:3, bitwidth:1}
			}
			BR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:4, bitwidth:1}
			}
			BR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:5, bitwidth:1}
			}
			BR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:6, bitwidth:1}
			}
			BR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:7, bitwidth:1}
			}
			BR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:8, bitwidth:1}
			}
			BR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:9, bitwidth:1}
			}
			BR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:10, bitwidth:1}
			}
			BR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:11, bitwidth:1}
			}
			BR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:12, bitwidth:1}
			}
			BR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:13, bitwidth:1}
			}
			BR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:14, bitwidth:1}
			}
			BR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:15, bitwidth:1}
			}
		}
	}
	GPIOB {
		(flecs.doc.Description, flecs.doc.Brief) : {"General-purpose I/Os"}
		MODER {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port mode register"}
			Register : {address:0}
			MODER15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:30, bitwidth:2}
			}
			MODER14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:28, bitwidth:2}
			}
			MODER13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:26, bitwidth:2}
			}
			MODER12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:24, bitwidth:2}
			}
			MODER11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:22, bitwidth:2}
			}
			MODER10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:20, bitwidth:2}
			}
			MODER9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:18, bitwidth:2}
			}
			MODER8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:16, bitwidth:2}
			}
			MODER7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:2}
			}
			MODER6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:2}
			}
			MODER5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:2}
			}
			MODER4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:2}
			}
			MODER3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:2}
			}
			MODER2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:2}
			}
			MODER1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:2}
			}
			MODER0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		OTYPER {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port output type register"}
			Register : {address:0}
			OT15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			OT14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			OT13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			OT12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			OT11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			OT10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			OT9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			OT8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			OT7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			OT6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			OT5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			OT4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			OT3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			OT2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			OT1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			OT0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		OSPEEDR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port output speed\n          register"}
			Register : {address:0}
			OSPEEDR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:30, bitwidth:2}
			}
			OSPEEDR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:28, bitwidth:2}
			}
			OSPEEDR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:26, bitwidth:2}
			}
			OSPEEDR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:24, bitwidth:2}
			}
			OSPEEDR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:22, bitwidth:2}
			}
			OSPEEDR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:20, bitwidth:2}
			}
			OSPEEDR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:18, bitwidth:2}
			}
			OSPEEDR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:16, bitwidth:2}
			}
			OSPEEDR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:2}
			}
			OSPEEDR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:2}
			}
			OSPEEDR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:2}
			}
			OSPEEDR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:2}
			}
			OSPEEDR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:2}
			}
			OSPEEDR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:2}
			}
			OSPEEDR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:2}
			}
			OSPEEDR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		PUPDR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port pull-up/pull-down\n          register"}
			Register : {address:0}
			PUPDR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:30, bitwidth:2}
			}
			PUPDR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:28, bitwidth:2}
			}
			PUPDR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:26, bitwidth:2}
			}
			PUPDR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:24, bitwidth:2}
			}
			PUPDR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:22, bitwidth:2}
			}
			PUPDR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:20, bitwidth:2}
			}
			PUPDR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:18, bitwidth:2}
			}
			PUPDR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:16, bitwidth:2}
			}
			PUPDR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:2}
			}
			PUPDR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:2}
			}
			PUPDR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:2}
			}
			PUPDR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:2}
			}
			PUPDR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:2}
			}
			PUPDR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:2}
			}
			PUPDR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:2}
			}
			PUPDR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		IDR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port input data register"}
			Register : {address:0}
			IDR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			IDR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			IDR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			IDR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			IDR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			IDR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			IDR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			IDR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			IDR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			IDR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			IDR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			IDR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			IDR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			IDR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			IDR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			IDR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		ODR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port output data register"}
			Register : {address:0}
			ODR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			ODR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			ODR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			ODR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			ODR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			ODR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			ODR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			ODR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			ODR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			ODR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			ODR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			ODR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			ODR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			ODR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			ODR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			ODR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		BSRR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port bit set/reset\n          register"}
			Register : {address:0}
			BR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:31, bitwidth:1}
			}
			BR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:30, bitwidth:1}
			}
			BR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:29, bitwidth:1}
			}
			BR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:28, bitwidth:1}
			}
			BR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:27, bitwidth:1}
			}
			BR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:26, bitwidth:1}
			}
			BR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:25, bitwidth:1}
			}
			BR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:24, bitwidth:1}
			}
			BR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:23, bitwidth:1}
			}
			BR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:22, bitwidth:1}
			}
			BR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:21, bitwidth:1}
			}
			BR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:20, bitwidth:1}
			}
			BR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:19, bitwidth:1}
			}
			BR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:18, bitwidth:1}
			}
			BR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:17, bitwidth:1}
			}
			BR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:16, bitwidth:1}
			}
			BS15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			BS14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			BS13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			BS12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			BS11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			BS10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			BS9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			BS8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			BS7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			BS6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			BS5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			BS4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			BS3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			BS2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			BS1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			BS0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		LCKR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port configuration lock\n          register"}
			Register : {address:0}
			LCKK {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:16, bitwidth:1}
			}
			LCK15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			LCK14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			LCK13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			LCK12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			LCK11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			LCK10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			LCK9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			LCK8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			LCK7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			LCK6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			LCK5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			LCK4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			LCK3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			LCK2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			LCK1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			LCK0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		AFRL {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO alternate function low\n          register"}
			Register : {address:0}
			AFSEL7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:28, bitwidth:4}
			}
			AFSEL6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:24, bitwidth:4}
			}
			AFSEL5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:20, bitwidth:4}
			}
			AFSEL4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:16, bitwidth:4}
			}
			AFSEL3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:12, bitwidth:4}
			}
			AFSEL2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:8, bitwidth:4}
			}
			AFSEL1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:4, bitwidth:4}
			}
			AFSEL0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:0, bitwidth:4}
			}
		}
		AFRH {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO alternate function high\n          register"}
			Register : {address:0}
			AFSEL15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:28, bitwidth:4}
			}
			AFSEL14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:24, bitwidth:4}
			}
			AFSEL13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:20, bitwidth:4}
			}
			AFSEL12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:16, bitwidth:4}
			}
			AFSEL11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:12, bitwidth:4}
			}
			AFSEL10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:8, bitwidth:4}
			}
			AFSEL9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:4, bitwidth:4}
			}
			AFSEL8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:0, bitwidth:4}
			}
		}
		BRR {
			(flecs.doc.Description, flecs.doc.Brief) : {"port bit reset register"}
			Register : {address:0}
			BR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:0, bitwidth:1}
			}
			BR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:1, bitwidth:1}
			}
			BR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:2, bitwidth:1}
			}
			BR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:3, bitwidth:1}
			}
			BR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:4, bitwidth:1}
			}
			BR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:5, bitwidth:1}
			}
			BR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:6, bitwidth:1}
			}
			BR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:7, bitwidth:1}
			}
			BR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:8, bitwidth:1}
			}
			BR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:9, bitwidth:1}
			}
			BR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:10, bitwidth:1}
			}
			BR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:11, bitwidth:1}
			}
			BR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:12, bitwidth:1}
			}
			BR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:13, bitwidth:1}
			}
			BR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:14, bitwidth:1}
			}
			BR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:15, bitwidth:1}
			}
		}
	}
	GPIOC {
		(flecs.doc.Description, flecs.doc.Brief) : {"General-purpose I/Os"}
		MODER {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port mode register"}
			Register : {address:0}
			MODER15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:30, bitwidth:2}
			}
			MODER14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:28, bitwidth:2}
			}
			MODER13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:26, bitwidth:2}
			}
			MODER12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:24, bitwidth:2}
			}
			MODER11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:22, bitwidth:2}
			}
			MODER10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:20, bitwidth:2}
			}
			MODER9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:18, bitwidth:2}
			}
			MODER8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:16, bitwidth:2}
			}
			MODER7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:2}
			}
			MODER6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:2}
			}
			MODER5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:2}
			}
			MODER4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:2}
			}
			MODER3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:2}
			}
			MODER2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:2}
			}
			MODER1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:2}
			}
			MODER0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		OTYPER {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port output type register"}
			Register : {address:0}
			OT15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			OT14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			OT13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			OT12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			OT11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			OT10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			OT9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			OT8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			OT7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			OT6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			OT5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			OT4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			OT3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			OT2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			OT1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			OT0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		OSPEEDR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port output speed\n          register"}
			Register : {address:0}
			OSPEEDR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:30, bitwidth:2}
			}
			OSPEEDR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:28, bitwidth:2}
			}
			OSPEEDR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:26, bitwidth:2}
			}
			OSPEEDR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:24, bitwidth:2}
			}
			OSPEEDR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:22, bitwidth:2}
			}
			OSPEEDR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:20, bitwidth:2}
			}
			OSPEEDR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:18, bitwidth:2}
			}
			OSPEEDR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:16, bitwidth:2}
			}
			OSPEEDR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:2}
			}
			OSPEEDR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:2}
			}
			OSPEEDR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:2}
			}
			OSPEEDR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:2}
			}
			OSPEEDR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:2}
			}
			OSPEEDR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:2}
			}
			OSPEEDR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:2}
			}
			OSPEEDR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		PUPDR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port pull-up/pull-down\n          register"}
			Register : {address:0}
			PUPDR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:30, bitwidth:2}
			}
			PUPDR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:28, bitwidth:2}
			}
			PUPDR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:26, bitwidth:2}
			}
			PUPDR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:24, bitwidth:2}
			}
			PUPDR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:22, bitwidth:2}
			}
			PUPDR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:20, bitwidth:2}
			}
			PUPDR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:18, bitwidth:2}
			}
			PUPDR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:16, bitwidth:2}
			}
			PUPDR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:2}
			}
			PUPDR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:2}
			}
			PUPDR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:2}
			}
			PUPDR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:2}
			}
			PUPDR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:2}
			}
			PUPDR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:2}
			}
			PUPDR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:2}
			}
			PUPDR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		IDR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port input data register"}
			Register : {address:0}
			IDR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			IDR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			IDR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			IDR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			IDR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			IDR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			IDR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			IDR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			IDR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			IDR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			IDR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			IDR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			IDR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			IDR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			IDR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			IDR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		ODR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port output data register"}
			Register : {address:0}
			ODR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			ODR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			ODR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			ODR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			ODR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			ODR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			ODR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			ODR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			ODR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			ODR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			ODR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			ODR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			ODR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			ODR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			ODR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			ODR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		BSRR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port bit set/reset\n          register"}
			Register : {address:0}
			BR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:31, bitwidth:1}
			}
			BR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:30, bitwidth:1}
			}
			BR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:29, bitwidth:1}
			}
			BR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:28, bitwidth:1}
			}
			BR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:27, bitwidth:1}
			}
			BR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:26, bitwidth:1}
			}
			BR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:25, bitwidth:1}
			}
			BR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:24, bitwidth:1}
			}
			BR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:23, bitwidth:1}
			}
			BR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:22, bitwidth:1}
			}
			BR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:21, bitwidth:1}
			}
			BR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:20, bitwidth:1}
			}
			BR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:19, bitwidth:1}
			}
			BR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:18, bitwidth:1}
			}
			BR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:17, bitwidth:1}
			}
			BR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:16, bitwidth:1}
			}
			BS15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			BS14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			BS13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			BS12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			BS11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			BS10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			BS9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			BS8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			BS7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			BS6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			BS5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			BS4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			BS3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			BS2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			BS1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			BS0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		LCKR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port configuration lock\n          register"}
			Register : {address:0}
			LCKK {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:16, bitwidth:1}
			}
			LCK15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			LCK14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			LCK13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			LCK12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			LCK11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			LCK10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			LCK9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			LCK8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			LCK7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			LCK6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			LCK5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			LCK4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			LCK3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			LCK2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			LCK1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			LCK0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		AFRL {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO alternate function low\n          register"}
			Register : {address:0}
			AFSEL7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:28, bitwidth:4}
			}
			AFSEL6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:24, bitwidth:4}
			}
			AFSEL5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:20, bitwidth:4}
			}
			AFSEL4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:16, bitwidth:4}
			}
			AFSEL3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:12, bitwidth:4}
			}
			AFSEL2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:8, bitwidth:4}
			}
			AFSEL1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:4, bitwidth:4}
			}
			AFSEL0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:0, bitwidth:4}
			}
		}
		AFRH {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO alternate function high\n          register"}
			Register : {address:0}
			AFSEL15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:28, bitwidth:4}
			}
			AFSEL14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:24, bitwidth:4}
			}
			AFSEL13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:20, bitwidth:4}
			}
			AFSEL12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:16, bitwidth:4}
			}
			AFSEL11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:12, bitwidth:4}
			}
			AFSEL10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:8, bitwidth:4}
			}
			AFSEL9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:4, bitwidth:4}
			}
			AFSEL8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:0, bitwidth:4}
			}
		}
		BRR {
			(flecs.doc.Description, flecs.doc.Brief) : {"port bit reset register"}
			Register : {address:0}
			BR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:0, bitwidth:1}
			}
			BR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:1, bitwidth:1}
			}
			BR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:2, bitwidth:1}
			}
			BR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:3, bitwidth:1}
			}
			BR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:4, bitwidth:1}
			}
			BR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:5, bitwidth:1}
			}
			BR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:6, bitwidth:1}
			}
			BR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:7, bitwidth:1}
			}
			BR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:8, bitwidth:1}
			}
			BR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:9, bitwidth:1}
			}
			BR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:10, bitwidth:1}
			}
			BR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:11, bitwidth:1}
			}
			BR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:12, bitwidth:1}
			}
			BR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:13, bitwidth:1}
			}
			BR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:14, bitwidth:1}
			}
			BR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:15, bitwidth:1}
			}
		}
	}
	GPIOD {
		(flecs.doc.Description, flecs.doc.Brief) : {"General-purpose I/Os"}
		MODER {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port mode register"}
			Register : {address:0}
			MODER15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:30, bitwidth:2}
			}
			MODER14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:28, bitwidth:2}
			}
			MODER13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:26, bitwidth:2}
			}
			MODER12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:24, bitwidth:2}
			}
			MODER11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:22, bitwidth:2}
			}
			MODER10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:20, bitwidth:2}
			}
			MODER9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:18, bitwidth:2}
			}
			MODER8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:16, bitwidth:2}
			}
			MODER7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:2}
			}
			MODER6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:2}
			}
			MODER5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:2}
			}
			MODER4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:2}
			}
			MODER3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:2}
			}
			MODER2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:2}
			}
			MODER1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:2}
			}
			MODER0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		OTYPER {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port output type register"}
			Register : {address:0}
			OT15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			OT14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			OT13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			OT12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			OT11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			OT10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			OT9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			OT8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			OT7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			OT6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			OT5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			OT4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			OT3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			OT2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			OT1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			OT0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		OSPEEDR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port output speed\n          register"}
			Register : {address:0}
			OSPEEDR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:30, bitwidth:2}
			}
			OSPEEDR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:28, bitwidth:2}
			}
			OSPEEDR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:26, bitwidth:2}
			}
			OSPEEDR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:24, bitwidth:2}
			}
			OSPEEDR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:22, bitwidth:2}
			}
			OSPEEDR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:20, bitwidth:2}
			}
			OSPEEDR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:18, bitwidth:2}
			}
			OSPEEDR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:16, bitwidth:2}
			}
			OSPEEDR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:2}
			}
			OSPEEDR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:2}
			}
			OSPEEDR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:2}
			}
			OSPEEDR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:2}
			}
			OSPEEDR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:2}
			}
			OSPEEDR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:2}
			}
			OSPEEDR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:2}
			}
			OSPEEDR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		PUPDR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port pull-up/pull-down\n          register"}
			Register : {address:0}
			PUPDR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:30, bitwidth:2}
			}
			PUPDR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:28, bitwidth:2}
			}
			PUPDR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:26, bitwidth:2}
			}
			PUPDR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:24, bitwidth:2}
			}
			PUPDR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:22, bitwidth:2}
			}
			PUPDR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:20, bitwidth:2}
			}
			PUPDR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:18, bitwidth:2}
			}
			PUPDR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:16, bitwidth:2}
			}
			PUPDR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:2}
			}
			PUPDR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:2}
			}
			PUPDR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:2}
			}
			PUPDR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:2}
			}
			PUPDR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:2}
			}
			PUPDR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:2}
			}
			PUPDR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:2}
			}
			PUPDR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		IDR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port input data register"}
			Register : {address:0}
			IDR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			IDR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			IDR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			IDR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			IDR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			IDR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			IDR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			IDR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			IDR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			IDR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			IDR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			IDR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			IDR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			IDR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			IDR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			IDR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		ODR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port output data register"}
			Register : {address:0}
			ODR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			ODR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			ODR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			ODR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			ODR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			ODR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			ODR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			ODR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			ODR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			ODR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			ODR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			ODR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			ODR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			ODR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			ODR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			ODR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		BSRR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port bit set/reset\n          register"}
			Register : {address:0}
			BR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:31, bitwidth:1}
			}
			BR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:30, bitwidth:1}
			}
			BR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:29, bitwidth:1}
			}
			BR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:28, bitwidth:1}
			}
			BR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:27, bitwidth:1}
			}
			BR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:26, bitwidth:1}
			}
			BR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:25, bitwidth:1}
			}
			BR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:24, bitwidth:1}
			}
			BR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:23, bitwidth:1}
			}
			BR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:22, bitwidth:1}
			}
			BR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:21, bitwidth:1}
			}
			BR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:20, bitwidth:1}
			}
			BR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:19, bitwidth:1}
			}
			BR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:18, bitwidth:1}
			}
			BR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:17, bitwidth:1}
			}
			BR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:16, bitwidth:1}
			}
			BS15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			BS14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			BS13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			BS12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			BS11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			BS10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			BS9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			BS8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			BS7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			BS6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			BS5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			BS4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			BS3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			BS2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			BS1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			BS0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		LCKR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port configuration lock\n          register"}
			Register : {address:0}
			LCKK {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:16, bitwidth:1}
			}
			LCK15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			LCK14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			LCK13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			LCK12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			LCK11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			LCK10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			LCK9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			LCK8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			LCK7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			LCK6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			LCK5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			LCK4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			LCK3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			LCK2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			LCK1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			LCK0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		AFRL {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO alternate function low\n          register"}
			Register : {address:0}
			AFSEL7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:28, bitwidth:4}
			}
			AFSEL6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:24, bitwidth:4}
			}
			AFSEL5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:20, bitwidth:4}
			}
			AFSEL4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:16, bitwidth:4}
			}
			AFSEL3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:12, bitwidth:4}
			}
			AFSEL2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:8, bitwidth:4}
			}
			AFSEL1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:4, bitwidth:4}
			}
			AFSEL0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:0, bitwidth:4}
			}
		}
		AFRH {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO alternate function high\n          register"}
			Register : {address:0}
			AFSEL15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:28, bitwidth:4}
			}
			AFSEL14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:24, bitwidth:4}
			}
			AFSEL13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:20, bitwidth:4}
			}
			AFSEL12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:16, bitwidth:4}
			}
			AFSEL11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:12, bitwidth:4}
			}
			AFSEL10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:8, bitwidth:4}
			}
			AFSEL9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:4, bitwidth:4}
			}
			AFSEL8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:0, bitwidth:4}
			}
		}
		BRR {
			(flecs.doc.Description, flecs.doc.Brief) : {"port bit reset register"}
			Register : {address:0}
			BR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:0, bitwidth:1}
			}
			BR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:1, bitwidth:1}
			}
			BR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:2, bitwidth:1}
			}
			BR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:3, bitwidth:1}
			}
			BR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:4, bitwidth:1}
			}
			BR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:5, bitwidth:1}
			}
			BR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:6, bitwidth:1}
			}
			BR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:7, bitwidth:1}
			}
			BR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:8, bitwidth:1}
			}
			BR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:9, bitwidth:1}
			}
			BR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:10, bitwidth:1}
			}
			BR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:11, bitwidth:1}
			}
			BR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:12, bitwidth:1}
			}
			BR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:13, bitwidth:1}
			}
			BR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:14, bitwidth:1}
			}
			BR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:15, bitwidth:1}
			}
		}
	}
	GPIOF {
		(flecs.doc.Description, flecs.doc.Brief) : {"General-purpose I/Os"}
		MODER {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port mode register"}
			Register : {address:0}
			MODER15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:30, bitwidth:2}
			}
			MODER14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:28, bitwidth:2}
			}
			MODER13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:26, bitwidth:2}
			}
			MODER12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:24, bitwidth:2}
			}
			MODER11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:22, bitwidth:2}
			}
			MODER10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:20, bitwidth:2}
			}
			MODER9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:18, bitwidth:2}
			}
			MODER8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:16, bitwidth:2}
			}
			MODER7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:2}
			}
			MODER6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:2}
			}
			MODER5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:2}
			}
			MODER4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:2}
			}
			MODER3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:2}
			}
			MODER2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:2}
			}
			MODER1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:2}
			}
			MODER0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		OTYPER {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port output type register"}
			Register : {address:0}
			OT15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			OT14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			OT13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			OT12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			OT11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			OT10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			OT9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			OT8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			OT7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			OT6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			OT5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			OT4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			OT3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			OT2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			OT1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			OT0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		OSPEEDR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port output speed\n          register"}
			Register : {address:0}
			OSPEEDR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:30, bitwidth:2}
			}
			OSPEEDR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:28, bitwidth:2}
			}
			OSPEEDR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:26, bitwidth:2}
			}
			OSPEEDR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:24, bitwidth:2}
			}
			OSPEEDR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:22, bitwidth:2}
			}
			OSPEEDR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:20, bitwidth:2}
			}
			OSPEEDR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:18, bitwidth:2}
			}
			OSPEEDR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:16, bitwidth:2}
			}
			OSPEEDR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:2}
			}
			OSPEEDR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:2}
			}
			OSPEEDR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:2}
			}
			OSPEEDR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:2}
			}
			OSPEEDR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:2}
			}
			OSPEEDR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:2}
			}
			OSPEEDR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:2}
			}
			OSPEEDR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		PUPDR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port pull-up/pull-down\n          register"}
			Register : {address:0}
			PUPDR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:30, bitwidth:2}
			}
			PUPDR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:28, bitwidth:2}
			}
			PUPDR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:26, bitwidth:2}
			}
			PUPDR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:24, bitwidth:2}
			}
			PUPDR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:22, bitwidth:2}
			}
			PUPDR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:20, bitwidth:2}
			}
			PUPDR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:18, bitwidth:2}
			}
			PUPDR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:16, bitwidth:2}
			}
			PUPDR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:2}
			}
			PUPDR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:2}
			}
			PUPDR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:2}
			}
			PUPDR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:2}
			}
			PUPDR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:2}
			}
			PUPDR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:2}
			}
			PUPDR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:2}
			}
			PUPDR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x configuration bits (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		IDR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port input data register"}
			Register : {address:0}
			IDR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			IDR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			IDR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			IDR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			IDR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			IDR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			IDR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			IDR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			IDR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			IDR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			IDR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			IDR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			IDR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			IDR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			IDR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			IDR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port input data (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		ODR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port output data register"}
			Register : {address:0}
			ODR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			ODR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			ODR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			ODR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			ODR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			ODR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			ODR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			ODR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			ODR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			ODR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			ODR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			ODR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			ODR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			ODR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			ODR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			ODR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port output data (y =\n              0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		BSRR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port bit set/reset\n          register"}
			Register : {address:0}
			BR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:31, bitwidth:1}
			}
			BR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:30, bitwidth:1}
			}
			BR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:29, bitwidth:1}
			}
			BR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:28, bitwidth:1}
			}
			BR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:27, bitwidth:1}
			}
			BR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:26, bitwidth:1}
			}
			BR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:25, bitwidth:1}
			}
			BR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:24, bitwidth:1}
			}
			BR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:23, bitwidth:1}
			}
			BR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:22, bitwidth:1}
			}
			BR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:21, bitwidth:1}
			}
			BR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:20, bitwidth:1}
			}
			BR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:19, bitwidth:1}
			}
			BR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:18, bitwidth:1}
			}
			BR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x reset bit y (y =\n              0..15)"}
				Field : {bitoffset:17, bitwidth:1}
			}
			BR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:16, bitwidth:1}
			}
			BS15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			BS14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			BS13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			BS12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			BS11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			BS10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			BS9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			BS8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			BS7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			BS6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			BS5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			BS4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			BS3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			BS2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			BS1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			BS0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x set bit y (y=\n              0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		LCKR {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port configuration lock\n          register"}
			Register : {address:0}
			LCKK {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:16, bitwidth:1}
			}
			LCK15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			LCK14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			LCK13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:13, bitwidth:1}
			}
			LCK12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			LCK11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			LCK10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			LCK9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:9, bitwidth:1}
			}
			LCK8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:8, bitwidth:1}
			}
			LCK7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:7, bitwidth:1}
			}
			LCK6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			LCK5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:5, bitwidth:1}
			}
			LCK4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:4, bitwidth:1}
			}
			LCK3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			LCK2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			LCK1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			LCK0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port x lock bit y (y=\n              0..15)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		AFRL {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO alternate function low\n          register"}
			Register : {address:0}
			AFSEL7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:28, bitwidth:4}
			}
			AFSEL6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:24, bitwidth:4}
			}
			AFSEL5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:20, bitwidth:4}
			}
			AFSEL4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:16, bitwidth:4}
			}
			AFSEL3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:12, bitwidth:4}
			}
			AFSEL2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:8, bitwidth:4}
			}
			AFSEL1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:4, bitwidth:4}
			}
			AFSEL0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 0..7)"}
				Field : {bitoffset:0, bitwidth:4}
			}
		}
		AFRH {
			(flecs.doc.Description, flecs.doc.Brief) : {"GPIO alternate function high\n          register"}
			Register : {address:0}
			AFSEL15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:28, bitwidth:4}
			}
			AFSEL14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:24, bitwidth:4}
			}
			AFSEL13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:20, bitwidth:4}
			}
			AFSEL12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:16, bitwidth:4}
			}
			AFSEL11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:12, bitwidth:4}
			}
			AFSEL10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:8, bitwidth:4}
			}
			AFSEL9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:4, bitwidth:4}
			}
			AFSEL8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alternate function selection for port x\n              bit y (y = 8..15)"}
				Field : {bitoffset:0, bitwidth:4}
			}
		}
		BRR {
			(flecs.doc.Description, flecs.doc.Brief) : {"port bit reset register"}
			Register : {address:0}
			BR0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:0, bitwidth:1}
			}
			BR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:1, bitwidth:1}
			}
			BR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:2, bitwidth:1}
			}
			BR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:3, bitwidth:1}
			}
			BR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:4, bitwidth:1}
			}
			BR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:5, bitwidth:1}
			}
			BR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:6, bitwidth:1}
			}
			BR7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:7, bitwidth:1}
			}
			BR8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:8, bitwidth:1}
			}
			BR9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:9, bitwidth:1}
			}
			BR10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:10, bitwidth:1}
			}
			BR11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:11, bitwidth:1}
			}
			BR12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:12, bitwidth:1}
			}
			BR13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:13, bitwidth:1}
			}
			BR14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:14, bitwidth:1}
			}
			BR15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Port Reset bit"}
				Field : {bitoffset:15, bitwidth:1}
			}
		}
	}
	CRC {
		(flecs.doc.Description, flecs.doc.Brief) : {"Cyclic redundancy check calculation\n      unit"}
		DR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Data register"}
			Register : {address:0}
			DR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Data register bits"}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		IDR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Independent data register"}
			Register : {address:0}
			IDR {
				(flecs.doc.Description, flecs.doc.Brief) : {"General-purpose 32-bit data register\n              bits"}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		CR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Control register"}
			Register : {address:0}
			REV_OUT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Reverse output data"}
				Field : {bitoffset:7, bitwidth:1}
			}
			REV_IN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Reverse input data"}
				Field : {bitoffset:5, bitwidth:2}
			}
			POLYSIZE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Polynomial size"}
				Field : {bitoffset:3, bitwidth:2}
			}
			RESET {
				(flecs.doc.Description, flecs.doc.Brief) : {"RESET bit"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		INIT {
			(flecs.doc.Description, flecs.doc.Brief) : {"Initial CRC value"}
			Register : {address:0}
			CRC_INIT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Programmable initial CRC\n              value"}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		POL {
			(flecs.doc.Description, flecs.doc.Brief) : {"polynomial"}
			Register : {address:0}
			POL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Programmable polynomial"}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
	}
	EXTI {
		(flecs.doc.Description, flecs.doc.Brief) : {"External interrupt/event\n      controller"}
		RTSR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"EXTI rising trigger selection\n          register"}
			Register : {address:0}
			RT0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising trigger event configuration bit\n              of Configurable Event line"}
				Field : {bitoffset:0, bitwidth:1}
			}
			RT1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising trigger event configuration bit\n              of Configurable Event line"}
				Field : {bitoffset:1, bitwidth:1}
			}
			RT2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising trigger event configuration bit\n              of Configurable Event line"}
				Field : {bitoffset:2, bitwidth:1}
			}
			RT3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising trigger event configuration bit\n              of Configurable Event line"}
				Field : {bitoffset:3, bitwidth:1}
			}
			RT4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising trigger event configuration bit\n              of Configurable Event line"}
				Field : {bitoffset:4, bitwidth:1}
			}
			RT5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising trigger event configuration bit\n              of Configurable Event line"}
				Field : {bitoffset:5, bitwidth:1}
			}
			RT6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising trigger event configuration bit\n              of Configurable Event line"}
				Field : {bitoffset:6, bitwidth:1}
			}
			RT7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising trigger event configuration bit\n              of Configurable Event line"}
				Field : {bitoffset:7, bitwidth:1}
			}
			RT8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising trigger event configuration bit\n              of Configurable Event line"}
				Field : {bitoffset:8, bitwidth:1}
			}
			RT9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising trigger event configuration bit\n              of Configurable Event line"}
				Field : {bitoffset:9, bitwidth:1}
			}
			RT10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising trigger event configuration bit\n              of Configurable Event line"}
				Field : {bitoffset:10, bitwidth:1}
			}
			RT11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising trigger event configuration bit\n              of Configurable Event line"}
				Field : {bitoffset:11, bitwidth:1}
			}
			RT12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising trigger event configuration bit\n              of Configurable Event line"}
				Field : {bitoffset:12, bitwidth:1}
			}
			RT13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising trigger event configuration bit\n              of Configurable Event line"}
				Field : {bitoffset:13, bitwidth:1}
			}
			RT14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising trigger event configuration bit\n              of Configurable Event line"}
				Field : {bitoffset:14, bitwidth:1}
			}
			RT15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising trigger event configuration bit\n              of Configurable Event line"}
				Field : {bitoffset:15, bitwidth:1}
			}
		}
		FTSR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"EXTI falling trigger selection\n          register"}
			Register : {address:0}
			FT0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling trigger event configuration bit of configurable line"}
				Field : {bitoffset:0, bitwidth:1}
			}
			FT1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling trigger event configuration bit of configurable line"}
				Field : {bitoffset:1, bitwidth:1}
			}
			FT2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling trigger event configuration bit of configurable line"}
				Field : {bitoffset:2, bitwidth:1}
			}
			FT3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling trigger event configuration bit of configurable line"}
				Field : {bitoffset:3, bitwidth:1}
			}
			FT4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling trigger event configuration bit of configurable line"}
				Field : {bitoffset:4, bitwidth:1}
			}
			FT5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling trigger event configuration bit of configurable line"}
				Field : {bitoffset:5, bitwidth:1}
			}
			FT6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling trigger event configuration bit of configurable line"}
				Field : {bitoffset:6, bitwidth:1}
			}
			FT7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling trigger event configuration bit of configurable line"}
				Field : {bitoffset:7, bitwidth:1}
			}
			FT8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling trigger event configuration bit of configurable line"}
				Field : {bitoffset:8, bitwidth:1}
			}
			FT9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling trigger event configuration bit of configurable line"}
				Field : {bitoffset:9, bitwidth:1}
			}
			FT10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling trigger event configuration bit of configurable line"}
				Field : {bitoffset:10, bitwidth:1}
			}
			FT11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling trigger event configuration bit of configurable line"}
				Field : {bitoffset:11, bitwidth:1}
			}
			FT12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling trigger event configuration bit of configurable line"}
				Field : {bitoffset:12, bitwidth:1}
			}
			FT13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling trigger event configuration bit of configurable line"}
				Field : {bitoffset:13, bitwidth:1}
			}
			FT14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling trigger event configuration bit of configurable line"}
				Field : {bitoffset:14, bitwidth:1}
			}
			FT15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling trigger event configuration bit of configurable line"}
				Field : {bitoffset:15, bitwidth:1}
			}
		}
		SWIER1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"EXTI software interrupt event\n          register"}
			Register : {address:0}
			SWI0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Software rising edge event trigger on line"}
				Field : {bitoffset:0, bitwidth:1}
			}
			SWI1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Software rising edge event trigger on line"}
				Field : {bitoffset:1, bitwidth:1}
			}
			SWI2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Software rising edge event trigger on line"}
				Field : {bitoffset:2, bitwidth:1}
			}
			SWI3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Software rising edge event trigger on line"}
				Field : {bitoffset:3, bitwidth:1}
			}
			SWI4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Software rising edge event trigger on line"}
				Field : {bitoffset:4, bitwidth:1}
			}
			SWI5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Software rising edge event trigger on line"}
				Field : {bitoffset:5, bitwidth:1}
			}
			SWI6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Software rising edge event trigger on line"}
				Field : {bitoffset:6, bitwidth:1}
			}
			SWI7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Software rising edge event trigger on line"}
				Field : {bitoffset:7, bitwidth:1}
			}
			SWI8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Software rising edge event trigger on line"}
				Field : {bitoffset:8, bitwidth:1}
			}
			SWI9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Software rising edge event trigger on line"}
				Field : {bitoffset:9, bitwidth:1}
			}
			SWI10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Software rising edge event trigger on line"}
				Field : {bitoffset:10, bitwidth:1}
			}
			SWI11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Software rising edge event trigger on line"}
				Field : {bitoffset:11, bitwidth:1}
			}
			SWI12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Software rising edge event trigger on line"}
				Field : {bitoffset:12, bitwidth:1}
			}
			SWI13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Software rising edge event trigger on line"}
				Field : {bitoffset:13, bitwidth:1}
			}
			SWI14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Software rising edge event trigger on line"}
				Field : {bitoffset:14, bitwidth:1}
			}
			SWI15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Software rising edge event trigger on line"}
				Field : {bitoffset:15, bitwidth:1}
			}
		}
		RPR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"EXTI rising edge pending\n          register"}
			Register : {address:0}
			RPIF0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising edge event pending for configurable line"}
				Field : {bitoffset:0, bitwidth:1}
			}
			RPIF1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising edge event pending for configurable line"}
				Field : {bitoffset:1, bitwidth:1}
			}
			RPIF2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising edge event pending for configurable line"}
				Field : {bitoffset:2, bitwidth:1}
			}
			RPIF3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising edge event pending for configurable line"}
				Field : {bitoffset:3, bitwidth:1}
			}
			RPIF4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising edge event pending for configurable line"}
				Field : {bitoffset:4, bitwidth:1}
			}
			RPIF5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"configurable event inputs x rising edge\n              Pending bit"}
				Field : {bitoffset:5, bitwidth:1}
			}
			RPIF6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising edge event pending for configurable line"}
				Field : {bitoffset:6, bitwidth:1}
			}
			RPIF7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising edge event pending for configurable line"}
				Field : {bitoffset:7, bitwidth:1}
			}
			RPIF8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising edge event pending for configurable line"}
				Field : {bitoffset:8, bitwidth:1}
			}
			RPIF9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising edge event pending for configurable line"}
				Field : {bitoffset:9, bitwidth:1}
			}
			RPIF10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising edge event pending for configurable line"}
				Field : {bitoffset:10, bitwidth:1}
			}
			RPIF11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising edge event pending for configurable line"}
				Field : {bitoffset:11, bitwidth:1}
			}
			RPIF12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising edge event pending for configurable line"}
				Field : {bitoffset:12, bitwidth:1}
			}
			RPIF13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising edge event pending for configurable line"}
				Field : {bitoffset:13, bitwidth:1}
			}
			RPIF14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising edge event pending for configurable line"}
				Field : {bitoffset:14, bitwidth:1}
			}
			RPIF15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rising edge event pending for configurable line"}
				Field : {bitoffset:15, bitwidth:1}
			}
		}
		FPR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"EXTI falling edge pending\n          register"}
			Register : {address:0}
			FPIF0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling edge event pending for configurable line"}
				Field : {bitoffset:0, bitwidth:1}
			}
			FPIF1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling edge event pending for configurable line"}
				Field : {bitoffset:1, bitwidth:1}
			}
			FPIF2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling edge event pending for configurable line"}
				Field : {bitoffset:2, bitwidth:1}
			}
			FPIF3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling edge event pending for configurable line"}
				Field : {bitoffset:3, bitwidth:1}
			}
			FPIF4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling edge event pending for configurable line"}
				Field : {bitoffset:4, bitwidth:1}
			}
			FPIF5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling edge event pending for configurable line"}
				Field : {bitoffset:5, bitwidth:1}
			}
			FPIF6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling edge event pending for configurable line"}
				Field : {bitoffset:6, bitwidth:1}
			}
			FPIF7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling edge event pending for configurable line"}
				Field : {bitoffset:7, bitwidth:1}
			}
			FPIF8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling edge event pending for configurable line"}
				Field : {bitoffset:8, bitwidth:1}
			}
			FPIF9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling edge event pending for configurable line"}
				Field : {bitoffset:9, bitwidth:1}
			}
			FPIF10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling edge event pending for configurable line"}
				Field : {bitoffset:10, bitwidth:1}
			}
			FPIF11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling edge event pending for configurable line"}
				Field : {bitoffset:11, bitwidth:1}
			}
			FPIF12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling edge event pending for configurable line"}
				Field : {bitoffset:12, bitwidth:1}
			}
			FPIF13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling edge event pending for configurable line"}
				Field : {bitoffset:13, bitwidth:1}
			}
			FPIF14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling edge event pending for configurable line"}
				Field : {bitoffset:14, bitwidth:1}
			}
			FPIF15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Falling edge event pending for configurable line"}
				Field : {bitoffset:15, bitwidth:1}
			}
		}
		EXTICR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"EXTI external interrupt selection\n          register"}
			Register : {address:0}
			EXTI0_7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port selection"}
				Field : {bitoffset:0, bitwidth:8}
			}
			EXTI8_15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port selection"}
				Field : {bitoffset:8, bitwidth:8}
			}
			EXTI16_23 {
				(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port selection"}
				Field : {bitoffset:16, bitwidth:8}
			}
			EXTI24_31 {
				(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port selection"}
				Field : {bitoffset:24, bitwidth:8}
			}
		}
		EXTICR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"EXTI external interrupt selection\n          register"}
			Register : {address:0}
			EXTI0_7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port selection"}
				Field : {bitoffset:0, bitwidth:8}
			}
			EXTI8_15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port selection"}
				Field : {bitoffset:8, bitwidth:8}
			}
			EXTI16_23 {
				(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port selection"}
				Field : {bitoffset:16, bitwidth:8}
			}
			EXTI24_31 {
				(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port selection"}
				Field : {bitoffset:24, bitwidth:8}
			}
		}
		EXTICR3 {
			(flecs.doc.Description, flecs.doc.Brief) : {"EXTI external interrupt selection\n          register"}
			Register : {address:0}
			EXTI0_7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port selection"}
				Field : {bitoffset:0, bitwidth:8}
			}
			EXTI8_15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port selection"}
				Field : {bitoffset:8, bitwidth:8}
			}
			EXTI16_23 {
				(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port selection"}
				Field : {bitoffset:16, bitwidth:8}
			}
			EXTI24_31 {
				(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port selection"}
				Field : {bitoffset:24, bitwidth:8}
			}
		}
		EXTICR4 {
			(flecs.doc.Description, flecs.doc.Brief) : {"EXTI external interrupt selection\n          register"}
			Register : {address:0}
			EXTI0_7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port selection"}
				Field : {bitoffset:0, bitwidth:8}
			}
			EXTI8_15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port selection"}
				Field : {bitoffset:8, bitwidth:8}
			}
			EXTI16_23 {
				(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port selection"}
				Field : {bitoffset:16, bitwidth:8}
			}
			EXTI24_31 {
				(flecs.doc.Description, flecs.doc.Brief) : {"GPIO port selection"}
				Field : {bitoffset:24, bitwidth:8}
			}
		}
		IMR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"EXTI CPU wakeup with interrupt mask\n          register"}
			Register : {address:0}
			IM0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with interrupt mask on event\n              input"}
				Field : {bitoffset:0, bitwidth:1}
			}
			IM1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with interrupt mask on event\n              input"}
				Field : {bitoffset:1, bitwidth:1}
			}
			IM2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with interrupt mask on event\n              input"}
				Field : {bitoffset:2, bitwidth:1}
			}
			IM3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with interrupt mask on event\n              input"}
				Field : {bitoffset:3, bitwidth:1}
			}
			IM4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with interrupt mask on event\n              input"}
				Field : {bitoffset:4, bitwidth:1}
			}
			IM5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with interrupt mask on event\n              input"}
				Field : {bitoffset:5, bitwidth:1}
			}
			IM6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with interrupt mask on event\n              input"}
				Field : {bitoffset:6, bitwidth:1}
			}
			IM7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with interrupt mask on event\n              input"}
				Field : {bitoffset:7, bitwidth:1}
			}
			IM8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with interrupt mask on event\n              input"}
				Field : {bitoffset:8, bitwidth:1}
			}
			IM9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with interrupt mask on event\n              input"}
				Field : {bitoffset:9, bitwidth:1}
			}
			IM10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with interrupt mask on event\n              input"}
				Field : {bitoffset:10, bitwidth:1}
			}
			IM11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with interrupt mask on event\n              input"}
				Field : {bitoffset:11, bitwidth:1}
			}
			IM12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with interrupt mask on event\n              input"}
				Field : {bitoffset:12, bitwidth:1}
			}
			IM13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with interrupt mask on event\n              input"}
				Field : {bitoffset:13, bitwidth:1}
			}
			IM14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with interrupt mask on event\n              input"}
				Field : {bitoffset:14, bitwidth:1}
			}
			IM15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with interrupt mask on event\n              input"}
				Field : {bitoffset:15, bitwidth:1}
			}
			IM19 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with interrupt mask on event\n              input"}
				Field : {bitoffset:19, bitwidth:1}
			}
			IM21 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with interrupt mask on event\n              input"}
				Field : {bitoffset:21, bitwidth:1}
			}
			IM22 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with interrupt mask on event\n              input"}
				Field : {bitoffset:22, bitwidth:1}
			}
			IM23 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with interrupt mask on event\n              input"}
				Field : {bitoffset:23, bitwidth:1}
			}
			IM24 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with interrupt mask on event\n              input"}
				Field : {bitoffset:24, bitwidth:1}
			}
			IM25 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with interrupt mask on event\n              input"}
				Field : {bitoffset:25, bitwidth:1}
			}
			IM26 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with interrupt mask on event\n              input"}
				Field : {bitoffset:26, bitwidth:1}
			}
			IM31 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with interrupt mask on event\n              input"}
				Field : {bitoffset:31, bitwidth:1}
			}
		}
		EMR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"EXTI CPU wakeup with event mask\n          register"}
			Register : {address:0}
			EM0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with event mask on event\n              input"}
				Field : {bitoffset:0, bitwidth:1}
			}
			EM1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with event mask on event\n              input"}
				Field : {bitoffset:1, bitwidth:1}
			}
			EM2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with event mask on event\n              input"}
				Field : {bitoffset:2, bitwidth:1}
			}
			EM3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with event mask on event\n              input"}
				Field : {bitoffset:3, bitwidth:1}
			}
			EM4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with event mask on event\n              input"}
				Field : {bitoffset:4, bitwidth:1}
			}
			EM5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with event mask on event\n              input"}
				Field : {bitoffset:5, bitwidth:1}
			}
			EM6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with event mask on event\n              input"}
				Field : {bitoffset:6, bitwidth:1}
			}
			EM7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with event mask on event\n              input"}
				Field : {bitoffset:7, bitwidth:1}
			}
			EM8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with event mask on event\n              input"}
				Field : {bitoffset:8, bitwidth:1}
			}
			EM9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with event mask on event\n              input"}
				Field : {bitoffset:9, bitwidth:1}
			}
			EM10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with event mask on event\n              input"}
				Field : {bitoffset:10, bitwidth:1}
			}
			EM11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with event mask on event\n              input"}
				Field : {bitoffset:11, bitwidth:1}
			}
			EM12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with event mask on event\n              input"}
				Field : {bitoffset:12, bitwidth:1}
			}
			EM13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with event mask on event\n              input"}
				Field : {bitoffset:13, bitwidth:1}
			}
			EM14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with event mask on event\n              input"}
				Field : {bitoffset:14, bitwidth:1}
			}
			EM15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with event mask on event\n              input"}
				Field : {bitoffset:15, bitwidth:1}
			}
			EM19 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with event mask on event\n              input"}
				Field : {bitoffset:19, bitwidth:1}
			}
			EM21 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with event mask on event\n              input"}
				Field : {bitoffset:21, bitwidth:1}
			}
			EM23 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with event mask on event\n              input"}
				Field : {bitoffset:23, bitwidth:1}
			}
			EM25 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with event mask on event\n              input"}
				Field : {bitoffset:25, bitwidth:1}
			}
			EM26 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with event mask on event\n              input"}
				Field : {bitoffset:26, bitwidth:1}
			}
			EM31 {
				(flecs.doc.Description, flecs.doc.Brief) : {"CPU wakeup with event mask on event\n              input"}
				Field : {bitoffset:31, bitwidth:1}
			}
		}
	}
	TIM16 {
		(flecs.doc.Description, flecs.doc.Brief) : {"General purpose timers"}
		CR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"control register 1"}
			Register : {address:0}
			CEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Counter enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
			UDIS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update disable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			URS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update request source"}
				Field : {bitoffset:2, bitwidth:1}
			}
			OPM {
				(flecs.doc.Description, flecs.doc.Brief) : {"One-pulse mode"}
				Field : {bitoffset:3, bitwidth:1}
			}
			ARPE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Auto-reload preload enable"}
				Field : {bitoffset:7, bitwidth:1}
			}
			CKD {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clock division"}
				Field : {bitoffset:8, bitwidth:2}
			}
			UIFREMAP {
				(flecs.doc.Description, flecs.doc.Brief) : {"UIF status bit remapping"}
				Field : {bitoffset:11, bitwidth:1}
			}
		}
		CR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"control register 2"}
			Register : {address:0}
			OIS1N {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Idle state 1"}
				Field : {bitoffset:9, bitwidth:1}
			}
			OIS1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Idle state 1"}
				Field : {bitoffset:8, bitwidth:1}
			}
			CCDS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare DMA\n              selection"}
				Field : {bitoffset:3, bitwidth:1}
			}
			CCUS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare control update\n              selection"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CCPC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare preloaded\n              control"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		DIER {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA/Interrupt enable register"}
			Register : {address:0}
			COMDE {
				(flecs.doc.Description, flecs.doc.Brief) : {"COM DMA request enable"}
				Field : {bitoffset:13, bitwidth:1}
			}
			CC1DE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 DMA request\n              enable"}
				Field : {bitoffset:9, bitwidth:1}
			}
			UDE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update DMA request enable"}
				Field : {bitoffset:8, bitwidth:1}
			}
			BIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break interrupt enable"}
				Field : {bitoffset:7, bitwidth:1}
			}
			COMIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"COM interrupt enable"}
				Field : {bitoffset:5, bitwidth:1}
			}
			CC1IE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 interrupt\n              enable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			UIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update interrupt enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		SR {
			(flecs.doc.Description, flecs.doc.Brief) : {"status register"}
			Register : {address:0}
			CC1OF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 overcapture\n              flag"}
				Field : {bitoffset:9, bitwidth:1}
			}
			BIF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break interrupt flag"}
				Field : {bitoffset:7, bitwidth:1}
			}
			COMIF {
				(flecs.doc.Description, flecs.doc.Brief) : {"COM interrupt flag"}
				Field : {bitoffset:5, bitwidth:1}
			}
			CC1IF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare 1 interrupt\n              flag"}
				Field : {bitoffset:1, bitwidth:1}
			}
			UIF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update interrupt flag"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		EGR {
			(flecs.doc.Description, flecs.doc.Brief) : {"event generation register"}
			Register : {address:0}
			BG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break generation"}
				Field : {bitoffset:7, bitwidth:1}
			}
			COMG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare control update\n              generation"}
				Field : {bitoffset:5, bitwidth:1}
			}
			CC1G {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare 1\n              generation"}
				Field : {bitoffset:1, bitwidth:1}
			}
			UG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update generation"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		CCMR1_Output {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare mode register (output\n          mode)"}
			Register : {address:0}
			OC1M_2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 1 mode"}
				Field : {bitoffset:16, bitwidth:1}
			}
			OC1M {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 1 mode"}
				Field : {bitoffset:4, bitwidth:3}
			}
			OC1PE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 1 preload\n              enable"}
				Field : {bitoffset:3, bitwidth:1}
			}
			OC1FE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 1 fast\n              enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CC1S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1\n              selection"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		CCMR1_Input {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare mode register 1 (input\n          mode)"}
			Register : {address:0}
			IC1F {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input capture 1 filter"}
				Field : {bitoffset:4, bitwidth:4}
			}
			IC1PSC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input capture 1 prescaler"}
				Field : {bitoffset:2, bitwidth:2}
			}
			CC1S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1\n              selection"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		CCER {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare enable\n          register"}
			Register : {address:0}
			CC1NP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 output\n              Polarity"}
				Field : {bitoffset:3, bitwidth:1}
			}
			CC1NE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 complementary output\n              enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CC1P {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 output\n              Polarity"}
				Field : {bitoffset:1, bitwidth:1}
			}
			CC1E {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 output\n              enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		CNT {
			(flecs.doc.Description, flecs.doc.Brief) : {"counter"}
			Register : {address:0}
			CNT {
				(flecs.doc.Description, flecs.doc.Brief) : {"counter value"}
				Field : {bitoffset:0, bitwidth:16}
			}
			UIFCPY {
				(flecs.doc.Description, flecs.doc.Brief) : {"UIF Copy"}
				Field : {bitoffset:31, bitwidth:1}
			}
		}
		PSC {
			(flecs.doc.Description, flecs.doc.Brief) : {"prescaler"}
			Register : {address:0}
			PSC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Prescaler value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		ARR {
			(flecs.doc.Description, flecs.doc.Brief) : {"auto-reload register"}
			Register : {address:0}
			ARR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Auto-reload value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		RCR {
			(flecs.doc.Description, flecs.doc.Brief) : {"repetition counter register"}
			Register : {address:0}
			REP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Repetition counter value"}
				Field : {bitoffset:0, bitwidth:8}
			}
		}
		CCR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare register 1"}
			Register : {address:0}
			CCR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		BDTR {
			(flecs.doc.Description, flecs.doc.Brief) : {"break and dead-time register"}
			Register : {address:0}
			DTG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Dead-time generator setup"}
				Field : {bitoffset:0, bitwidth:8}
			}
			LOCK {
				(flecs.doc.Description, flecs.doc.Brief) : {"Lock configuration"}
				Field : {bitoffset:8, bitwidth:2}
			}
			OSSI {
				(flecs.doc.Description, flecs.doc.Brief) : {"Off-state selection for Idle\n              mode"}
				Field : {bitoffset:10, bitwidth:1}
			}
			OSSR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Off-state selection for Run\n              mode"}
				Field : {bitoffset:11, bitwidth:1}
			}
			BKE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break enable"}
				Field : {bitoffset:12, bitwidth:1}
			}
			BKP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break polarity"}
				Field : {bitoffset:13, bitwidth:1}
			}
			AOE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Automatic output enable"}
				Field : {bitoffset:14, bitwidth:1}
			}
			MOE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Main output enable"}
				Field : {bitoffset:15, bitwidth:1}
			}
			BKF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break filter"}
				Field : {bitoffset:16, bitwidth:4}
			}
			BKDSRM {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break Disarm"}
				Field : {bitoffset:26, bitwidth:1}
			}
			BKBID {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break Bidirectional"}
				Field : {bitoffset:28, bitwidth:1}
			}
		}
		DCR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA control register"}
			Register : {address:0}
			DBL {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA burst length"}
				Field : {bitoffset:8, bitwidth:5}
			}
			DBA {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA base address"}
				Field : {bitoffset:0, bitwidth:5}
			}
		}
		DMAR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA address for full transfer"}
			Register : {address:0}
			DMAB {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA register for burst\n              accesses"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		AF1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"TIM17 option register 1"}
			Register : {address:0}
			BKINE {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK BKIN input enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
			BKCMP1E {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK COMP1 enable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			BKCMP2E {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK COMP2 enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			BKDFBK1E {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK DFSDM_BREAK1 enable"}
				Field : {bitoffset:8, bitwidth:1}
			}
			BKINP {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK BKIN input polarity"}
				Field : {bitoffset:9, bitwidth:1}
			}
			BKCMP1P {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK COMP1 input polarity"}
				Field : {bitoffset:10, bitwidth:1}
			}
			BKCMP2P {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK COMP2 input polarit"}
				Field : {bitoffset:11, bitwidth:1}
			}
		}
		TISEL {
			(flecs.doc.Description, flecs.doc.Brief) : {"input selection register"}
			Register : {address:0}
			TI1SEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"selects input"}
				Field : {bitoffset:0, bitwidth:4}
			}
		}
	}
	TIM17 {
		(flecs.doc.Description, flecs.doc.Brief) : {"General purpose timers"}
		CR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"control register 1"}
			Register : {address:0}
			CEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Counter enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
			UDIS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update disable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			URS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update request source"}
				Field : {bitoffset:2, bitwidth:1}
			}
			OPM {
				(flecs.doc.Description, flecs.doc.Brief) : {"One-pulse mode"}
				Field : {bitoffset:3, bitwidth:1}
			}
			ARPE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Auto-reload preload enable"}
				Field : {bitoffset:7, bitwidth:1}
			}
			CKD {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clock division"}
				Field : {bitoffset:8, bitwidth:2}
			}
			UIFREMAP {
				(flecs.doc.Description, flecs.doc.Brief) : {"UIF status bit remapping"}
				Field : {bitoffset:11, bitwidth:1}
			}
		}
		CR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"control register 2"}
			Register : {address:0}
			OIS1N {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Idle state 1"}
				Field : {bitoffset:9, bitwidth:1}
			}
			OIS1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Idle state 1"}
				Field : {bitoffset:8, bitwidth:1}
			}
			CCDS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare DMA\n              selection"}
				Field : {bitoffset:3, bitwidth:1}
			}
			CCUS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare control update\n              selection"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CCPC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare preloaded\n              control"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		DIER {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA/Interrupt enable register"}
			Register : {address:0}
			COMDE {
				(flecs.doc.Description, flecs.doc.Brief) : {"COM DMA request enable"}
				Field : {bitoffset:13, bitwidth:1}
			}
			CC1DE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 DMA request\n              enable"}
				Field : {bitoffset:9, bitwidth:1}
			}
			UDE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update DMA request enable"}
				Field : {bitoffset:8, bitwidth:1}
			}
			BIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break interrupt enable"}
				Field : {bitoffset:7, bitwidth:1}
			}
			COMIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"COM interrupt enable"}
				Field : {bitoffset:5, bitwidth:1}
			}
			CC1IE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 interrupt\n              enable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			UIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update interrupt enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		SR {
			(flecs.doc.Description, flecs.doc.Brief) : {"status register"}
			Register : {address:0}
			CC1OF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 overcapture\n              flag"}
				Field : {bitoffset:9, bitwidth:1}
			}
			BIF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break interrupt flag"}
				Field : {bitoffset:7, bitwidth:1}
			}
			COMIF {
				(flecs.doc.Description, flecs.doc.Brief) : {"COM interrupt flag"}
				Field : {bitoffset:5, bitwidth:1}
			}
			CC1IF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare 1 interrupt\n              flag"}
				Field : {bitoffset:1, bitwidth:1}
			}
			UIF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update interrupt flag"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		EGR {
			(flecs.doc.Description, flecs.doc.Brief) : {"event generation register"}
			Register : {address:0}
			BG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break generation"}
				Field : {bitoffset:7, bitwidth:1}
			}
			COMG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare control update\n              generation"}
				Field : {bitoffset:5, bitwidth:1}
			}
			CC1G {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare 1\n              generation"}
				Field : {bitoffset:1, bitwidth:1}
			}
			UG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update generation"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		CCMR1_Output {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare mode register (output\n          mode)"}
			Register : {address:0}
			OC1M_2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 1 mode"}
				Field : {bitoffset:16, bitwidth:1}
			}
			OC1M {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 1 mode"}
				Field : {bitoffset:4, bitwidth:3}
			}
			OC1PE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 1 preload\n              enable"}
				Field : {bitoffset:3, bitwidth:1}
			}
			OC1FE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 1 fast\n              enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CC1S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1\n              selection"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		CCMR1_Input {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare mode register 1 (input\n          mode)"}
			Register : {address:0}
			IC1F {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input capture 1 filter"}
				Field : {bitoffset:4, bitwidth:4}
			}
			IC1PSC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input capture 1 prescaler"}
				Field : {bitoffset:2, bitwidth:2}
			}
			CC1S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1\n              selection"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		CCER {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare enable\n          register"}
			Register : {address:0}
			CC1NP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 output\n              Polarity"}
				Field : {bitoffset:3, bitwidth:1}
			}
			CC1NE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 complementary output\n              enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CC1P {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 output\n              Polarity"}
				Field : {bitoffset:1, bitwidth:1}
			}
			CC1E {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 output\n              enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		CNT {
			(flecs.doc.Description, flecs.doc.Brief) : {"counter"}
			Register : {address:0}
			CNT {
				(flecs.doc.Description, flecs.doc.Brief) : {"counter value"}
				Field : {bitoffset:0, bitwidth:16}
			}
			UIFCPY {
				(flecs.doc.Description, flecs.doc.Brief) : {"UIF Copy"}
				Field : {bitoffset:31, bitwidth:1}
			}
		}
		PSC {
			(flecs.doc.Description, flecs.doc.Brief) : {"prescaler"}
			Register : {address:0}
			PSC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Prescaler value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		ARR {
			(flecs.doc.Description, flecs.doc.Brief) : {"auto-reload register"}
			Register : {address:0}
			ARR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Auto-reload value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		RCR {
			(flecs.doc.Description, flecs.doc.Brief) : {"repetition counter register"}
			Register : {address:0}
			REP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Repetition counter value"}
				Field : {bitoffset:0, bitwidth:8}
			}
		}
		CCR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare register 1"}
			Register : {address:0}
			CCR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		BDTR {
			(flecs.doc.Description, flecs.doc.Brief) : {"break and dead-time register"}
			Register : {address:0}
			DTG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Dead-time generator setup"}
				Field : {bitoffset:0, bitwidth:8}
			}
			LOCK {
				(flecs.doc.Description, flecs.doc.Brief) : {"Lock configuration"}
				Field : {bitoffset:8, bitwidth:2}
			}
			OSSI {
				(flecs.doc.Description, flecs.doc.Brief) : {"Off-state selection for Idle\n              mode"}
				Field : {bitoffset:10, bitwidth:1}
			}
			OSSR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Off-state selection for Run\n              mode"}
				Field : {bitoffset:11, bitwidth:1}
			}
			BKE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break enable"}
				Field : {bitoffset:12, bitwidth:1}
			}
			BKP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break polarity"}
				Field : {bitoffset:13, bitwidth:1}
			}
			AOE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Automatic output enable"}
				Field : {bitoffset:14, bitwidth:1}
			}
			MOE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Main output enable"}
				Field : {bitoffset:15, bitwidth:1}
			}
			BKF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break filter"}
				Field : {bitoffset:16, bitwidth:4}
			}
			BKDSRM {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break Disarm"}
				Field : {bitoffset:26, bitwidth:1}
			}
			BKBID {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break Bidirectional"}
				Field : {bitoffset:28, bitwidth:1}
			}
		}
		DCR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA control register"}
			Register : {address:0}
			DBL {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA burst length"}
				Field : {bitoffset:8, bitwidth:5}
			}
			DBA {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA base address"}
				Field : {bitoffset:0, bitwidth:5}
			}
		}
		DMAR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA address for full transfer"}
			Register : {address:0}
			DMAB {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA register for burst\n              accesses"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		AF1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"TIM17 option register 1"}
			Register : {address:0}
			BKINE {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK BKIN input enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
			BKCMP1E {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK COMP1 enable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			BKCMP2E {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK COMP2 enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			BKDFBK1E {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK DFSDM_BREAK1 enable"}
				Field : {bitoffset:8, bitwidth:1}
			}
			BKINP {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK BKIN input polarity"}
				Field : {bitoffset:9, bitwidth:1}
			}
			BKCMP1P {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK COMP1 input polarity"}
				Field : {bitoffset:10, bitwidth:1}
			}
			BKCMP2P {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK COMP2 input polarit"}
				Field : {bitoffset:11, bitwidth:1}
			}
		}
		TISEL {
			(flecs.doc.Description, flecs.doc.Brief) : {"input selection register"}
			Register : {address:0}
			TI1SEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"selects input"}
				Field : {bitoffset:0, bitwidth:4}
			}
		}
	}
	USART1 {
		(flecs.doc.Description, flecs.doc.Brief) : {"Universal synchronous asynchronous receiver\n      transmitter"}
		CR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"Control register 1"}
			Register : {address:0}
			RXFFIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"RXFIFO Full interrupt\n              enable"}
				Field : {bitoffset:31, bitwidth:1}
			}
			TXFEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"TXFIFO empty interrupt\n              enable"}
				Field : {bitoffset:30, bitwidth:1}
			}
			FIFOEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"FIFO mode enable"}
				Field : {bitoffset:29, bitwidth:1}
			}
			M1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Word length"}
				Field : {bitoffset:28, bitwidth:1}
			}
			EOBIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"End of Block interrupt\n              enable"}
				Field : {bitoffset:27, bitwidth:1}
			}
			RTOIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Receiver timeout interrupt\n              enable"}
				Field : {bitoffset:26, bitwidth:1}
			}
			DEAT {
				(flecs.doc.Description, flecs.doc.Brief) : {"DEAT"}
				Field : {bitoffset:21, bitwidth:5}
			}
			DEDT {
				(flecs.doc.Description, flecs.doc.Brief) : {"DEDT"}
				Field : {bitoffset:16, bitwidth:5}
			}
			OVER8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Oversampling mode"}
				Field : {bitoffset:15, bitwidth:1}
			}
			CMIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Character match interrupt\n              enable"}
				Field : {bitoffset:14, bitwidth:1}
			}
			MME {
				(flecs.doc.Description, flecs.doc.Brief) : {"Mute mode enable"}
				Field : {bitoffset:13, bitwidth:1}
			}
			M0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Word length"}
				Field : {bitoffset:12, bitwidth:1}
			}
			WAKE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Receiver wakeup method"}
				Field : {bitoffset:11, bitwidth:1}
			}
			PCE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Parity control enable"}
				Field : {bitoffset:10, bitwidth:1}
			}
			PS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Parity selection"}
				Field : {bitoffset:9, bitwidth:1}
			}
			PEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"PE interrupt enable"}
				Field : {bitoffset:8, bitwidth:1}
			}
			TXEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"interrupt enable"}
				Field : {bitoffset:7, bitwidth:1}
			}
			TCIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transmission complete interrupt\n              enable"}
				Field : {bitoffset:6, bitwidth:1}
			}
			RXNEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"RXNE interrupt enable"}
				Field : {bitoffset:5, bitwidth:1}
			}
			IDLEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"IDLE interrupt enable"}
				Field : {bitoffset:4, bitwidth:1}
			}
			TE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transmitter enable"}
				Field : {bitoffset:3, bitwidth:1}
			}
			RE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Receiver enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			UESM {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART enable in Stop mode"}
				Field : {bitoffset:1, bitwidth:1}
			}
			UE {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		CR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"Control register 2"}
			Register : {address:0}
			ADD4_7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Address of the USART node"}
				Field : {bitoffset:28, bitwidth:4}
			}
			ADD0_3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Address of the USART node"}
				Field : {bitoffset:24, bitwidth:4}
			}
			RTOEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Receiver timeout enable"}
				Field : {bitoffset:23, bitwidth:1}
			}
			ABRMOD {
				(flecs.doc.Description, flecs.doc.Brief) : {"Auto baud rate mode"}
				Field : {bitoffset:21, bitwidth:2}
			}
			ABREN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Auto baud rate enable"}
				Field : {bitoffset:20, bitwidth:1}
			}
			MSBFIRST {
				(flecs.doc.Description, flecs.doc.Brief) : {"Most significant bit first"}
				Field : {bitoffset:19, bitwidth:1}
			}
			TAINV {
				(flecs.doc.Description, flecs.doc.Brief) : {"Binary data inversion"}
				Field : {bitoffset:18, bitwidth:1}
			}
			TXINV {
				(flecs.doc.Description, flecs.doc.Brief) : {"TX pin active level\n              inversion"}
				Field : {bitoffset:17, bitwidth:1}
			}
			RXINV {
				(flecs.doc.Description, flecs.doc.Brief) : {"RX pin active level\n              inversion"}
				Field : {bitoffset:16, bitwidth:1}
			}
			SWAP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Swap TX/RX pins"}
				Field : {bitoffset:15, bitwidth:1}
			}
			LINEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"LIN mode enable"}
				Field : {bitoffset:14, bitwidth:1}
			}
			STOP {
				(flecs.doc.Description, flecs.doc.Brief) : {"STOP bits"}
				Field : {bitoffset:12, bitwidth:2}
			}
			CLKEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clock enable"}
				Field : {bitoffset:11, bitwidth:1}
			}
			CPOL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clock polarity"}
				Field : {bitoffset:10, bitwidth:1}
			}
			CPHA {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clock phase"}
				Field : {bitoffset:9, bitwidth:1}
			}
			LBCL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Last bit clock pulse"}
				Field : {bitoffset:8, bitwidth:1}
			}
			LBDIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"LIN break detection interrupt\n              enable"}
				Field : {bitoffset:6, bitwidth:1}
			}
			LBDL {
				(flecs.doc.Description, flecs.doc.Brief) : {"LIN break detection length"}
				Field : {bitoffset:5, bitwidth:1}
			}
			ADDM7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"7-bit Address Detection/4-bit Address\n              Detection"}
				Field : {bitoffset:4, bitwidth:1}
			}
			DIS_NSS {
				(flecs.doc.Description, flecs.doc.Brief) : {"When the DSI_NSS bit is set, the NSS pin\n              input will be ignored"}
				Field : {bitoffset:3, bitwidth:1}
			}
			SLVEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Synchronous Slave mode\n              enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		CR3 {
			(flecs.doc.Description, flecs.doc.Brief) : {"Control register 3"}
			Register : {address:0}
			TXFTCFG {
				(flecs.doc.Description, flecs.doc.Brief) : {"TXFIFO threshold\n              configuration"}
				Field : {bitoffset:29, bitwidth:3}
			}
			RXFTIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"RXFIFO threshold interrupt\n              enable"}
				Field : {bitoffset:28, bitwidth:1}
			}
			RXFTCFG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Receive FIFO threshold\n              configuration"}
				Field : {bitoffset:25, bitwidth:3}
			}
			TCBGTIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Tr Complete before guard time, interrupt\n              enable"}
				Field : {bitoffset:24, bitwidth:1}
			}
			TXFTIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"threshold interrupt enable"}
				Field : {bitoffset:23, bitwidth:1}
			}
			WUFIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wakeup from Stop mode interrupt\n              enable"}
				Field : {bitoffset:22, bitwidth:1}
			}
			WUS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wakeup from Stop mode interrupt flag\n              selection"}
				Field : {bitoffset:20, bitwidth:2}
			}
			SCARCNT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Smartcard auto-retry count"}
				Field : {bitoffset:17, bitwidth:3}
			}
			DEP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Driver enable polarity\n              selection"}
				Field : {bitoffset:15, bitwidth:1}
			}
			DEM {
				(flecs.doc.Description, flecs.doc.Brief) : {"Driver enable mode"}
				Field : {bitoffset:14, bitwidth:1}
			}
			DDRE {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA Disable on Reception\n              Error"}
				Field : {bitoffset:13, bitwidth:1}
			}
			OVRDIS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Overrun Disable"}
				Field : {bitoffset:12, bitwidth:1}
			}
			ONEBIT {
				(flecs.doc.Description, flecs.doc.Brief) : {"One sample bit method\n              enable"}
				Field : {bitoffset:11, bitwidth:1}
			}
			CTSIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"CTS interrupt enable"}
				Field : {bitoffset:10, bitwidth:1}
			}
			CTSE {
				(flecs.doc.Description, flecs.doc.Brief) : {"CTS enable"}
				Field : {bitoffset:9, bitwidth:1}
			}
			RTSE {
				(flecs.doc.Description, flecs.doc.Brief) : {"RTS enable"}
				Field : {bitoffset:8, bitwidth:1}
			}
			DMAT {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA enable transmitter"}
				Field : {bitoffset:7, bitwidth:1}
			}
			DMAR {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA enable receiver"}
				Field : {bitoffset:6, bitwidth:1}
			}
			SCEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Smartcard mode enable"}
				Field : {bitoffset:5, bitwidth:1}
			}
			NACK {
				(flecs.doc.Description, flecs.doc.Brief) : {"Smartcard NACK enable"}
				Field : {bitoffset:4, bitwidth:1}
			}
			HDSEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Half-duplex selection"}
				Field : {bitoffset:3, bitwidth:1}
			}
			IRLP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Ir low-power"}
				Field : {bitoffset:2, bitwidth:1}
			}
			IREN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Ir mode enable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			EIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Error interrupt enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		BRR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Baud rate register"}
			Register : {address:0}
			BRR_4_15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRR_4_15"}
				Field : {bitoffset:4, bitwidth:12}
			}
			BRR_0_3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRR_0_3"}
				Field : {bitoffset:0, bitwidth:4}
			}
		}
		GTPR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Guard time and prescaler\n          register"}
			Register : {address:0}
			GT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Guard time value"}
				Field : {bitoffset:8, bitwidth:8}
			}
			PSC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Prescaler value"}
				Field : {bitoffset:0, bitwidth:8}
			}
		}
		RTOR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Receiver timeout register"}
			Register : {address:0}
			BLEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Block Length"}
				Field : {bitoffset:24, bitwidth:8}
			}
			RTO {
				(flecs.doc.Description, flecs.doc.Brief) : {"Receiver timeout value"}
				Field : {bitoffset:0, bitwidth:24}
			}
		}
		RQR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Request register"}
			Register : {address:0}
			TXFRQ {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transmit data flush\n              request"}
				Field : {bitoffset:4, bitwidth:1}
			}
			RXFRQ {
				(flecs.doc.Description, flecs.doc.Brief) : {"Receive data flush request"}
				Field : {bitoffset:3, bitwidth:1}
			}
			MMRQ {
				(flecs.doc.Description, flecs.doc.Brief) : {"Mute mode request"}
				Field : {bitoffset:2, bitwidth:1}
			}
			SBKRQ {
				(flecs.doc.Description, flecs.doc.Brief) : {"Send break request"}
				Field : {bitoffset:1, bitwidth:1}
			}
			ABRRQ {
				(flecs.doc.Description, flecs.doc.Brief) : {"Auto baud rate request"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		ISR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Interrupt & status\n          register"}
			Register : {address:0}
			TXFT {
				(flecs.doc.Description, flecs.doc.Brief) : {"TXFIFO threshold flag"}
				Field : {bitoffset:27, bitwidth:1}
			}
			RXFT {
				(flecs.doc.Description, flecs.doc.Brief) : {"RXFIFO threshold flag"}
				Field : {bitoffset:26, bitwidth:1}
			}
			TCBGT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transmission complete before guard time\n              flag"}
				Field : {bitoffset:25, bitwidth:1}
			}
			RXFF {
				(flecs.doc.Description, flecs.doc.Brief) : {"RXFIFO Full"}
				Field : {bitoffset:24, bitwidth:1}
			}
			TXFE {
				(flecs.doc.Description, flecs.doc.Brief) : {"TXFIFO Empty"}
				Field : {bitoffset:23, bitwidth:1}
			}
			REACK {
				(flecs.doc.Description, flecs.doc.Brief) : {"REACK"}
				Field : {bitoffset:22, bitwidth:1}
			}
			TEACK {
				(flecs.doc.Description, flecs.doc.Brief) : {"TEACK"}
				Field : {bitoffset:21, bitwidth:1}
			}
			WUF {
				(flecs.doc.Description, flecs.doc.Brief) : {"WUF"}
				Field : {bitoffset:20, bitwidth:1}
			}
			RWU {
				(flecs.doc.Description, flecs.doc.Brief) : {"RWU"}
				Field : {bitoffset:19, bitwidth:1}
			}
			SBKF {
				(flecs.doc.Description, flecs.doc.Brief) : {"SBKF"}
				Field : {bitoffset:18, bitwidth:1}
			}
			CMF {
				(flecs.doc.Description, flecs.doc.Brief) : {"CMF"}
				Field : {bitoffset:17, bitwidth:1}
			}
			BUSY {
				(flecs.doc.Description, flecs.doc.Brief) : {"BUSY"}
				Field : {bitoffset:16, bitwidth:1}
			}
			ABRF {
				(flecs.doc.Description, flecs.doc.Brief) : {"ABRF"}
				Field : {bitoffset:15, bitwidth:1}
			}
			ABRE {
				(flecs.doc.Description, flecs.doc.Brief) : {"ABRE"}
				Field : {bitoffset:14, bitwidth:1}
			}
			UDR {
				(flecs.doc.Description, flecs.doc.Brief) : {"SPI slave underrun error\n              flag"}
				Field : {bitoffset:13, bitwidth:1}
			}
			EOBF {
				(flecs.doc.Description, flecs.doc.Brief) : {"EOBF"}
				Field : {bitoffset:12, bitwidth:1}
			}
			RTOF {
				(flecs.doc.Description, flecs.doc.Brief) : {"RTOF"}
				Field : {bitoffset:11, bitwidth:1}
			}
			CTS {
				(flecs.doc.Description, flecs.doc.Brief) : {"CTS"}
				Field : {bitoffset:10, bitwidth:1}
			}
			CTSIF {
				(flecs.doc.Description, flecs.doc.Brief) : {"CTSIF"}
				Field : {bitoffset:9, bitwidth:1}
			}
			LBDF {
				(flecs.doc.Description, flecs.doc.Brief) : {"LBDF"}
				Field : {bitoffset:8, bitwidth:1}
			}
			TXE {
				(flecs.doc.Description, flecs.doc.Brief) : {"TXE"}
				Field : {bitoffset:7, bitwidth:1}
			}
			TC {
				(flecs.doc.Description, flecs.doc.Brief) : {"TC"}
				Field : {bitoffset:6, bitwidth:1}
			}
			RXNE {
				(flecs.doc.Description, flecs.doc.Brief) : {"RXNE"}
				Field : {bitoffset:5, bitwidth:1}
			}
			IDLE {
				(flecs.doc.Description, flecs.doc.Brief) : {"IDLE"}
				Field : {bitoffset:4, bitwidth:1}
			}
			ORE {
				(flecs.doc.Description, flecs.doc.Brief) : {"ORE"}
				Field : {bitoffset:3, bitwidth:1}
			}
			NF {
				(flecs.doc.Description, flecs.doc.Brief) : {"NF"}
				Field : {bitoffset:2, bitwidth:1}
			}
			FE {
				(flecs.doc.Description, flecs.doc.Brief) : {"FE"}
				Field : {bitoffset:1, bitwidth:1}
			}
			PE {
				(flecs.doc.Description, flecs.doc.Brief) : {"PE"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		ICR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Interrupt flag clear register"}
			Register : {address:0}
			WUCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wakeup from Stop mode clear\n              flag"}
				Field : {bitoffset:20, bitwidth:1}
			}
			CMCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Character match clear flag"}
				Field : {bitoffset:17, bitwidth:1}
			}
			UDRCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"SPI slave underrun clear\n              flag"}
				Field : {bitoffset:13, bitwidth:1}
			}
			EOBCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"End of block clear flag"}
				Field : {bitoffset:12, bitwidth:1}
			}
			RTOCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Receiver timeout clear\n              flag"}
				Field : {bitoffset:11, bitwidth:1}
			}
			CTSCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"CTS clear flag"}
				Field : {bitoffset:9, bitwidth:1}
			}
			LBDCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"LIN break detection clear\n              flag"}
				Field : {bitoffset:8, bitwidth:1}
			}
			TCBGTCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transmission complete before Guard time\n              clear flag"}
				Field : {bitoffset:7, bitwidth:1}
			}
			TCCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transmission complete clear\n              flag"}
				Field : {bitoffset:6, bitwidth:1}
			}
			TXFECF {
				(flecs.doc.Description, flecs.doc.Brief) : {"TXFIFO empty clear flag"}
				Field : {bitoffset:5, bitwidth:1}
			}
			IDLECF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Idle line detected clear\n              flag"}
				Field : {bitoffset:4, bitwidth:1}
			}
			ORECF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Overrun error clear flag"}
				Field : {bitoffset:3, bitwidth:1}
			}
			NCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Noise detected clear flag"}
				Field : {bitoffset:2, bitwidth:1}
			}
			FECF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Framing error clear flag"}
				Field : {bitoffset:1, bitwidth:1}
			}
			PECF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Parity error clear flag"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		RDR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Receive data register"}
			Register : {address:0}
			RDR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Receive data value"}
				Field : {bitoffset:0, bitwidth:9}
			}
		}
		TDR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Transmit data register"}
			Register : {address:0}
			TDR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transmit data value"}
				Field : {bitoffset:0, bitwidth:9}
			}
		}
		PRESC {
			(flecs.doc.Description, flecs.doc.Brief) : {"Prescaler register"}
			Register : {address:0}
			PRESCALER {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clock prescaler"}
				Field : {bitoffset:0, bitwidth:4}
			}
		}
	}
	USART2 {
		(flecs.doc.Description, flecs.doc.Brief) : {"Universal synchronous asynchronous receiver\n      transmitter"}
		CR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"Control register 1"}
			Register : {address:0}
			RXFFIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"RXFIFO Full interrupt\n              enable"}
				Field : {bitoffset:31, bitwidth:1}
			}
			TXFEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"TXFIFO empty interrupt\n              enable"}
				Field : {bitoffset:30, bitwidth:1}
			}
			FIFOEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"FIFO mode enable"}
				Field : {bitoffset:29, bitwidth:1}
			}
			M1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Word length"}
				Field : {bitoffset:28, bitwidth:1}
			}
			EOBIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"End of Block interrupt\n              enable"}
				Field : {bitoffset:27, bitwidth:1}
			}
			RTOIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Receiver timeout interrupt\n              enable"}
				Field : {bitoffset:26, bitwidth:1}
			}
			DEAT {
				(flecs.doc.Description, flecs.doc.Brief) : {"DEAT"}
				Field : {bitoffset:21, bitwidth:5}
			}
			DEDT {
				(flecs.doc.Description, flecs.doc.Brief) : {"DEDT"}
				Field : {bitoffset:16, bitwidth:5}
			}
			OVER8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Oversampling mode"}
				Field : {bitoffset:15, bitwidth:1}
			}
			CMIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Character match interrupt\n              enable"}
				Field : {bitoffset:14, bitwidth:1}
			}
			MME {
				(flecs.doc.Description, flecs.doc.Brief) : {"Mute mode enable"}
				Field : {bitoffset:13, bitwidth:1}
			}
			M0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Word length"}
				Field : {bitoffset:12, bitwidth:1}
			}
			WAKE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Receiver wakeup method"}
				Field : {bitoffset:11, bitwidth:1}
			}
			PCE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Parity control enable"}
				Field : {bitoffset:10, bitwidth:1}
			}
			PS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Parity selection"}
				Field : {bitoffset:9, bitwidth:1}
			}
			PEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"PE interrupt enable"}
				Field : {bitoffset:8, bitwidth:1}
			}
			TXEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"interrupt enable"}
				Field : {bitoffset:7, bitwidth:1}
			}
			TCIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transmission complete interrupt\n              enable"}
				Field : {bitoffset:6, bitwidth:1}
			}
			RXNEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"RXNE interrupt enable"}
				Field : {bitoffset:5, bitwidth:1}
			}
			IDLEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"IDLE interrupt enable"}
				Field : {bitoffset:4, bitwidth:1}
			}
			TE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transmitter enable"}
				Field : {bitoffset:3, bitwidth:1}
			}
			RE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Receiver enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			UESM {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART enable in Stop mode"}
				Field : {bitoffset:1, bitwidth:1}
			}
			UE {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		CR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"Control register 2"}
			Register : {address:0}
			ADD4_7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Address of the USART node"}
				Field : {bitoffset:28, bitwidth:4}
			}
			ADD0_3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Address of the USART node"}
				Field : {bitoffset:24, bitwidth:4}
			}
			RTOEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Receiver timeout enable"}
				Field : {bitoffset:23, bitwidth:1}
			}
			ABRMOD {
				(flecs.doc.Description, flecs.doc.Brief) : {"Auto baud rate mode"}
				Field : {bitoffset:21, bitwidth:2}
			}
			ABREN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Auto baud rate enable"}
				Field : {bitoffset:20, bitwidth:1}
			}
			MSBFIRST {
				(flecs.doc.Description, flecs.doc.Brief) : {"Most significant bit first"}
				Field : {bitoffset:19, bitwidth:1}
			}
			TAINV {
				(flecs.doc.Description, flecs.doc.Brief) : {"Binary data inversion"}
				Field : {bitoffset:18, bitwidth:1}
			}
			TXINV {
				(flecs.doc.Description, flecs.doc.Brief) : {"TX pin active level\n              inversion"}
				Field : {bitoffset:17, bitwidth:1}
			}
			RXINV {
				(flecs.doc.Description, flecs.doc.Brief) : {"RX pin active level\n              inversion"}
				Field : {bitoffset:16, bitwidth:1}
			}
			SWAP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Swap TX/RX pins"}
				Field : {bitoffset:15, bitwidth:1}
			}
			LINEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"LIN mode enable"}
				Field : {bitoffset:14, bitwidth:1}
			}
			STOP {
				(flecs.doc.Description, flecs.doc.Brief) : {"STOP bits"}
				Field : {bitoffset:12, bitwidth:2}
			}
			CLKEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clock enable"}
				Field : {bitoffset:11, bitwidth:1}
			}
			CPOL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clock polarity"}
				Field : {bitoffset:10, bitwidth:1}
			}
			CPHA {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clock phase"}
				Field : {bitoffset:9, bitwidth:1}
			}
			LBCL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Last bit clock pulse"}
				Field : {bitoffset:8, bitwidth:1}
			}
			LBDIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"LIN break detection interrupt\n              enable"}
				Field : {bitoffset:6, bitwidth:1}
			}
			LBDL {
				(flecs.doc.Description, flecs.doc.Brief) : {"LIN break detection length"}
				Field : {bitoffset:5, bitwidth:1}
			}
			ADDM7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"7-bit Address Detection/4-bit Address\n              Detection"}
				Field : {bitoffset:4, bitwidth:1}
			}
			DIS_NSS {
				(flecs.doc.Description, flecs.doc.Brief) : {"When the DSI_NSS bit is set, the NSS pin\n              input will be ignored"}
				Field : {bitoffset:3, bitwidth:1}
			}
			SLVEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Synchronous Slave mode\n              enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		CR3 {
			(flecs.doc.Description, flecs.doc.Brief) : {"Control register 3"}
			Register : {address:0}
			TXFTCFG {
				(flecs.doc.Description, flecs.doc.Brief) : {"TXFIFO threshold\n              configuration"}
				Field : {bitoffset:29, bitwidth:3}
			}
			RXFTIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"RXFIFO threshold interrupt\n              enable"}
				Field : {bitoffset:28, bitwidth:1}
			}
			RXFTCFG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Receive FIFO threshold\n              configuration"}
				Field : {bitoffset:25, bitwidth:3}
			}
			TCBGTIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Tr Complete before guard time, interrupt\n              enable"}
				Field : {bitoffset:24, bitwidth:1}
			}
			TXFTIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"threshold interrupt enable"}
				Field : {bitoffset:23, bitwidth:1}
			}
			WUFIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wakeup from Stop mode interrupt\n              enable"}
				Field : {bitoffset:22, bitwidth:1}
			}
			WUS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wakeup from Stop mode interrupt flag\n              selection"}
				Field : {bitoffset:20, bitwidth:2}
			}
			SCARCNT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Smartcard auto-retry count"}
				Field : {bitoffset:17, bitwidth:3}
			}
			DEP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Driver enable polarity\n              selection"}
				Field : {bitoffset:15, bitwidth:1}
			}
			DEM {
				(flecs.doc.Description, flecs.doc.Brief) : {"Driver enable mode"}
				Field : {bitoffset:14, bitwidth:1}
			}
			DDRE {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA Disable on Reception\n              Error"}
				Field : {bitoffset:13, bitwidth:1}
			}
			OVRDIS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Overrun Disable"}
				Field : {bitoffset:12, bitwidth:1}
			}
			ONEBIT {
				(flecs.doc.Description, flecs.doc.Brief) : {"One sample bit method\n              enable"}
				Field : {bitoffset:11, bitwidth:1}
			}
			CTSIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"CTS interrupt enable"}
				Field : {bitoffset:10, bitwidth:1}
			}
			CTSE {
				(flecs.doc.Description, flecs.doc.Brief) : {"CTS enable"}
				Field : {bitoffset:9, bitwidth:1}
			}
			RTSE {
				(flecs.doc.Description, flecs.doc.Brief) : {"RTS enable"}
				Field : {bitoffset:8, bitwidth:1}
			}
			DMAT {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA enable transmitter"}
				Field : {bitoffset:7, bitwidth:1}
			}
			DMAR {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA enable receiver"}
				Field : {bitoffset:6, bitwidth:1}
			}
			SCEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Smartcard mode enable"}
				Field : {bitoffset:5, bitwidth:1}
			}
			NACK {
				(flecs.doc.Description, flecs.doc.Brief) : {"Smartcard NACK enable"}
				Field : {bitoffset:4, bitwidth:1}
			}
			HDSEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Half-duplex selection"}
				Field : {bitoffset:3, bitwidth:1}
			}
			IRLP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Ir low-power"}
				Field : {bitoffset:2, bitwidth:1}
			}
			IREN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Ir mode enable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			EIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Error interrupt enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		BRR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Baud rate register"}
			Register : {address:0}
			BRR_4_15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRR_4_15"}
				Field : {bitoffset:4, bitwidth:12}
			}
			BRR_0_3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRR_0_3"}
				Field : {bitoffset:0, bitwidth:4}
			}
		}
		GTPR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Guard time and prescaler\n          register"}
			Register : {address:0}
			GT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Guard time value"}
				Field : {bitoffset:8, bitwidth:8}
			}
			PSC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Prescaler value"}
				Field : {bitoffset:0, bitwidth:8}
			}
		}
		RTOR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Receiver timeout register"}
			Register : {address:0}
			BLEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Block Length"}
				Field : {bitoffset:24, bitwidth:8}
			}
			RTO {
				(flecs.doc.Description, flecs.doc.Brief) : {"Receiver timeout value"}
				Field : {bitoffset:0, bitwidth:24}
			}
		}
		RQR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Request register"}
			Register : {address:0}
			TXFRQ {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transmit data flush\n              request"}
				Field : {bitoffset:4, bitwidth:1}
			}
			RXFRQ {
				(flecs.doc.Description, flecs.doc.Brief) : {"Receive data flush request"}
				Field : {bitoffset:3, bitwidth:1}
			}
			MMRQ {
				(flecs.doc.Description, flecs.doc.Brief) : {"Mute mode request"}
				Field : {bitoffset:2, bitwidth:1}
			}
			SBKRQ {
				(flecs.doc.Description, flecs.doc.Brief) : {"Send break request"}
				Field : {bitoffset:1, bitwidth:1}
			}
			ABRRQ {
				(flecs.doc.Description, flecs.doc.Brief) : {"Auto baud rate request"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		ISR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Interrupt & status\n          register"}
			Register : {address:0}
			TXFT {
				(flecs.doc.Description, flecs.doc.Brief) : {"TXFIFO threshold flag"}
				Field : {bitoffset:27, bitwidth:1}
			}
			RXFT {
				(flecs.doc.Description, flecs.doc.Brief) : {"RXFIFO threshold flag"}
				Field : {bitoffset:26, bitwidth:1}
			}
			TCBGT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transmission complete before guard time\n              flag"}
				Field : {bitoffset:25, bitwidth:1}
			}
			RXFF {
				(flecs.doc.Description, flecs.doc.Brief) : {"RXFIFO Full"}
				Field : {bitoffset:24, bitwidth:1}
			}
			TXFE {
				(flecs.doc.Description, flecs.doc.Brief) : {"TXFIFO Empty"}
				Field : {bitoffset:23, bitwidth:1}
			}
			REACK {
				(flecs.doc.Description, flecs.doc.Brief) : {"REACK"}
				Field : {bitoffset:22, bitwidth:1}
			}
			TEACK {
				(flecs.doc.Description, flecs.doc.Brief) : {"TEACK"}
				Field : {bitoffset:21, bitwidth:1}
			}
			WUF {
				(flecs.doc.Description, flecs.doc.Brief) : {"WUF"}
				Field : {bitoffset:20, bitwidth:1}
			}
			RWU {
				(flecs.doc.Description, flecs.doc.Brief) : {"RWU"}
				Field : {bitoffset:19, bitwidth:1}
			}
			SBKF {
				(flecs.doc.Description, flecs.doc.Brief) : {"SBKF"}
				Field : {bitoffset:18, bitwidth:1}
			}
			CMF {
				(flecs.doc.Description, flecs.doc.Brief) : {"CMF"}
				Field : {bitoffset:17, bitwidth:1}
			}
			BUSY {
				(flecs.doc.Description, flecs.doc.Brief) : {"BUSY"}
				Field : {bitoffset:16, bitwidth:1}
			}
			ABRF {
				(flecs.doc.Description, flecs.doc.Brief) : {"ABRF"}
				Field : {bitoffset:15, bitwidth:1}
			}
			ABRE {
				(flecs.doc.Description, flecs.doc.Brief) : {"ABRE"}
				Field : {bitoffset:14, bitwidth:1}
			}
			UDR {
				(flecs.doc.Description, flecs.doc.Brief) : {"SPI slave underrun error\n              flag"}
				Field : {bitoffset:13, bitwidth:1}
			}
			EOBF {
				(flecs.doc.Description, flecs.doc.Brief) : {"EOBF"}
				Field : {bitoffset:12, bitwidth:1}
			}
			RTOF {
				(flecs.doc.Description, flecs.doc.Brief) : {"RTOF"}
				Field : {bitoffset:11, bitwidth:1}
			}
			CTS {
				(flecs.doc.Description, flecs.doc.Brief) : {"CTS"}
				Field : {bitoffset:10, bitwidth:1}
			}
			CTSIF {
				(flecs.doc.Description, flecs.doc.Brief) : {"CTSIF"}
				Field : {bitoffset:9, bitwidth:1}
			}
			LBDF {
				(flecs.doc.Description, flecs.doc.Brief) : {"LBDF"}
				Field : {bitoffset:8, bitwidth:1}
			}
			TXE {
				(flecs.doc.Description, flecs.doc.Brief) : {"TXE"}
				Field : {bitoffset:7, bitwidth:1}
			}
			TC {
				(flecs.doc.Description, flecs.doc.Brief) : {"TC"}
				Field : {bitoffset:6, bitwidth:1}
			}
			RXNE {
				(flecs.doc.Description, flecs.doc.Brief) : {"RXNE"}
				Field : {bitoffset:5, bitwidth:1}
			}
			IDLE {
				(flecs.doc.Description, flecs.doc.Brief) : {"IDLE"}
				Field : {bitoffset:4, bitwidth:1}
			}
			ORE {
				(flecs.doc.Description, flecs.doc.Brief) : {"ORE"}
				Field : {bitoffset:3, bitwidth:1}
			}
			NF {
				(flecs.doc.Description, flecs.doc.Brief) : {"NF"}
				Field : {bitoffset:2, bitwidth:1}
			}
			FE {
				(flecs.doc.Description, flecs.doc.Brief) : {"FE"}
				Field : {bitoffset:1, bitwidth:1}
			}
			PE {
				(flecs.doc.Description, flecs.doc.Brief) : {"PE"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		ICR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Interrupt flag clear register"}
			Register : {address:0}
			WUCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wakeup from Stop mode clear\n              flag"}
				Field : {bitoffset:20, bitwidth:1}
			}
			CMCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Character match clear flag"}
				Field : {bitoffset:17, bitwidth:1}
			}
			UDRCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"SPI slave underrun clear\n              flag"}
				Field : {bitoffset:13, bitwidth:1}
			}
			EOBCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"End of block clear flag"}
				Field : {bitoffset:12, bitwidth:1}
			}
			RTOCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Receiver timeout clear\n              flag"}
				Field : {bitoffset:11, bitwidth:1}
			}
			CTSCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"CTS clear flag"}
				Field : {bitoffset:9, bitwidth:1}
			}
			LBDCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"LIN break detection clear\n              flag"}
				Field : {bitoffset:8, bitwidth:1}
			}
			TCBGTCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transmission complete before Guard time\n              clear flag"}
				Field : {bitoffset:7, bitwidth:1}
			}
			TCCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transmission complete clear\n              flag"}
				Field : {bitoffset:6, bitwidth:1}
			}
			TXFECF {
				(flecs.doc.Description, flecs.doc.Brief) : {"TXFIFO empty clear flag"}
				Field : {bitoffset:5, bitwidth:1}
			}
			IDLECF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Idle line detected clear\n              flag"}
				Field : {bitoffset:4, bitwidth:1}
			}
			ORECF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Overrun error clear flag"}
				Field : {bitoffset:3, bitwidth:1}
			}
			NCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Noise detected clear flag"}
				Field : {bitoffset:2, bitwidth:1}
			}
			FECF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Framing error clear flag"}
				Field : {bitoffset:1, bitwidth:1}
			}
			PECF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Parity error clear flag"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		RDR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Receive data register"}
			Register : {address:0}
			RDR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Receive data value"}
				Field : {bitoffset:0, bitwidth:9}
			}
		}
		TDR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Transmit data register"}
			Register : {address:0}
			TDR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transmit data value"}
				Field : {bitoffset:0, bitwidth:9}
			}
		}
		PRESC {
			(flecs.doc.Description, flecs.doc.Brief) : {"Prescaler register"}
			Register : {address:0}
			PRESCALER {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clock prescaler"}
				Field : {bitoffset:0, bitwidth:4}
			}
		}
	}
	SPI1 {
		(flecs.doc.Description, flecs.doc.Brief) : {"Serial peripheral interface/Inter-IC\n      sound"}
		CR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"control register 1"}
			Register : {address:0}
			BIDIMODE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Bidirectional data mode\n              enable"}
				Field : {bitoffset:15, bitwidth:1}
			}
			BIDIOE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output enable in bidirectional\n              mode"}
				Field : {bitoffset:14, bitwidth:1}
			}
			CRCEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Hardware CRC calculation\n              enable"}
				Field : {bitoffset:13, bitwidth:1}
			}
			CRCNEXT {
				(flecs.doc.Description, flecs.doc.Brief) : {"CRC transfer next"}
				Field : {bitoffset:12, bitwidth:1}
			}
			DFF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Data frame format"}
				Field : {bitoffset:11, bitwidth:1}
			}
			RXONLY {
				(flecs.doc.Description, flecs.doc.Brief) : {"Receive only"}
				Field : {bitoffset:10, bitwidth:1}
			}
			SSM {
				(flecs.doc.Description, flecs.doc.Brief) : {"Software slave management"}
				Field : {bitoffset:9, bitwidth:1}
			}
			SSI {
				(flecs.doc.Description, flecs.doc.Brief) : {"Internal slave select"}
				Field : {bitoffset:8, bitwidth:1}
			}
			LSBFIRST {
				(flecs.doc.Description, flecs.doc.Brief) : {"Frame format"}
				Field : {bitoffset:7, bitwidth:1}
			}
			SPE {
				(flecs.doc.Description, flecs.doc.Brief) : {"SPI enable"}
				Field : {bitoffset:6, bitwidth:1}
			}
			BR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Baud rate control"}
				Field : {bitoffset:3, bitwidth:3}
			}
			MSTR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Master selection"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CPOL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clock polarity"}
				Field : {bitoffset:1, bitwidth:1}
			}
			CPHA {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clock phase"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		CR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"control register 2"}
			Register : {address:0}
			RXDMAEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rx buffer DMA enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
			TXDMAEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Tx buffer DMA enable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			SSOE {
				(flecs.doc.Description, flecs.doc.Brief) : {"SS output enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			NSSP {
				(flecs.doc.Description, flecs.doc.Brief) : {"NSS pulse management"}
				Field : {bitoffset:3, bitwidth:1}
			}
			FRF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Frame format"}
				Field : {bitoffset:4, bitwidth:1}
			}
			ERRIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Error interrupt enable"}
				Field : {bitoffset:5, bitwidth:1}
			}
			RXNEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"RX buffer not empty interrupt\n              enable"}
				Field : {bitoffset:6, bitwidth:1}
			}
			TXEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Tx buffer empty interrupt\n              enable"}
				Field : {bitoffset:7, bitwidth:1}
			}
			DS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Data size"}
				Field : {bitoffset:8, bitwidth:4}
			}
			FRXTH {
				(flecs.doc.Description, flecs.doc.Brief) : {"FIFO reception threshold"}
				Field : {bitoffset:12, bitwidth:1}
			}
			LDMA_RX {
				(flecs.doc.Description, flecs.doc.Brief) : {"Last DMA transfer for\n              reception"}
				Field : {bitoffset:13, bitwidth:1}
			}
			LDMA_TX {
				(flecs.doc.Description, flecs.doc.Brief) : {"Last DMA transfer for\n              transmission"}
				Field : {bitoffset:14, bitwidth:1}
			}
		}
		SR {
			(flecs.doc.Description, flecs.doc.Brief) : {"status register"}
			Register : {address:0}
			RXNE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Receive buffer not empty"}
				Field : {bitoffset:0, bitwidth:1}
			}
			TXE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transmit buffer empty"}
				Field : {bitoffset:1, bitwidth:1}
			}
			CHSIDE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel side"}
				Field : {bitoffset:2, bitwidth:1}
			}
			UDR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Underrun flag"}
				Field : {bitoffset:3, bitwidth:1}
			}
			CRCERR {
				(flecs.doc.Description, flecs.doc.Brief) : {"CRC error flag"}
				Field : {bitoffset:4, bitwidth:1}
			}
			MODF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Mode fault"}
				Field : {bitoffset:5, bitwidth:1}
			}
			OVR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Overrun flag"}
				Field : {bitoffset:6, bitwidth:1}
			}
			BSY {
				(flecs.doc.Description, flecs.doc.Brief) : {"Busy flag"}
				Field : {bitoffset:7, bitwidth:1}
			}
			TIFRFE {
				(flecs.doc.Description, flecs.doc.Brief) : {"TI frame format error"}
				Field : {bitoffset:8, bitwidth:1}
			}
			FRLVL {
				(flecs.doc.Description, flecs.doc.Brief) : {"FIFO reception level"}
				Field : {bitoffset:9, bitwidth:2}
			}
			FTLVL {
				(flecs.doc.Description, flecs.doc.Brief) : {"FIFO transmission level"}
				Field : {bitoffset:11, bitwidth:2}
			}
		}
		DR {
			(flecs.doc.Description, flecs.doc.Brief) : {"data register"}
			Register : {address:0}
			DR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Data register"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		CRCPR {
			(flecs.doc.Description, flecs.doc.Brief) : {"CRC polynomial register"}
			Register : {address:0}
			CRCPOLY {
				(flecs.doc.Description, flecs.doc.Brief) : {"CRC polynomial register"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		RXCRCR {
			(flecs.doc.Description, flecs.doc.Brief) : {"RX CRC register"}
			Register : {address:0}
			RxCRC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rx CRC register"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		TXCRCR {
			(flecs.doc.Description, flecs.doc.Brief) : {"TX CRC register"}
			Register : {address:0}
			TxCRC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Tx CRC register"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		I2SCFGR {
			(flecs.doc.Description, flecs.doc.Brief) : {"configuration register"}
			Register : {address:0}
			CHLEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel length (number of bits per audio\n              channel)"}
				Field : {bitoffset:0, bitwidth:1}
			}
			DATLEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Data length to be\n              transferred"}
				Field : {bitoffset:1, bitwidth:2}
			}
			CKPOL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Inactive state clock\n              polarity"}
				Field : {bitoffset:3, bitwidth:1}
			}
			I2SSTD {
				(flecs.doc.Description, flecs.doc.Brief) : {"standard selection"}
				Field : {bitoffset:4, bitwidth:2}
			}
			PCMSYNC {
				(flecs.doc.Description, flecs.doc.Brief) : {"PCM frame synchronization"}
				Field : {bitoffset:7, bitwidth:1}
			}
			I2SCFG {
				(flecs.doc.Description, flecs.doc.Brief) : {"I2S configuration mode"}
				Field : {bitoffset:8, bitwidth:2}
			}
			SE2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"I2S enable"}
				Field : {bitoffset:10, bitwidth:1}
			}
			I2SMOD {
				(flecs.doc.Description, flecs.doc.Brief) : {"I2S mode selection"}
				Field : {bitoffset:11, bitwidth:1}
			}
		}
		I2SPR {
			(flecs.doc.Description, flecs.doc.Brief) : {"prescaler register"}
			Register : {address:0}
			I2SDIV {
				(flecs.doc.Description, flecs.doc.Brief) : {"linear prescaler"}
				Field : {bitoffset:0, bitwidth:8}
			}
			ODD {
				(flecs.doc.Description, flecs.doc.Brief) : {"Odd factor for the\n              prescaler"}
				Field : {bitoffset:8, bitwidth:1}
			}
			MCKOE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Master clock output enable"}
				Field : {bitoffset:9, bitwidth:1}
			}
		}
	}
	SPI2 {
		(flecs.doc.Description, flecs.doc.Brief) : {"Serial peripheral interface/Inter-IC\n      sound"}
		CR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"control register 1"}
			Register : {address:0}
			BIDIMODE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Bidirectional data mode\n              enable"}
				Field : {bitoffset:15, bitwidth:1}
			}
			BIDIOE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output enable in bidirectional\n              mode"}
				Field : {bitoffset:14, bitwidth:1}
			}
			CRCEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Hardware CRC calculation\n              enable"}
				Field : {bitoffset:13, bitwidth:1}
			}
			CRCNEXT {
				(flecs.doc.Description, flecs.doc.Brief) : {"CRC transfer next"}
				Field : {bitoffset:12, bitwidth:1}
			}
			DFF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Data frame format"}
				Field : {bitoffset:11, bitwidth:1}
			}
			RXONLY {
				(flecs.doc.Description, flecs.doc.Brief) : {"Receive only"}
				Field : {bitoffset:10, bitwidth:1}
			}
			SSM {
				(flecs.doc.Description, flecs.doc.Brief) : {"Software slave management"}
				Field : {bitoffset:9, bitwidth:1}
			}
			SSI {
				(flecs.doc.Description, flecs.doc.Brief) : {"Internal slave select"}
				Field : {bitoffset:8, bitwidth:1}
			}
			LSBFIRST {
				(flecs.doc.Description, flecs.doc.Brief) : {"Frame format"}
				Field : {bitoffset:7, bitwidth:1}
			}
			SPE {
				(flecs.doc.Description, flecs.doc.Brief) : {"SPI enable"}
				Field : {bitoffset:6, bitwidth:1}
			}
			BR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Baud rate control"}
				Field : {bitoffset:3, bitwidth:3}
			}
			MSTR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Master selection"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CPOL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clock polarity"}
				Field : {bitoffset:1, bitwidth:1}
			}
			CPHA {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clock phase"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		CR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"control register 2"}
			Register : {address:0}
			RXDMAEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rx buffer DMA enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
			TXDMAEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Tx buffer DMA enable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			SSOE {
				(flecs.doc.Description, flecs.doc.Brief) : {"SS output enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			NSSP {
				(flecs.doc.Description, flecs.doc.Brief) : {"NSS pulse management"}
				Field : {bitoffset:3, bitwidth:1}
			}
			FRF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Frame format"}
				Field : {bitoffset:4, bitwidth:1}
			}
			ERRIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Error interrupt enable"}
				Field : {bitoffset:5, bitwidth:1}
			}
			RXNEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"RX buffer not empty interrupt\n              enable"}
				Field : {bitoffset:6, bitwidth:1}
			}
			TXEIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Tx buffer empty interrupt\n              enable"}
				Field : {bitoffset:7, bitwidth:1}
			}
			DS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Data size"}
				Field : {bitoffset:8, bitwidth:4}
			}
			FRXTH {
				(flecs.doc.Description, flecs.doc.Brief) : {"FIFO reception threshold"}
				Field : {bitoffset:12, bitwidth:1}
			}
			LDMA_RX {
				(flecs.doc.Description, flecs.doc.Brief) : {"Last DMA transfer for\n              reception"}
				Field : {bitoffset:13, bitwidth:1}
			}
			LDMA_TX {
				(flecs.doc.Description, flecs.doc.Brief) : {"Last DMA transfer for\n              transmission"}
				Field : {bitoffset:14, bitwidth:1}
			}
		}
		SR {
			(flecs.doc.Description, flecs.doc.Brief) : {"status register"}
			Register : {address:0}
			RXNE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Receive buffer not empty"}
				Field : {bitoffset:0, bitwidth:1}
			}
			TXE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transmit buffer empty"}
				Field : {bitoffset:1, bitwidth:1}
			}
			CHSIDE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel side"}
				Field : {bitoffset:2, bitwidth:1}
			}
			UDR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Underrun flag"}
				Field : {bitoffset:3, bitwidth:1}
			}
			CRCERR {
				(flecs.doc.Description, flecs.doc.Brief) : {"CRC error flag"}
				Field : {bitoffset:4, bitwidth:1}
			}
			MODF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Mode fault"}
				Field : {bitoffset:5, bitwidth:1}
			}
			OVR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Overrun flag"}
				Field : {bitoffset:6, bitwidth:1}
			}
			BSY {
				(flecs.doc.Description, flecs.doc.Brief) : {"Busy flag"}
				Field : {bitoffset:7, bitwidth:1}
			}
			TIFRFE {
				(flecs.doc.Description, flecs.doc.Brief) : {"TI frame format error"}
				Field : {bitoffset:8, bitwidth:1}
			}
			FRLVL {
				(flecs.doc.Description, flecs.doc.Brief) : {"FIFO reception level"}
				Field : {bitoffset:9, bitwidth:2}
			}
			FTLVL {
				(flecs.doc.Description, flecs.doc.Brief) : {"FIFO transmission level"}
				Field : {bitoffset:11, bitwidth:2}
			}
		}
		DR {
			(flecs.doc.Description, flecs.doc.Brief) : {"data register"}
			Register : {address:0}
			DR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Data register"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		CRCPR {
			(flecs.doc.Description, flecs.doc.Brief) : {"CRC polynomial register"}
			Register : {address:0}
			CRCPOLY {
				(flecs.doc.Description, flecs.doc.Brief) : {"CRC polynomial register"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		RXCRCR {
			(flecs.doc.Description, flecs.doc.Brief) : {"RX CRC register"}
			Register : {address:0}
			RxCRC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Rx CRC register"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		TXCRCR {
			(flecs.doc.Description, flecs.doc.Brief) : {"TX CRC register"}
			Register : {address:0}
			TxCRC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Tx CRC register"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		I2SCFGR {
			(flecs.doc.Description, flecs.doc.Brief) : {"configuration register"}
			Register : {address:0}
			CHLEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Channel length (number of bits per audio\n              channel)"}
				Field : {bitoffset:0, bitwidth:1}
			}
			DATLEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Data length to be\n              transferred"}
				Field : {bitoffset:1, bitwidth:2}
			}
			CKPOL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Inactive state clock\n              polarity"}
				Field : {bitoffset:3, bitwidth:1}
			}
			I2SSTD {
				(flecs.doc.Description, flecs.doc.Brief) : {"standard selection"}
				Field : {bitoffset:4, bitwidth:2}
			}
			PCMSYNC {
				(flecs.doc.Description, flecs.doc.Brief) : {"PCM frame synchronization"}
				Field : {bitoffset:7, bitwidth:1}
			}
			I2SCFG {
				(flecs.doc.Description, flecs.doc.Brief) : {"I2S configuration mode"}
				Field : {bitoffset:8, bitwidth:2}
			}
			SE2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"I2S enable"}
				Field : {bitoffset:10, bitwidth:1}
			}
			I2SMOD {
				(flecs.doc.Description, flecs.doc.Brief) : {"I2S mode selection"}
				Field : {bitoffset:11, bitwidth:1}
			}
		}
		I2SPR {
			(flecs.doc.Description, flecs.doc.Brief) : {"prescaler register"}
			Register : {address:0}
			I2SDIV {
				(flecs.doc.Description, flecs.doc.Brief) : {"linear prescaler"}
				Field : {bitoffset:0, bitwidth:8}
			}
			ODD {
				(flecs.doc.Description, flecs.doc.Brief) : {"Odd factor for the\n              prescaler"}
				Field : {bitoffset:8, bitwidth:1}
			}
			MCKOE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Master clock output enable"}
				Field : {bitoffset:9, bitwidth:1}
			}
		}
	}
	TIM1 {
		(flecs.doc.Description, flecs.doc.Brief) : {"Advanced-timers"}
		CR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"control register 1"}
			Register : {address:0}
			CEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Counter enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
			OPM {
				(flecs.doc.Description, flecs.doc.Brief) : {"One-pulse mode"}
				Field : {bitoffset:3, bitwidth:1}
			}
			UDIS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update disable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			URS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update request source"}
				Field : {bitoffset:2, bitwidth:1}
			}
			DIR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Direction"}
				Field : {bitoffset:4, bitwidth:1}
			}
			CMS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Center-aligned mode\n              selection"}
				Field : {bitoffset:5, bitwidth:2}
			}
			ARPE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Auto-reload preload enable"}
				Field : {bitoffset:7, bitwidth:1}
			}
			CKD {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clock division"}
				Field : {bitoffset:8, bitwidth:2}
			}
			UIFREMAP {
				(flecs.doc.Description, flecs.doc.Brief) : {"UIF status bit remapping"}
				Field : {bitoffset:11, bitwidth:1}
			}
		}
		CR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"control register 2"}
			Register : {address:0}
			MMS2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Master mode selection 2"}
				Field : {bitoffset:20, bitwidth:4}
			}
			OIS6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Idle state 6 (OC6\n              output)"}
				Field : {bitoffset:18, bitwidth:1}
			}
			OIS5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Idle state 5 (OC5\n              output)"}
				Field : {bitoffset:16, bitwidth:1}
			}
			OIS4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Idle state 4"}
				Field : {bitoffset:14, bitwidth:1}
			}
			OIS3N {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Idle state 3"}
				Field : {bitoffset:13, bitwidth:1}
			}
			OIS3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Idle state 3"}
				Field : {bitoffset:12, bitwidth:1}
			}
			OIS2N {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Idle state 2"}
				Field : {bitoffset:11, bitwidth:1}
			}
			OIS2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Idle state 2"}
				Field : {bitoffset:10, bitwidth:1}
			}
			OIS1N {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Idle state 1"}
				Field : {bitoffset:9, bitwidth:1}
			}
			OIS1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Idle state 1"}
				Field : {bitoffset:8, bitwidth:1}
			}
			TI1S {
				(flecs.doc.Description, flecs.doc.Brief) : {"TI1 selection"}
				Field : {bitoffset:7, bitwidth:1}
			}
			MMS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Master mode selection"}
				Field : {bitoffset:4, bitwidth:3}
			}
			CCDS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare DMA\n              selection"}
				Field : {bitoffset:3, bitwidth:1}
			}
			CCUS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare control update\n              selection"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CCPC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare preloaded\n              control"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		SMCR {
			(flecs.doc.Description, flecs.doc.Brief) : {"slave mode control register"}
			Register : {address:0}
			SMS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Slave mode selection"}
				Field : {bitoffset:0, bitwidth:3}
			}
			OCCS {
				(flecs.doc.Description, flecs.doc.Brief) : {"OCREF clear selection"}
				Field : {bitoffset:3, bitwidth:1}
			}
			TS_4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Trigger selection"}
				Field : {bitoffset:4, bitwidth:3}
			}
			MSM {
				(flecs.doc.Description, flecs.doc.Brief) : {"Master/Slave mode"}
				Field : {bitoffset:7, bitwidth:1}
			}
			ETF {
				(flecs.doc.Description, flecs.doc.Brief) : {"External trigger filter"}
				Field : {bitoffset:8, bitwidth:4}
			}
			ETPS {
				(flecs.doc.Description, flecs.doc.Brief) : {"External trigger prescaler"}
				Field : {bitoffset:12, bitwidth:2}
			}
			ECE {
				(flecs.doc.Description, flecs.doc.Brief) : {"External clock enable"}
				Field : {bitoffset:14, bitwidth:1}
			}
			ETP {
				(flecs.doc.Description, flecs.doc.Brief) : {"External trigger polarity"}
				Field : {bitoffset:15, bitwidth:1}
			}
			SMS_3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Slave mode selection - bit\n              3"}
				Field : {bitoffset:16, bitwidth:1}
			}
			TS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Trigger selection"}
				Field : {bitoffset:20, bitwidth:2}
			}
		}
		DIER {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA/Interrupt enable register"}
			Register : {address:0}
			UIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update interrupt enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
			CC1IE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 interrupt\n              enable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			CC2IE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 2 interrupt\n              enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CC3IE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3 interrupt\n              enable"}
				Field : {bitoffset:3, bitwidth:1}
			}
			CC4IE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 4 interrupt\n              enable"}
				Field : {bitoffset:4, bitwidth:1}
			}
			COMIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"COM interrupt enable"}
				Field : {bitoffset:5, bitwidth:1}
			}
			TIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Trigger interrupt enable"}
				Field : {bitoffset:6, bitwidth:1}
			}
			BIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break interrupt enable"}
				Field : {bitoffset:7, bitwidth:1}
			}
			UDE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update DMA request enable"}
				Field : {bitoffset:8, bitwidth:1}
			}
			CC1DE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 DMA request\n              enable"}
				Field : {bitoffset:9, bitwidth:1}
			}
			CC2DE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 2 DMA request\n              enable"}
				Field : {bitoffset:10, bitwidth:1}
			}
			CC3DE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3 DMA request\n              enable"}
				Field : {bitoffset:11, bitwidth:1}
			}
			CC4DE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 4 DMA request\n              enable"}
				Field : {bitoffset:12, bitwidth:1}
			}
			COMDE {
				(flecs.doc.Description, flecs.doc.Brief) : {"COM DMA request enable"}
				Field : {bitoffset:13, bitwidth:1}
			}
			TDE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Trigger DMA request enable"}
				Field : {bitoffset:14, bitwidth:1}
			}
		}
		SR {
			(flecs.doc.Description, flecs.doc.Brief) : {"status register"}
			Register : {address:0}
			UIF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update interrupt flag"}
				Field : {bitoffset:0, bitwidth:1}
			}
			CC1IF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare 1 interrupt\n              flag"}
				Field : {bitoffset:1, bitwidth:1}
			}
			CC2IF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 2 interrupt\n              flag"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CC3IF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3 interrupt\n              flag"}
				Field : {bitoffset:3, bitwidth:1}
			}
			CC4IF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 4 interrupt\n              flag"}
				Field : {bitoffset:4, bitwidth:1}
			}
			COMIF {
				(flecs.doc.Description, flecs.doc.Brief) : {"COM interrupt flag"}
				Field : {bitoffset:5, bitwidth:1}
			}
			TIF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Trigger interrupt flag"}
				Field : {bitoffset:6, bitwidth:1}
			}
			BIF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break interrupt flag"}
				Field : {bitoffset:7, bitwidth:1}
			}
			B2IF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break 2 interrupt flag"}
				Field : {bitoffset:8, bitwidth:1}
			}
			CC1OF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 overcapture\n              flag"}
				Field : {bitoffset:9, bitwidth:1}
			}
			CC2OF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare 2 overcapture\n              flag"}
				Field : {bitoffset:10, bitwidth:1}
			}
			CC3OF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3 overcapture\n              flag"}
				Field : {bitoffset:11, bitwidth:1}
			}
			CC4OF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 4 overcapture\n              flag"}
				Field : {bitoffset:12, bitwidth:1}
			}
			SBIF {
				(flecs.doc.Description, flecs.doc.Brief) : {"System Break interrupt\n              flag"}
				Field : {bitoffset:13, bitwidth:1}
			}
			CC5IF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Compare 5 interrupt flag"}
				Field : {bitoffset:16, bitwidth:1}
			}
			CC6IF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Compare 6 interrupt flag"}
				Field : {bitoffset:17, bitwidth:1}
			}
		}
		EGR {
			(flecs.doc.Description, flecs.doc.Brief) : {"event generation register"}
			Register : {address:0}
			UG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update generation"}
				Field : {bitoffset:0, bitwidth:1}
			}
			CC1G {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare 1\n              generation"}
				Field : {bitoffset:1, bitwidth:1}
			}
			CC2G {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare 2\n              generation"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CC3G {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare 3\n              generation"}
				Field : {bitoffset:3, bitwidth:1}
			}
			CC4G {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare 4\n              generation"}
				Field : {bitoffset:4, bitwidth:1}
			}
			COMG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare control update\n              generation"}
				Field : {bitoffset:5, bitwidth:1}
			}
			TG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Trigger generation"}
				Field : {bitoffset:6, bitwidth:1}
			}
			BG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break generation"}
				Field : {bitoffset:7, bitwidth:1}
			}
			B2G {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break 2 generation"}
				Field : {bitoffset:8, bitwidth:1}
			}
		}
		CCMR1_Output {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare mode register 1 (output\n          mode)"}
			Register : {address:0}
			CC1S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1\n              selection"}
				Field : {bitoffset:0, bitwidth:2}
			}
			OC1FE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 1 fast\n              enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			OC1PE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 1 preload\n              enable"}
				Field : {bitoffset:3, bitwidth:1}
			}
			OC1M {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 1 mode"}
				Field : {bitoffset:4, bitwidth:3}
			}
			OC1CE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 1 clear\n              enable"}
				Field : {bitoffset:7, bitwidth:1}
			}
			CC2S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 2\n              selection"}
				Field : {bitoffset:8, bitwidth:2}
			}
			OC2FE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 2 fast\n              enable"}
				Field : {bitoffset:10, bitwidth:1}
			}
			OC2PE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 2 preload\n              enable"}
				Field : {bitoffset:11, bitwidth:1}
			}
			OC2M {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 2 mode"}
				Field : {bitoffset:12, bitwidth:3}
			}
			OC2CE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 2 clear\n              enable"}
				Field : {bitoffset:15, bitwidth:1}
			}
			OC1M_3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 1 mode - bit\n              3"}
				Field : {bitoffset:16, bitwidth:1}
			}
			OC2M_3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 2 mode - bit\n              3"}
				Field : {bitoffset:24, bitwidth:1}
			}
		}
		CCMR1_Input {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare mode register 1 (output\n          mode)"}
			Register : {address:0}
			CC1S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1\n              selection"}
				Field : {bitoffset:0, bitwidth:2}
			}
			OC1FE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 1 fast\n              enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			OC1PE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 1 preload\n              enable"}
				Field : {bitoffset:3, bitwidth:1}
			}
			OC1M {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 1 mode"}
				Field : {bitoffset:4, bitwidth:3}
			}
			OC1CE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 1 clear\n              enable"}
				Field : {bitoffset:7, bitwidth:1}
			}
			CC2S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 2\n              selection"}
				Field : {bitoffset:8, bitwidth:2}
			}
			OC2FE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 2 fast\n              enable"}
				Field : {bitoffset:10, bitwidth:1}
			}
			OC2PE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 2 preload\n              enable"}
				Field : {bitoffset:11, bitwidth:1}
			}
			OC2M {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 2 mode"}
				Field : {bitoffset:12, bitwidth:3}
			}
			OC2CE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 2 clear\n              enable"}
				Field : {bitoffset:15, bitwidth:1}
			}
		}
		CCMR2_Output {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare mode register 2 (output\n          mode)"}
			Register : {address:0}
			CC3S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3\n              selection"}
				Field : {bitoffset:0, bitwidth:2}
			}
			OC3FE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 3 fast\n              enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			OC3PE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 3 preload\n              enable"}
				Field : {bitoffset:3, bitwidth:1}
			}
			OC3M {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 3 mode"}
				Field : {bitoffset:4, bitwidth:3}
			}
			OC3CE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 3 clear\n              enable"}
				Field : {bitoffset:7, bitwidth:1}
			}
			CC4S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 4\n              selection"}
				Field : {bitoffset:8, bitwidth:2}
			}
			OC4FE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 4 fast\n              enable"}
				Field : {bitoffset:10, bitwidth:1}
			}
			OC4PE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 4 preload\n              enable"}
				Field : {bitoffset:11, bitwidth:1}
			}
			OC4M {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 4 mode"}
				Field : {bitoffset:12, bitwidth:3}
			}
			OC4CE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 4 clear\n              enable"}
				Field : {bitoffset:15, bitwidth:1}
			}
			OC3M_3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 3 mode - bit\n              3"}
				Field : {bitoffset:16, bitwidth:1}
			}
			OC4M_3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 4 mode - bit\n              3"}
				Field : {bitoffset:24, bitwidth:1}
			}
		}
		CCMR2_Input {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare mode register 2 (output\n          mode)"}
			Register : {address:0}
			CC3S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3\n              selection"}
				Field : {bitoffset:0, bitwidth:2}
			}
			OC3FE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 3 fast\n              enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			OC3PE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 3 preload\n              enable"}
				Field : {bitoffset:3, bitwidth:1}
			}
			OC3M {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 3 mode"}
				Field : {bitoffset:4, bitwidth:3}
			}
			OC3CE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 3 clear\n              enable"}
				Field : {bitoffset:7, bitwidth:1}
			}
			CC4S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 4\n              selection"}
				Field : {bitoffset:8, bitwidth:2}
			}
			OC4FE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 4 fast\n              enable"}
				Field : {bitoffset:10, bitwidth:1}
			}
			OC4PE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 4 preload\n              enable"}
				Field : {bitoffset:11, bitwidth:1}
			}
			OC4M {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 4 mode"}
				Field : {bitoffset:12, bitwidth:3}
			}
			OC4CE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 4 clear\n              enable"}
				Field : {bitoffset:15, bitwidth:1}
			}
		}
		CCER {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare enable\n          register"}
			Register : {address:0}
			CC1E {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 output\n              enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
			CC1P {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 output\n              Polarity"}
				Field : {bitoffset:1, bitwidth:1}
			}
			CC1NE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 complementary output\n              enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CC1NP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 output\n              Polarity"}
				Field : {bitoffset:3, bitwidth:1}
			}
			CC2E {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 2 output\n              enable"}
				Field : {bitoffset:4, bitwidth:1}
			}
			CC2P {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 2 output\n              Polarity"}
				Field : {bitoffset:5, bitwidth:1}
			}
			CC2NE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 2 complementary output\n              enable"}
				Field : {bitoffset:6, bitwidth:1}
			}
			CC2NP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 2 output\n              Polarity"}
				Field : {bitoffset:7, bitwidth:1}
			}
			CC3E {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3 output\n              enable"}
				Field : {bitoffset:8, bitwidth:1}
			}
			CC3P {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3 output\n              Polarity"}
				Field : {bitoffset:9, bitwidth:1}
			}
			CC3NE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3 complementary output\n              enable"}
				Field : {bitoffset:10, bitwidth:1}
			}
			CC3NP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3 output\n              Polarity"}
				Field : {bitoffset:11, bitwidth:1}
			}
			CC4E {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 4 output\n              enable"}
				Field : {bitoffset:12, bitwidth:1}
			}
			CC4P {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3 output\n              Polarity"}
				Field : {bitoffset:13, bitwidth:1}
			}
			CC4NP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 4 complementary output\n              polarity"}
				Field : {bitoffset:15, bitwidth:1}
			}
			CC5E {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 5 output\n              enable"}
				Field : {bitoffset:16, bitwidth:1}
			}
			CC5P {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 5 output\n              polarity"}
				Field : {bitoffset:17, bitwidth:1}
			}
			CC6E {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 6 output\n              enable"}
				Field : {bitoffset:20, bitwidth:1}
			}
			CC6P {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 6 output\n              polarity"}
				Field : {bitoffset:21, bitwidth:1}
			}
		}
		CNT {
			(flecs.doc.Description, flecs.doc.Brief) : {"counter"}
			Register : {address:0}
			CNT {
				(flecs.doc.Description, flecs.doc.Brief) : {"counter value"}
				Field : {bitoffset:0, bitwidth:16}
			}
			UIFCPY {
				(flecs.doc.Description, flecs.doc.Brief) : {"UIF copy"}
				Field : {bitoffset:31, bitwidth:1}
			}
		}
		PSC {
			(flecs.doc.Description, flecs.doc.Brief) : {"prescaler"}
			Register : {address:0}
			PSC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Prescaler value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		ARR {
			(flecs.doc.Description, flecs.doc.Brief) : {"auto-reload register"}
			Register : {address:0}
			ARR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Auto-reload value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		RCR {
			(flecs.doc.Description, flecs.doc.Brief) : {"repetition counter register"}
			Register : {address:0}
			REP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Repetition counter value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		CCR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare register 1"}
			Register : {address:0}
			CCR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		CCR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare register 2"}
			Register : {address:0}
			CCR2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 2 value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		CCR3 {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare register 3"}
			Register : {address:0}
			CCR3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		CCR4 {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare register 4"}
			Register : {address:0}
			CCR4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		BDTR {
			(flecs.doc.Description, flecs.doc.Brief) : {"break and dead-time register"}
			Register : {address:0}
			DTG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Dead-time generator setup"}
				Field : {bitoffset:0, bitwidth:8}
			}
			LOCK {
				(flecs.doc.Description, flecs.doc.Brief) : {"Lock configuration"}
				Field : {bitoffset:8, bitwidth:2}
			}
			OSSI {
				(flecs.doc.Description, flecs.doc.Brief) : {"Off-state selection for Idle\n              mode"}
				Field : {bitoffset:10, bitwidth:1}
			}
			OSSR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Off-state selection for Run\n              mode"}
				Field : {bitoffset:11, bitwidth:1}
			}
			BKE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break enable"}
				Field : {bitoffset:12, bitwidth:1}
			}
			BKP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break polarity"}
				Field : {bitoffset:13, bitwidth:1}
			}
			AOE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Automatic output enable"}
				Field : {bitoffset:14, bitwidth:1}
			}
			MOE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Main output enable"}
				Field : {bitoffset:15, bitwidth:1}
			}
			BKF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break filter"}
				Field : {bitoffset:16, bitwidth:4}
			}
			BK2F {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break 2 filter"}
				Field : {bitoffset:20, bitwidth:4}
			}
			BK2E {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break 2 enable"}
				Field : {bitoffset:24, bitwidth:1}
			}
			BK2P {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break 2 polarity"}
				Field : {bitoffset:25, bitwidth:1}
			}
			BKDSRM {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break Disarm"}
				Field : {bitoffset:26, bitwidth:1}
			}
			BK2DSRM {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break2 Disarm"}
				Field : {bitoffset:27, bitwidth:1}
			}
			BKBID {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break Bidirectional"}
				Field : {bitoffset:28, bitwidth:1}
			}
			BK2ID {
				(flecs.doc.Description, flecs.doc.Brief) : {"Break2 bidirectional"}
				Field : {bitoffset:29, bitwidth:1}
			}
		}
		DCR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA control register"}
			Register : {address:0}
			DBL {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA burst length"}
				Field : {bitoffset:8, bitwidth:5}
			}
			DBA {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA base address"}
				Field : {bitoffset:0, bitwidth:5}
			}
		}
		DMAR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA address for full transfer"}
			Register : {address:0}
			DMAB {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA register for burst\n              accesses"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		OR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"option register 1"}
			Register : {address:0}
			OCREF_CLR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Ocref_clr source selection"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		CCMR3_Output {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare mode register 2 (output\n          mode)"}
			Register : {address:0}
			OC6M_bit3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 6 mode bit\n              3"}
				Field : {bitoffset:24, bitwidth:1}
			}
			OC5M_bit3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 5 mode bit\n              3"}
				Field : {bitoffset:16, bitwidth:1}
			}
			OC6CE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 6 clear\n              enable"}
				Field : {bitoffset:15, bitwidth:1}
			}
			OC6M {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 6 mode"}
				Field : {bitoffset:12, bitwidth:3}
			}
			OC6PE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 6 preload\n              enable"}
				Field : {bitoffset:11, bitwidth:1}
			}
			OC6FE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 6 fast\n              enable"}
				Field : {bitoffset:10, bitwidth:1}
			}
			OC5CE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 5 clear\n              enable"}
				Field : {bitoffset:7, bitwidth:1}
			}
			OC5M {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 5 mode"}
				Field : {bitoffset:4, bitwidth:3}
			}
			OC5PE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 5 preload\n              enable"}
				Field : {bitoffset:3, bitwidth:1}
			}
			OC5FE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 5 fast\n              enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
		}
		CCR5 {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare register 4"}
			Register : {address:0}
			CCR5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare value"}
				Field : {bitoffset:0, bitwidth:16}
			}
			GC5C1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Group Channel 5 and Channel\n              1"}
				Field : {bitoffset:29, bitwidth:1}
			}
			GC5C2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Group Channel 5 and Channel\n              2"}
				Field : {bitoffset:30, bitwidth:1}
			}
			GC5C3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Group Channel 5 and Channel\n              3"}
				Field : {bitoffset:31, bitwidth:1}
			}
		}
		CCR6 {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare register 4"}
			Register : {address:0}
			CCR6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		AF1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA address for full transfer"}
			Register : {address:0}
			BKINE {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK BKIN input enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
			BKCMP1E {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK COMP1 enable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			BKCMP2E {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK COMP2 enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			BKINP {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK BKIN input polarity"}
				Field : {bitoffset:9, bitwidth:1}
			}
			BKCMP1P {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK COMP1 input polarity"}
				Field : {bitoffset:10, bitwidth:1}
			}
			BKCMP2P {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK COMP2 input polarity"}
				Field : {bitoffset:11, bitwidth:1}
			}
			ETRSEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"ETR source selection"}
				Field : {bitoffset:14, bitwidth:3}
			}
		}
		AF2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA address for full transfer"}
			Register : {address:0}
			BK2INE {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK2 BKIN input enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
			BK2CMP1E {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK2 COMP1 enable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			BK2CMP2E {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK2 COMP2 enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			BK2DFBK0E {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK2 DFSDM_BREAK0 enable"}
				Field : {bitoffset:8, bitwidth:1}
			}
			BK2INP {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK2 BKIN input polarity"}
				Field : {bitoffset:9, bitwidth:1}
			}
			BK2CMP1P {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK2 COMP1 input polarity"}
				Field : {bitoffset:10, bitwidth:1}
			}
			BK2CMP2P {
				(flecs.doc.Description, flecs.doc.Brief) : {"BRK2 COMP2 input polarity"}
				Field : {bitoffset:11, bitwidth:1}
			}
		}
		TISEL {
			(flecs.doc.Description, flecs.doc.Brief) : {"TIM1 timer input selection\n          register"}
			Register : {address:0}
			TI1SEL3_0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"selects TI1[0] to TI1[15]\n              input"}
				Field : {bitoffset:0, bitwidth:4}
			}
			TI2SEL3_0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"selects TI2[0] to TI2[15]\n              input"}
				Field : {bitoffset:8, bitwidth:4}
			}
			TI3SEL3_0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"selects TI3[0] to TI3[15]\n              input"}
				Field : {bitoffset:16, bitwidth:4}
			}
			TI4SEL3_0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"selects TI4[0] to TI4[15]\n              input"}
				Field : {bitoffset:24, bitwidth:4}
			}
		}
	}
	SYSCFG {
		(flecs.doc.Description, flecs.doc.Brief) : {"System configuration controller"}
		CFGR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"SYSCFG configuration register\n          1"}
			Register : {address:0}
			I2C3_FMP {
				(flecs.doc.Description, flecs.doc.Brief) : {"I2C3_FMP"}
				Field : {bitoffset:24, bitwidth:1}
			}
			I2C_PA10_FMP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Fast Mode Plus (FM+) driving capability\n              activation bits"}
				Field : {bitoffset:23, bitwidth:1}
			}
			I2C_PA9_FMP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Fast Mode Plus (FM+) driving capability\n              activation bits"}
				Field : {bitoffset:22, bitwidth:1}
			}
			I2C2_FMP {
				(flecs.doc.Description, flecs.doc.Brief) : {"FM+ driving capability activation for\n              I2C2"}
				Field : {bitoffset:21, bitwidth:1}
			}
			I2C1_FMP {
				(flecs.doc.Description, flecs.doc.Brief) : {"FM+ driving capability activation for\n              I2C1"}
				Field : {bitoffset:20, bitwidth:1}
			}
			I2C_PB9_FMP {
				(flecs.doc.Description, flecs.doc.Brief) : {"I2C_PB9_FMP"}
				Field : {bitoffset:19, bitwidth:1}
			}
			I2C_PB8_FMP {
				(flecs.doc.Description, flecs.doc.Brief) : {"I2C_PB8_FMP"}
				Field : {bitoffset:18, bitwidth:1}
			}
			I2C_PB7_FMP {
				(flecs.doc.Description, flecs.doc.Brief) : {"I2C_PB7_FMP"}
				Field : {bitoffset:17, bitwidth:1}
			}
			I2C_PBx_FMP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Fast Mode Plus (FM+) driving capability\n              activation bits"}
				Field : {bitoffset:16, bitwidth:1}
			}
			UCPD2_STROBE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Strobe signal bit for\n              UCPD2"}
				Field : {bitoffset:10, bitwidth:1}
			}
			UCPD1_STROBE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Strobe signal bit for\n              UCPD1"}
				Field : {bitoffset:9, bitwidth:1}
			}
			BOOSTEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"I/O analog switch voltage booster\n              enable"}
				Field : {bitoffset:8, bitwidth:1}
			}
			IR_MOD {
				(flecs.doc.Description, flecs.doc.Brief) : {"IR Modulation Envelope signal\n              selection."}
				Field : {bitoffset:6, bitwidth:2}
			}
			IR_POL {
				(flecs.doc.Description, flecs.doc.Brief) : {"IR output polarity\n              selection"}
				Field : {bitoffset:5, bitwidth:1}
			}
			PA12_RMP {
				(flecs.doc.Description, flecs.doc.Brief) : {"PA11 and PA12 remapping\n              bit."}
				Field : {bitoffset:4, bitwidth:1}
			}
			PA11_RMP {
				(flecs.doc.Description, flecs.doc.Brief) : {"PA11_RMP"}
				Field : {bitoffset:3, bitwidth:1}
			}
			MEM_MODE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Memory mapping selection\n              bits"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		CFGR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"SYSCFG configuration register\n          1"}
			Register : {address:0}
			LOCKUP_LOCK {
				(flecs.doc.Description, flecs.doc.Brief) : {"Cortex-M0+ LOCKUP bit enable\n              bit"}
				Field : {bitoffset:0, bitwidth:1}
			}
			SRAM_PARITY_LOCK {
				(flecs.doc.Description, flecs.doc.Brief) : {"SRAM parity lock bit"}
				Field : {bitoffset:1, bitwidth:1}
			}
			ECC_LOCK {
				(flecs.doc.Description, flecs.doc.Brief) : {"ECC error lock bit"}
				Field : {bitoffset:3, bitwidth:1}
			}
			SRAM_PEF {
				(flecs.doc.Description, flecs.doc.Brief) : {"SRAM parity error flag"}
				Field : {bitoffset:8, bitwidth:1}
			}
		}
		ITLINE0 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 0 status\n          register"}
			Register : {address:0}
			WWDG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Window watchdog interrupt pending\n              flag"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		ITLINE2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 2 status\n          register"}
			Register : {address:0}
			TAMP {
				(flecs.doc.Description, flecs.doc.Brief) : {"TAMP"}
				Field : {bitoffset:0, bitwidth:1}
			}
			RTC {
				(flecs.doc.Description, flecs.doc.Brief) : {"RTC"}
				Field : {bitoffset:1, bitwidth:1}
			}
		}
		ITLINE3 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 3 status\n          register"}
			Register : {address:0}
			FLASH_ITF {
				(flecs.doc.Description, flecs.doc.Brief) : {"FLASH_ITF"}
				Field : {bitoffset:0, bitwidth:1}
			}
			FLASH_ECC {
				(flecs.doc.Description, flecs.doc.Brief) : {"FLASH_ECC"}
				Field : {bitoffset:1, bitwidth:1}
			}
		}
		ITLINE4 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 4 status\n          register"}
			Register : {address:0}
			RCC {
				(flecs.doc.Description, flecs.doc.Brief) : {"RCC"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		ITLINE5 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 5 status\n          register"}
			Register : {address:0}
			EXTI0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"EXTI0"}
				Field : {bitoffset:0, bitwidth:1}
			}
			EXTI1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"EXTI1"}
				Field : {bitoffset:1, bitwidth:1}
			}
		}
		ITLINE6 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 6 status\n          register"}
			Register : {address:0}
			EXTI2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"EXTI2"}
				Field : {bitoffset:0, bitwidth:1}
			}
			EXTI3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"EXTI3"}
				Field : {bitoffset:1, bitwidth:1}
			}
		}
		ITLINE7 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 7 status\n          register"}
			Register : {address:0}
			EXTI4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"EXTI4"}
				Field : {bitoffset:0, bitwidth:1}
			}
			EXTI5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"EXTI5"}
				Field : {bitoffset:1, bitwidth:1}
			}
			EXTI6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"EXTI6"}
				Field : {bitoffset:2, bitwidth:1}
			}
			EXTI7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"EXTI7"}
				Field : {bitoffset:3, bitwidth:1}
			}
			EXTI8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"EXTI8"}
				Field : {bitoffset:4, bitwidth:1}
			}
			EXTI9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"EXTI9"}
				Field : {bitoffset:5, bitwidth:1}
			}
			EXTI10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"EXTI10"}
				Field : {bitoffset:6, bitwidth:1}
			}
			EXTI11 {
				(flecs.doc.Description, flecs.doc.Brief) : {"EXTI11"}
				Field : {bitoffset:7, bitwidth:1}
			}
			EXTI12 {
				(flecs.doc.Description, flecs.doc.Brief) : {"EXTI12"}
				Field : {bitoffset:8, bitwidth:1}
			}
			EXTI13 {
				(flecs.doc.Description, flecs.doc.Brief) : {"EXTI13"}
				Field : {bitoffset:9, bitwidth:1}
			}
			EXTI14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"EXTI14"}
				Field : {bitoffset:10, bitwidth:1}
			}
			EXTI15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"EXTI15"}
				Field : {bitoffset:11, bitwidth:1}
			}
		}
		ITLINE8 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 8 status\n          register"}
			Register : {address:0}
			USB {
				(flecs.doc.Description, flecs.doc.Brief) : {"USB"}
				Field : {bitoffset:2, bitwidth:1}
			}
		}
		ITLINE9 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 9 status\n          register"}
			Register : {address:0}
			DMA1_CH1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA1_CH1"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		ITLINE10 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 10 status\n          register"}
			Register : {address:0}
			DMA1_CH2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA1_CH1"}
				Field : {bitoffset:0, bitwidth:1}
			}
			DMA1_CH3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA1_CH3"}
				Field : {bitoffset:1, bitwidth:1}
			}
		}
		ITLINE11 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 11 status\n          register"}
			Register : {address:0}
			DMAMUX {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMAMUX"}
				Field : {bitoffset:0, bitwidth:1}
			}
			DMA1_CH4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA1_CH4"}
				Field : {bitoffset:1, bitwidth:1}
			}
			DMA1_CH5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA1_CH5"}
				Field : {bitoffset:2, bitwidth:1}
			}
			DMA1_CH6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA1_CH6"}
				Field : {bitoffset:3, bitwidth:1}
			}
			DMA1_CH7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA1_CH7"}
				Field : {bitoffset:4, bitwidth:1}
			}
			DMA2_CH1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA2_CH1"}
				Field : {bitoffset:5, bitwidth:1}
			}
			DMA2_CH2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA2_CH2"}
				Field : {bitoffset:6, bitwidth:1}
			}
			DMA2_CH3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA2_CH3"}
				Field : {bitoffset:7, bitwidth:1}
			}
			DMA2_CH4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA2_CH4"}
				Field : {bitoffset:8, bitwidth:1}
			}
			DMA2_CH5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA2_CH5"}
				Field : {bitoffset:9, bitwidth:1}
			}
		}
		ITLINE12 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 12 status\n          register"}
			Register : {address:0}
			ADC {
				(flecs.doc.Description, flecs.doc.Brief) : {"ADC"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		ITLINE13 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 13 status\n          register"}
			Register : {address:0}
			TIM1_CCU {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM1_CCU"}
				Field : {bitoffset:0, bitwidth:1}
			}
			TIM1_TRG {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM1_TRG"}
				Field : {bitoffset:1, bitwidth:1}
			}
			TIM1_UPD {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM1_UPD"}
				Field : {bitoffset:2, bitwidth:1}
			}
			TIM1_BRK {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM1_BRK"}
				Field : {bitoffset:3, bitwidth:1}
			}
		}
		ITLINE14 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 14 status\n          register"}
			Register : {address:0}
			TIM1_CC {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM1_CC"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		ITLINE16 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 16 status\n          register"}
			Register : {address:0}
			TIM3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM3"}
				Field : {bitoffset:0, bitwidth:1}
			}
			TIM4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM4"}
				Field : {bitoffset:1, bitwidth:1}
			}
		}
		ITLINE17 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 17 status\n          register"}
			Register : {address:0}
			TIM6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM6"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		ITLINE18 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 18 status\n          register"}
			Register : {address:0}
			TIM7 {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM7"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		ITLINE19 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 19 status\n          register"}
			Register : {address:0}
			TIM14 {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM14"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		ITLINE20 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 20 status\n          register"}
			Register : {address:0}
			TIM15 {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM15"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		ITLINE21 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 21 status\n          register"}
			Register : {address:0}
			TIM16 {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM16"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		ITLINE22 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 22 status\n          register"}
			Register : {address:0}
			TIM17 {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM17"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		ITLINE23 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 23 status\n          register"}
			Register : {address:0}
			I2C1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"I2C1"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		ITLINE24 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 24 status\n          register"}
			Register : {address:0}
			I2C2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"I2C2"}
				Field : {bitoffset:0, bitwidth:1}
			}
			I2C3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"I2C3"}
				Field : {bitoffset:1, bitwidth:1}
			}
		}
		ITLINE25 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 25 status\n          register"}
			Register : {address:0}
			SPI1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"SPI1"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		ITLINE26 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 26 status\n          register"}
			Register : {address:0}
			SPI2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"SPI2"}
				Field : {bitoffset:0, bitwidth:1}
			}
			SPI3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"SPI3"}
				Field : {bitoffset:14, bitwidth:1}
			}
		}
		ITLINE27 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 27 status\n          register"}
			Register : {address:0}
			USART1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART1"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		ITLINE28 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 28 status\n          register"}
			Register : {address:0}
			USART2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART2"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		ITLINE29 {
			(flecs.doc.Description, flecs.doc.Brief) : {"interrupt line 29 status\n          register"}
			Register : {address:0}
			USART3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART3"}
				Field : {bitoffset:0, bitwidth:1}
			}
			USART4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART4"}
				Field : {bitoffset:1, bitwidth:1}
			}
			USART5 {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART5"}
				Field : {bitoffset:3, bitwidth:1}
			}
			USART6 {
				(flecs.doc.Description, flecs.doc.Brief) : {"USART6"}
				Field : {bitoffset:4, bitwidth:1}
			}
		}
	}
	TAMP {
		(flecs.doc.Description, flecs.doc.Brief) : {"Tamper and backup registers"}
		TAMP_CR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"TAMP control register 1 "}
			Register : {address:0}
			TAMP1E {
				(flecs.doc.Description, flecs.doc.Brief) : {"Tamper detection on TAMP_IN1 enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
			TAMP2E {
				(flecs.doc.Description, flecs.doc.Brief) : {"Tamper detection on TAMP_IN2 enable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			TAMP3E {
				(flecs.doc.Description, flecs.doc.Brief) : {"Tamper detection on TAMP_IN3 enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			ITAMP3E {
				(flecs.doc.Description, flecs.doc.Brief) : {"Internal tamper 3 enable: LSE monitoring"}
				Field : {bitoffset:18, bitwidth:1}
			}
			ITAMP4E {
				(flecs.doc.Description, flecs.doc.Brief) : {"Internal tamper 4 enable: HSE monitoring"}
				Field : {bitoffset:19, bitwidth:1}
			}
			ITAMP5E {
				(flecs.doc.Description, flecs.doc.Brief) : {"Internal tamper 5 enable: RTC calendar overflow"}
				Field : {bitoffset:20, bitwidth:1}
			}
			ITAMP6E {
				(flecs.doc.Description, flecs.doc.Brief) : {"Internal tamper 6 enable: ST manufacturer readout"}
				Field : {bitoffset:21, bitwidth:1}
			}
		}
		TAMP_CR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"TAMP control register 2 "}
			Register : {address:0}
			TAMP1NOER {
				(flecs.doc.Description, flecs.doc.Brief) : {"Tamper 1 no erase"}
				Field : {bitoffset:0, bitwidth:1}
			}
			TAMP2NOER {
				(flecs.doc.Description, flecs.doc.Brief) : {"Tamper 2 no erase"}
				Field : {bitoffset:1, bitwidth:1}
			}
			TAMP3NOER {
				(flecs.doc.Description, flecs.doc.Brief) : {"Tamper 3 no erase"}
				Field : {bitoffset:2, bitwidth:1}
			}
			TAMP1MSK {
				(flecs.doc.Description, flecs.doc.Brief) : {"Tamper 1 mask\nThe tamper 1 interrupt must not be enabled when TAMP1MSK is set."}
				Field : {bitoffset:16, bitwidth:1}
			}
			TAMP2MSK {
				(flecs.doc.Description, flecs.doc.Brief) : {"Tamper 2 mask\nThe tamper 2 interrupt must not be enabled when TAMP2MSK is set."}
				Field : {bitoffset:17, bitwidth:1}
			}
			TAMP3MSK {
				(flecs.doc.Description, flecs.doc.Brief) : {"Tamper 3 mask\nThe tamper 3 interrupt must not be enabled when TAMP3MSK is set."}
				Field : {bitoffset:18, bitwidth:1}
			}
			TAMP1TRG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Active level for tamper 1 input (active mode disabled)\nIf TAMPFLT = 00 Tamper 1 input rising edge and high level triggers a tamper detection event.\nIf TAMPFLT = 00 Tamper 1 input falling edge and low level triggers a tamper detection event."}
				Field : {bitoffset:24, bitwidth:1}
			}
			TAMP2TRG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Active level for tamper 2 input (active mode disabled)\nIf TAMPFLT = 00 Tamper 2 input rising edge and high level triggers a tamper detection event.\nIf TAMPFLT = 00 Tamper 2 input falling edge and low level triggers a tamper detection event."}
				Field : {bitoffset:25, bitwidth:1}
			}
			TAMP3TRG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Active level for tamper 3 input (active mode disabled)\nIf TAMPFLT = 00 Tamper 3 input rising edge and high level triggers a tamper detection event.\nIf TAMPFLT = 00 Tamper 3 input falling edge and low level triggers a tamper detection event."}
				Field : {bitoffset:26, bitwidth:1}
			}
		}
		TAMP_FLTCR {
			(flecs.doc.Description, flecs.doc.Brief) : {"TAMP filter control register "}
			Register : {address:0}
			TAMPFREQ {
				(flecs.doc.Description, flecs.doc.Brief) : {"Tamper sampling frequency\nDetermines the frequency at which each of the TAMP_INx inputs are sampled."}
				Field : {bitoffset:0, bitwidth:3}
			}
			TAMPFLT {
				(flecs.doc.Description, flecs.doc.Brief) : {"TAMP_INx filter count\nThese bits determines the number of consecutive samples at the specified level (TAMP*TRG) needed to activate a tamper event. TAMPFLT is valid for each of the TAMP_INx inputs."}
				Field : {bitoffset:3, bitwidth:2}
			}
			TAMPPRCH {
				(flecs.doc.Description, flecs.doc.Brief) : {"TAMP_INx precharge duration\nThese bit determines the duration of time during which the pull-up/is activated before each sample. TAMPPRCH is valid for each of the TAMP_INx inputs."}
				Field : {bitoffset:5, bitwidth:2}
			}
			TAMPPUDIS {
				(flecs.doc.Description, flecs.doc.Brief) : {"TAMP_INx pull-up disable\nThis bit determines if each of the TAMPx pins are precharged before each sample."}
				Field : {bitoffset:7, bitwidth:1}
			}
		}
		TAMP_IER {
			(flecs.doc.Description, flecs.doc.Brief) : {"TAMP interrupt enable register "}
			Register : {address:0}
			TAMP1IE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Tamper 1 interrupt enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
			TAMP2IE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Tamper 2 interrupt enable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			TAMP3IE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Tamper 3 interrupt enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			ITAMP3IE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Internal tamper 3 interrupt enable: LSE monitoring"}
				Field : {bitoffset:18, bitwidth:1}
			}
			ITAMP4IE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Internal tamper 4 interrupt enable: HSE monitoring"}
				Field : {bitoffset:19, bitwidth:1}
			}
			ITAMP5IE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Internal tamper 5 interrupt enable: RTC calendar overflow"}
				Field : {bitoffset:20, bitwidth:1}
			}
			ITAMP6IE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Internal tamper 6 interrupt enable: ST manufacturer readout"}
				Field : {bitoffset:21, bitwidth:1}
			}
		}
		TAMP_SR {
			(flecs.doc.Description, flecs.doc.Brief) : {"TAMP status register "}
			Register : {address:0}
			TAMP1F {
				(flecs.doc.Description, flecs.doc.Brief) : {"TAMP1 detection flag\nThis flag is set by hardware when a tamper detection event is detected on the TAMP1 input."}
				Field : {bitoffset:0, bitwidth:1}
			}
			TAMP2F {
				(flecs.doc.Description, flecs.doc.Brief) : {"TAMP2 detection flag\nThis flag is set by hardware when a tamper detection event is detected on the TAMP2 input."}
				Field : {bitoffset:1, bitwidth:1}
			}
			TAMP3F {
				(flecs.doc.Description, flecs.doc.Brief) : {"TAMP3 detection flag\nThis flag is set by hardware when a tamper detection event is detected on the TAMP3 input."}
				Field : {bitoffset:2, bitwidth:1}
			}
			ITAMP3F {
				(flecs.doc.Description, flecs.doc.Brief) : {"LSE monitoring tamper detection flag\nThis flag is set by hardware when a tamper detection event is detected on the internal tamper 3."}
				Field : {bitoffset:18, bitwidth:1}
			}
			ITAMP4F {
				(flecs.doc.Description, flecs.doc.Brief) : {"HSE monitoring tamper detection flag\nThis flag is set by hardware when a tamper detection event is detected on the internal tamper 4."}
				Field : {bitoffset:19, bitwidth:1}
			}
			ITAMP5F {
				(flecs.doc.Description, flecs.doc.Brief) : {"RTC calendar overflow tamper detection flag\nThis flag is set by hardware when a tamper detection event is detected on the internal tamper 5."}
				Field : {bitoffset:20, bitwidth:1}
			}
			ITAMP6F {
				(flecs.doc.Description, flecs.doc.Brief) : {"ST manufacturer readout tamper detection flag\nThis flag is set by hardware when a tamper detection event is detected on the internal tamper 6."}
				Field : {bitoffset:21, bitwidth:1}
			}
		}
		TAMP_MISR {
			(flecs.doc.Description, flecs.doc.Brief) : {"TAMP masked interrupt status register "}
			Register : {address:0}
			TAMP1MF {
				(flecs.doc.Description, flecs.doc.Brief) : {"TAMP1 interrupt masked flag\nThis flag is set by hardware when the tamper 1 interrupt is raised."}
				Field : {bitoffset:0, bitwidth:1}
			}
			TAMP2MF {
				(flecs.doc.Description, flecs.doc.Brief) : {"TAMP2 interrupt masked flag\nThis flag is set by hardware when the tamper 2 interrupt is raised."}
				Field : {bitoffset:1, bitwidth:1}
			}
			TAMP3MF {
				(flecs.doc.Description, flecs.doc.Brief) : {"TAMP3 interrupt masked flag\nThis flag is set by hardware when the tamper 3 interrupt is raised."}
				Field : {bitoffset:2, bitwidth:1}
			}
			ITAMP3MF {
				(flecs.doc.Description, flecs.doc.Brief) : {"LSE monitoring tamper interrupt masked flag\nThis flag is set by hardware when the internal tamper 3 interrupt is raised."}
				Field : {bitoffset:18, bitwidth:1}
			}
			ITAMP4MF {
				(flecs.doc.Description, flecs.doc.Brief) : {"HSE monitoring tamper interrupt masked flag\nThis flag is set by hardware when the internal tamper 4 interrupt is raised."}
				Field : {bitoffset:19, bitwidth:1}
			}
			ITAMP5MF {
				(flecs.doc.Description, flecs.doc.Brief) : {"RTC calendar overflow tamper interrupt masked flag\nThis flag is set by hardware when the internal tamper 5 interrupt is raised."}
				Field : {bitoffset:20, bitwidth:1}
			}
			ITAMP6MF {
				(flecs.doc.Description, flecs.doc.Brief) : {"ST manufacturer readout tamper interrupt masked flag\nThis flag is set by hardware when the internal tamper 6 interrupt is raised."}
				Field : {bitoffset:21, bitwidth:1}
			}
		}
		TAMP_SCR {
			(flecs.doc.Description, flecs.doc.Brief) : {"TAMP status clear register"}
			Register : {address:0}
			CTAMP1F {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clear TAMP1 detection flag\nWriting 1 in this bit clears the TAMP1F bit in the TAMP_SR register."}
				Field : {bitoffset:0, bitwidth:1}
			}
			CTAMP2F {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clear TAMP2 detection flag\nWriting 1 in this bit clears the TAMP2F bit in the TAMP_SR register."}
				Field : {bitoffset:1, bitwidth:1}
			}
			CTAMP3F {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clear TAMP3 detection flag\nWriting 1 in this bit clears the TAMP3F bit in the TAMP_SR register."}
				Field : {bitoffset:2, bitwidth:1}
			}
			CITAMP3F {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clear ITAMP3 detection flag\nWriting 1 in this bit clears the ITAMP3F bit in the TAMP_SR register."}
				Field : {bitoffset:18, bitwidth:1}
			}
			CITAMP4F {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clear ITAMP4 detection flag\nWriting 1 in this bit clears the ITAMP4F bit in the TAMP_SR register."}
				Field : {bitoffset:19, bitwidth:1}
			}
			CITAMP5F {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clear ITAMP5 detection flag\nWriting 1 in this bit clears the ITAMP5F bit in the TAMP_SR register."}
				Field : {bitoffset:20, bitwidth:1}
			}
			CITAMP6F {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clear ITAMP6 detection flag\nWriting 1 in this bit clears the ITAMP6F bit in the TAMP_SR register."}
				Field : {bitoffset:21, bitwidth:1}
			}
		}
		TAMP_BKP0R {
			(flecs.doc.Description, flecs.doc.Brief) : {"TAMP backup 0 register"}
			Register : {address:0}
			BKP {
				(flecs.doc.Description, flecs.doc.Brief) : {"The application can write or read data to and from these registers.\nThey are powered-on by VBAT when VDD is switched off, so that they are not reset by System reset, and their contents remain valid when the device operates in low-power mode.\nIn the defaul"}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		TAMP_BKP1R {
			(flecs.doc.Description, flecs.doc.Brief) : {"TAMP backup 1 register"}
			Register : {address:0}
			BKP {
				(flecs.doc.Description, flecs.doc.Brief) : {"The application can write or read data to and from these registers.\nThey are powered-on by VBAT when VDD is switched off, so that they are not reset by System reset, and their contents remain valid when the device operates in low-power mode.\nIn the defaul"}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		TAMP_BKP2R {
			(flecs.doc.Description, flecs.doc.Brief) : {"TAMP backup 2 register"}
			Register : {address:0}
			BKP {
				(flecs.doc.Description, flecs.doc.Brief) : {"The application can write or read data to and from these registers.\nThey are powered-on by VBAT when VDD is switched off, so that they are not reset by System reset, and their contents remain valid when the device operates in low-power mode.\nIn the defaul"}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		TAMP_BKP3R {
			(flecs.doc.Description, flecs.doc.Brief) : {"TAMP backup 3 register"}
			Register : {address:0}
			BKP {
				(flecs.doc.Description, flecs.doc.Brief) : {"The application can write or read data to and from these registers.\nThey are powered-on by VBAT when VDD is switched off, so that they are not reset by System reset, and their contents remain valid when the device operates in low-power mode.\nIn the defaul"}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
		TAMP_BKP4R {
			(flecs.doc.Description, flecs.doc.Brief) : {"TAMP backup 4 register"}
			Register : {address:0}
			BKP {
				(flecs.doc.Description, flecs.doc.Brief) : {"The application can write or read data to and from these registers.\nThey are powered-on by VBAT when VDD is switched off, so that they are not reset by System reset, and their contents remain valid when the device operates in low-power mode.\nIn the defaul"}
				Field : {bitoffset:0, bitwidth:32}
			}
		}
	}
	I2C1 {
		(flecs.doc.Description, flecs.doc.Brief) : {"Inter-integrated circuit"}
		CR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"Control register 1"}
			Register : {address:0}
			PE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Peripheral enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
			TXIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"TX Interrupt enable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			RXIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"RX Interrupt enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			ADDRIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Address match interrupt enable (slave\n              only)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			NACKIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Not acknowledge received interrupt\n              enable"}
				Field : {bitoffset:4, bitwidth:1}
			}
			STOPIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"STOP detection Interrupt\n              enable"}
				Field : {bitoffset:5, bitwidth:1}
			}
			TCIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transfer Complete interrupt\n              enable"}
				Field : {bitoffset:6, bitwidth:1}
			}
			ERRIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Error interrupts enable"}
				Field : {bitoffset:7, bitwidth:1}
			}
			DNF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Digital noise filter"}
				Field : {bitoffset:8, bitwidth:4}
			}
			ANFOFF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog noise filter OFF"}
				Field : {bitoffset:12, bitwidth:1}
			}
			TXDMAEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA transmission requests\n              enable"}
				Field : {bitoffset:14, bitwidth:1}
			}
			RXDMAEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA reception requests\n              enable"}
				Field : {bitoffset:15, bitwidth:1}
			}
			SBC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Slave byte control"}
				Field : {bitoffset:16, bitwidth:1}
			}
			NOSTRETCH {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clock stretching disable"}
				Field : {bitoffset:17, bitwidth:1}
			}
			WUPEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wakeup from STOP enable"}
				Field : {bitoffset:18, bitwidth:1}
			}
			GCEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"General call enable"}
				Field : {bitoffset:19, bitwidth:1}
			}
			SMBHEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"SMBus Host address enable"}
				Field : {bitoffset:20, bitwidth:1}
			}
			SMBDEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"SMBus Device Default address\n              enable"}
				Field : {bitoffset:21, bitwidth:1}
			}
			ALERTEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"SMBUS alert enable"}
				Field : {bitoffset:22, bitwidth:1}
			}
			PECEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"PEC enable"}
				Field : {bitoffset:23, bitwidth:1}
			}
		}
		CR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"Control register 2"}
			Register : {address:0}
			PECBYTE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Packet error checking byte"}
				Field : {bitoffset:26, bitwidth:1}
			}
			AUTOEND {
				(flecs.doc.Description, flecs.doc.Brief) : {"Automatic end mode (master\n              mode)"}
				Field : {bitoffset:25, bitwidth:1}
			}
			RELOAD {
				(flecs.doc.Description, flecs.doc.Brief) : {"NBYTES reload mode"}
				Field : {bitoffset:24, bitwidth:1}
			}
			NBYTES {
				(flecs.doc.Description, flecs.doc.Brief) : {"Number of bytes"}
				Field : {bitoffset:16, bitwidth:8}
			}
			NACK {
				(flecs.doc.Description, flecs.doc.Brief) : {"NACK generation (slave\n              mode)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			STOP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Stop generation (master\n              mode)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			START {
				(flecs.doc.Description, flecs.doc.Brief) : {"Start generation"}
				Field : {bitoffset:13, bitwidth:1}
			}
			HEAD10R {
				(flecs.doc.Description, flecs.doc.Brief) : {"10-bit address header only read\n              direction (master receiver mode)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			ADD10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"10-bit addressing mode (master\n              mode)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			RD_WRN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transfer direction (master\n              mode)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			SADD {
				(flecs.doc.Description, flecs.doc.Brief) : {"Slave address bit (master\n              mode)"}
				Field : {bitoffset:0, bitwidth:10}
			}
		}
		OAR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"Own address register 1"}
			Register : {address:0}
			OA1_0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Interface address"}
				Field : {bitoffset:0, bitwidth:1}
			}
			OA1_7_1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Interface address"}
				Field : {bitoffset:1, bitwidth:7}
			}
			OA1_8_9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Interface address"}
				Field : {bitoffset:8, bitwidth:2}
			}
			OA1MODE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Own Address 1 10-bit mode"}
				Field : {bitoffset:10, bitwidth:1}
			}
			OA1EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Own Address 1 enable"}
				Field : {bitoffset:15, bitwidth:1}
			}
		}
		OAR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"Own address register 2"}
			Register : {address:0}
			OA2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Interface address"}
				Field : {bitoffset:1, bitwidth:7}
			}
			OA2MSK {
				(flecs.doc.Description, flecs.doc.Brief) : {"Own Address 2 masks"}
				Field : {bitoffset:8, bitwidth:3}
			}
			OA2EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Own Address 2 enable"}
				Field : {bitoffset:15, bitwidth:1}
			}
		}
		TIMINGR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Timing register"}
			Register : {address:0}
			SCLL {
				(flecs.doc.Description, flecs.doc.Brief) : {"SCL low period (master\n              mode)"}
				Field : {bitoffset:0, bitwidth:8}
			}
			SCLH {
				(flecs.doc.Description, flecs.doc.Brief) : {"SCL high period (master\n              mode)"}
				Field : {bitoffset:8, bitwidth:8}
			}
			SDADEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Data hold time"}
				Field : {bitoffset:16, bitwidth:4}
			}
			SCLDEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Data setup time"}
				Field : {bitoffset:20, bitwidth:4}
			}
			PRESC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Timing prescaler"}
				Field : {bitoffset:28, bitwidth:4}
			}
		}
		TIMEOUTR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Status register 1"}
			Register : {address:0}
			TIMEOUTA {
				(flecs.doc.Description, flecs.doc.Brief) : {"Bus timeout A"}
				Field : {bitoffset:0, bitwidth:12}
			}
			TIDLE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Idle clock timeout\n              detection"}
				Field : {bitoffset:12, bitwidth:1}
			}
			TIMOUTEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clock timeout enable"}
				Field : {bitoffset:15, bitwidth:1}
			}
			TIMEOUTB {
				(flecs.doc.Description, flecs.doc.Brief) : {"Bus timeout B"}
				Field : {bitoffset:16, bitwidth:12}
			}
			TEXTEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Extended clock timeout\n              enable"}
				Field : {bitoffset:31, bitwidth:1}
			}
		}
		ISR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Interrupt and Status register"}
			Register : {address:0}
			ADDCODE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Address match code (Slave\n              mode)"}
				Field : {bitoffset:17, bitwidth:7}
			}
			DIR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transfer direction (Slave\n              mode)"}
				Field : {bitoffset:16, bitwidth:1}
			}
			BUSY {
				(flecs.doc.Description, flecs.doc.Brief) : {"Bus busy"}
				Field : {bitoffset:15, bitwidth:1}
			}
			ALERT {
				(flecs.doc.Description, flecs.doc.Brief) : {"SMBus alert"}
				Field : {bitoffset:13, bitwidth:1}
			}
			TIMEOUT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Timeout or t_low detection\n              flag"}
				Field : {bitoffset:12, bitwidth:1}
			}
			PECERR {
				(flecs.doc.Description, flecs.doc.Brief) : {"PEC Error in reception"}
				Field : {bitoffset:11, bitwidth:1}
			}
			OVR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Overrun/Underrun (slave\n              mode)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			ARLO {
				(flecs.doc.Description, flecs.doc.Brief) : {"Arbitration lost"}
				Field : {bitoffset:9, bitwidth:1}
			}
			BERR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Bus error"}
				Field : {bitoffset:8, bitwidth:1}
			}
			TCR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transfer Complete Reload"}
				Field : {bitoffset:7, bitwidth:1}
			}
			TC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transfer Complete (master\n              mode)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			STOPF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Stop detection flag"}
				Field : {bitoffset:5, bitwidth:1}
			}
			NACKF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Not acknowledge received\n              flag"}
				Field : {bitoffset:4, bitwidth:1}
			}
			ADDR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Address matched (slave\n              mode)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			RXNE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Receive data register not empty\n              (receivers)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			TXIS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transmit interrupt status\n              (transmitters)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			TXE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transmit data register empty\n              (transmitters)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		ICR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Interrupt clear register"}
			Register : {address:0}
			ALERTCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alert flag clear"}
				Field : {bitoffset:13, bitwidth:1}
			}
			TIMOUTCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Timeout detection flag\n              clear"}
				Field : {bitoffset:12, bitwidth:1}
			}
			PECCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"PEC Error flag clear"}
				Field : {bitoffset:11, bitwidth:1}
			}
			OVRCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Overrun/Underrun flag\n              clear"}
				Field : {bitoffset:10, bitwidth:1}
			}
			ARLOCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Arbitration lost flag\n              clear"}
				Field : {bitoffset:9, bitwidth:1}
			}
			BERRCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Bus error flag clear"}
				Field : {bitoffset:8, bitwidth:1}
			}
			STOPCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Stop detection flag clear"}
				Field : {bitoffset:5, bitwidth:1}
			}
			NACKCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Not Acknowledge flag clear"}
				Field : {bitoffset:4, bitwidth:1}
			}
			ADDRCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Address Matched flag clear"}
				Field : {bitoffset:3, bitwidth:1}
			}
		}
		PECR {
			(flecs.doc.Description, flecs.doc.Brief) : {"PEC register"}
			Register : {address:0}
			PEC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Packet error checking\n              register"}
				Field : {bitoffset:0, bitwidth:8}
			}
		}
		RXDR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Receive data register"}
			Register : {address:0}
			RXDATA {
				(flecs.doc.Description, flecs.doc.Brief) : {"8-bit receive data"}
				Field : {bitoffset:0, bitwidth:8}
			}
		}
		TXDR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Transmit data register"}
			Register : {address:0}
			TXDATA {
				(flecs.doc.Description, flecs.doc.Brief) : {"8-bit transmit data"}
				Field : {bitoffset:0, bitwidth:8}
			}
		}
	}
	I2C2 {
		(flecs.doc.Description, flecs.doc.Brief) : {"Inter-integrated circuit"}
		CR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"Control register 1"}
			Register : {address:0}
			PE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Peripheral enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
			TXIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"TX Interrupt enable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			RXIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"RX Interrupt enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			ADDRIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Address match interrupt enable (slave\n              only)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			NACKIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Not acknowledge received interrupt\n              enable"}
				Field : {bitoffset:4, bitwidth:1}
			}
			STOPIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"STOP detection Interrupt\n              enable"}
				Field : {bitoffset:5, bitwidth:1}
			}
			TCIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transfer Complete interrupt\n              enable"}
				Field : {bitoffset:6, bitwidth:1}
			}
			ERRIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Error interrupts enable"}
				Field : {bitoffset:7, bitwidth:1}
			}
			DNF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Digital noise filter"}
				Field : {bitoffset:8, bitwidth:4}
			}
			ANFOFF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Analog noise filter OFF"}
				Field : {bitoffset:12, bitwidth:1}
			}
			TXDMAEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA transmission requests\n              enable"}
				Field : {bitoffset:14, bitwidth:1}
			}
			RXDMAEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA reception requests\n              enable"}
				Field : {bitoffset:15, bitwidth:1}
			}
			SBC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Slave byte control"}
				Field : {bitoffset:16, bitwidth:1}
			}
			NOSTRETCH {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clock stretching disable"}
				Field : {bitoffset:17, bitwidth:1}
			}
			WUPEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wakeup from STOP enable"}
				Field : {bitoffset:18, bitwidth:1}
			}
			GCEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"General call enable"}
				Field : {bitoffset:19, bitwidth:1}
			}
			SMBHEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"SMBus Host address enable"}
				Field : {bitoffset:20, bitwidth:1}
			}
			SMBDEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"SMBus Device Default address\n              enable"}
				Field : {bitoffset:21, bitwidth:1}
			}
			ALERTEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"SMBUS alert enable"}
				Field : {bitoffset:22, bitwidth:1}
			}
			PECEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"PEC enable"}
				Field : {bitoffset:23, bitwidth:1}
			}
		}
		CR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"Control register 2"}
			Register : {address:0}
			PECBYTE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Packet error checking byte"}
				Field : {bitoffset:26, bitwidth:1}
			}
			AUTOEND {
				(flecs.doc.Description, flecs.doc.Brief) : {"Automatic end mode (master\n              mode)"}
				Field : {bitoffset:25, bitwidth:1}
			}
			RELOAD {
				(flecs.doc.Description, flecs.doc.Brief) : {"NBYTES reload mode"}
				Field : {bitoffset:24, bitwidth:1}
			}
			NBYTES {
				(flecs.doc.Description, flecs.doc.Brief) : {"Number of bytes"}
				Field : {bitoffset:16, bitwidth:8}
			}
			NACK {
				(flecs.doc.Description, flecs.doc.Brief) : {"NACK generation (slave\n              mode)"}
				Field : {bitoffset:15, bitwidth:1}
			}
			STOP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Stop generation (master\n              mode)"}
				Field : {bitoffset:14, bitwidth:1}
			}
			START {
				(flecs.doc.Description, flecs.doc.Brief) : {"Start generation"}
				Field : {bitoffset:13, bitwidth:1}
			}
			HEAD10R {
				(flecs.doc.Description, flecs.doc.Brief) : {"10-bit address header only read\n              direction (master receiver mode)"}
				Field : {bitoffset:12, bitwidth:1}
			}
			ADD10 {
				(flecs.doc.Description, flecs.doc.Brief) : {"10-bit addressing mode (master\n              mode)"}
				Field : {bitoffset:11, bitwidth:1}
			}
			RD_WRN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transfer direction (master\n              mode)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			SADD {
				(flecs.doc.Description, flecs.doc.Brief) : {"Slave address bit (master\n              mode)"}
				Field : {bitoffset:0, bitwidth:10}
			}
		}
		OAR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"Own address register 1"}
			Register : {address:0}
			OA1_0 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Interface address"}
				Field : {bitoffset:0, bitwidth:1}
			}
			OA1_7_1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Interface address"}
				Field : {bitoffset:1, bitwidth:7}
			}
			OA1_8_9 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Interface address"}
				Field : {bitoffset:8, bitwidth:2}
			}
			OA1MODE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Own Address 1 10-bit mode"}
				Field : {bitoffset:10, bitwidth:1}
			}
			OA1EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Own Address 1 enable"}
				Field : {bitoffset:15, bitwidth:1}
			}
		}
		OAR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"Own address register 2"}
			Register : {address:0}
			OA2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Interface address"}
				Field : {bitoffset:1, bitwidth:7}
			}
			OA2MSK {
				(flecs.doc.Description, flecs.doc.Brief) : {"Own Address 2 masks"}
				Field : {bitoffset:8, bitwidth:3}
			}
			OA2EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Own Address 2 enable"}
				Field : {bitoffset:15, bitwidth:1}
			}
		}
		TIMINGR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Timing register"}
			Register : {address:0}
			SCLL {
				(flecs.doc.Description, flecs.doc.Brief) : {"SCL low period (master\n              mode)"}
				Field : {bitoffset:0, bitwidth:8}
			}
			SCLH {
				(flecs.doc.Description, flecs.doc.Brief) : {"SCL high period (master\n              mode)"}
				Field : {bitoffset:8, bitwidth:8}
			}
			SDADEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Data hold time"}
				Field : {bitoffset:16, bitwidth:4}
			}
			SCLDEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Data setup time"}
				Field : {bitoffset:20, bitwidth:4}
			}
			PRESC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Timing prescaler"}
				Field : {bitoffset:28, bitwidth:4}
			}
		}
		TIMEOUTR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Status register 1"}
			Register : {address:0}
			TIMEOUTA {
				(flecs.doc.Description, flecs.doc.Brief) : {"Bus timeout A"}
				Field : {bitoffset:0, bitwidth:12}
			}
			TIDLE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Idle clock timeout\n              detection"}
				Field : {bitoffset:12, bitwidth:1}
			}
			TIMOUTEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clock timeout enable"}
				Field : {bitoffset:15, bitwidth:1}
			}
			TIMEOUTB {
				(flecs.doc.Description, flecs.doc.Brief) : {"Bus timeout B"}
				Field : {bitoffset:16, bitwidth:12}
			}
			TEXTEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Extended clock timeout\n              enable"}
				Field : {bitoffset:31, bitwidth:1}
			}
		}
		ISR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Interrupt and Status register"}
			Register : {address:0}
			ADDCODE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Address match code (Slave\n              mode)"}
				Field : {bitoffset:17, bitwidth:7}
			}
			DIR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transfer direction (Slave\n              mode)"}
				Field : {bitoffset:16, bitwidth:1}
			}
			BUSY {
				(flecs.doc.Description, flecs.doc.Brief) : {"Bus busy"}
				Field : {bitoffset:15, bitwidth:1}
			}
			ALERT {
				(flecs.doc.Description, flecs.doc.Brief) : {"SMBus alert"}
				Field : {bitoffset:13, bitwidth:1}
			}
			TIMEOUT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Timeout or t_low detection\n              flag"}
				Field : {bitoffset:12, bitwidth:1}
			}
			PECERR {
				(flecs.doc.Description, flecs.doc.Brief) : {"PEC Error in reception"}
				Field : {bitoffset:11, bitwidth:1}
			}
			OVR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Overrun/Underrun (slave\n              mode)"}
				Field : {bitoffset:10, bitwidth:1}
			}
			ARLO {
				(flecs.doc.Description, flecs.doc.Brief) : {"Arbitration lost"}
				Field : {bitoffset:9, bitwidth:1}
			}
			BERR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Bus error"}
				Field : {bitoffset:8, bitwidth:1}
			}
			TCR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transfer Complete Reload"}
				Field : {bitoffset:7, bitwidth:1}
			}
			TC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transfer Complete (master\n              mode)"}
				Field : {bitoffset:6, bitwidth:1}
			}
			STOPF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Stop detection flag"}
				Field : {bitoffset:5, bitwidth:1}
			}
			NACKF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Not acknowledge received\n              flag"}
				Field : {bitoffset:4, bitwidth:1}
			}
			ADDR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Address matched (slave\n              mode)"}
				Field : {bitoffset:3, bitwidth:1}
			}
			RXNE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Receive data register not empty\n              (receivers)"}
				Field : {bitoffset:2, bitwidth:1}
			}
			TXIS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transmit interrupt status\n              (transmitters)"}
				Field : {bitoffset:1, bitwidth:1}
			}
			TXE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Transmit data register empty\n              (transmitters)"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		ICR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Interrupt clear register"}
			Register : {address:0}
			ALERTCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alert flag clear"}
				Field : {bitoffset:13, bitwidth:1}
			}
			TIMOUTCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Timeout detection flag\n              clear"}
				Field : {bitoffset:12, bitwidth:1}
			}
			PECCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"PEC Error flag clear"}
				Field : {bitoffset:11, bitwidth:1}
			}
			OVRCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Overrun/Underrun flag\n              clear"}
				Field : {bitoffset:10, bitwidth:1}
			}
			ARLOCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Arbitration lost flag\n              clear"}
				Field : {bitoffset:9, bitwidth:1}
			}
			BERRCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Bus error flag clear"}
				Field : {bitoffset:8, bitwidth:1}
			}
			STOPCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Stop detection flag clear"}
				Field : {bitoffset:5, bitwidth:1}
			}
			NACKCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Not Acknowledge flag clear"}
				Field : {bitoffset:4, bitwidth:1}
			}
			ADDRCF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Address Matched flag clear"}
				Field : {bitoffset:3, bitwidth:1}
			}
		}
		PECR {
			(flecs.doc.Description, flecs.doc.Brief) : {"PEC register"}
			Register : {address:0}
			PEC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Packet error checking\n              register"}
				Field : {bitoffset:0, bitwidth:8}
			}
		}
		RXDR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Receive data register"}
			Register : {address:0}
			RXDATA {
				(flecs.doc.Description, flecs.doc.Brief) : {"8-bit receive data"}
				Field : {bitoffset:0, bitwidth:8}
			}
		}
		TXDR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Transmit data register"}
			Register : {address:0}
			TXDATA {
				(flecs.doc.Description, flecs.doc.Brief) : {"8-bit transmit data"}
				Field : {bitoffset:0, bitwidth:8}
			}
		}
	}
	RTC {
		(flecs.doc.Description, flecs.doc.Brief) : {"Real-time clock"}
		RTC_TR {
			(flecs.doc.Description, flecs.doc.Brief) : {"RTC time register "}
			Register : {address:0}
			SU {
				(flecs.doc.Description, flecs.doc.Brief) : {"Second units in BCD format"}
				Field : {bitoffset:0, bitwidth:4}
			}
			ST {
				(flecs.doc.Description, flecs.doc.Brief) : {"Second tens in BCD format"}
				Field : {bitoffset:4, bitwidth:3}
			}
			MNU {
				(flecs.doc.Description, flecs.doc.Brief) : {"Minute units in BCD format"}
				Field : {bitoffset:8, bitwidth:4}
			}
			MNT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Minute tens in BCD format"}
				Field : {bitoffset:12, bitwidth:3}
			}
			HU {
				(flecs.doc.Description, flecs.doc.Brief) : {"Hour units in BCD format"}
				Field : {bitoffset:16, bitwidth:4}
			}
			HT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Hour tens in BCD format"}
				Field : {bitoffset:20, bitwidth:2}
			}
			PM {
				(flecs.doc.Description, flecs.doc.Brief) : {"AM/PM notation"}
				Field : {bitoffset:22, bitwidth:1}
			}
		}
		RTC_DR {
			(flecs.doc.Description, flecs.doc.Brief) : {"RTC date register "}
			Register : {address:0}
			DU {
				(flecs.doc.Description, flecs.doc.Brief) : {"Date units in BCD format"}
				Field : {bitoffset:0, bitwidth:4}
			}
			DT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Date tens in BCD format"}
				Field : {bitoffset:4, bitwidth:2}
			}
			MU {
				(flecs.doc.Description, flecs.doc.Brief) : {"Month units in BCD format"}
				Field : {bitoffset:8, bitwidth:4}
			}
			MT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Month tens in BCD format"}
				Field : {bitoffset:12, bitwidth:1}
			}
			WDU {
				(flecs.doc.Description, flecs.doc.Brief) : {"Week day units\n..."}
				Field : {bitoffset:13, bitwidth:3}
			}
			YU {
				(flecs.doc.Description, flecs.doc.Brief) : {"Year units in BCD format"}
				Field : {bitoffset:16, bitwidth:4}
			}
			YT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Year tens in BCD format"}
				Field : {bitoffset:20, bitwidth:4}
			}
		}
		RTC_SSR {
			(flecs.doc.Description, flecs.doc.Brief) : {"RTC sub second register "}
			Register : {address:0}
			SS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Sub second value\nSS[15:0] is the value in the synchronous prescaler counter. The fraction of a second is given by the formula below:\nSecond fraction = (PREDIV_S - SS) / (PREDIV_S + 1)\nNote: SS can be larger than PREDIV_S only after a shift operation. In t"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		RTC_ICSR {
			(flecs.doc.Description, flecs.doc.Brief) : {"RTC initialization control and status register "}
			Register : {address:0}
			ALRAWF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alarm A write flag\nThis bit is set by hardware when alarm A values can be changed, after the ALRAE bit has been set to 0 in RTC_CR.\nIt is cleared by hardware in initialization mode."}
				Field : {bitoffset:0, bitwidth:1}
			}
			ALRBWF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alarm B write flag\nThis bit is set by hardware when alarm B values can be changed, after the ALRBE bit has been set to 0 in RTC_CR.\nIt is cleared by hardware in initialization mode."}
				Field : {bitoffset:1, bitwidth:1}
			}
			WUTWF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wakeup timer write flag\nThis bit is set by hardware when WUT value can be changed, after the WUTE bit has been set to 0 in RTC_CR.\nIt is cleared by hardware in initialization mode."}
				Field : {bitoffset:2, bitwidth:1}
			}
			SHPF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Shift operation pending\nThis flag is set by hardware as soon as a shift operation is initiated by a write to the RTC_SHIFTR register. It is cleared by hardware when the corresponding shift operation has been executed. Writing to the SHPF bit has no effect"}
				Field : {bitoffset:3, bitwidth:1}
			}
			INITS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Initialization status flag\nThis bit is set by hardware when the calendar year field is different from 0 (Backup domain reset state)."}
				Field : {bitoffset:4, bitwidth:1}
			}
			RSF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Registers synchronization flag\nThis bit is set by hardware each time the calendar registers are copied into the shadow registers (RTC_SSR, RTC_TR and RTC_DR). This bit is cleared by hardware in initialization mode, while a shift operation is pending (SHPF"}
				Field : {bitoffset:5, bitwidth:1}
			}
			INITF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Initialization flag\nWhen this bit is set to 1, the RTC is in initialization state, and the time, date and prescaler registers can be updated."}
				Field : {bitoffset:6, bitwidth:1}
			}
			INIT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Initialization mode"}
				Field : {bitoffset:7, bitwidth:1}
			}
			RECALPF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Recalibration pending Flag\nThe RECALPF status flag is automatically set to 1 when software writes to the RTC_CALR register, indicating that the RTC_CALR register is blocked. When the new calibration settings are taken into account, this bit returns to 0. "}
				Field : {bitoffset:16, bitwidth:1}
			}
		}
		RTC_PRER {
			(flecs.doc.Description, flecs.doc.Brief) : {"RTC prescaler register "}
			Register : {address:0}
			PREDIV_S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Synchronous prescaler factor\nThis is the synchronous division factor:\nck_spre frequency = ck_apre frequency/(PREDIV_S+1)"}
				Field : {bitoffset:0, bitwidth:15}
			}
			PREDIV_A {
				(flecs.doc.Description, flecs.doc.Brief) : {"Asynchronous prescaler factor\nThis is the asynchronous division factor:\nck_apre frequency = RTCCLK frequency/(PREDIV_A+1)"}
				Field : {bitoffset:16, bitwidth:7}
			}
		}
		RTC_WUTR {
			(flecs.doc.Description, flecs.doc.Brief) : {"RTC wakeup timer register "}
			Register : {address:0}
			WUT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wakeup auto-reload value bits\nWhen the wakeup timer is enabled (WUTE set to 1), the WUTF flag is set every (WUT[15:0]+1) ck_wut cycles. The ck_wut period is selected through WUCKSEL[2:0] bits of the RTC_CR register.\nWhen WUCKSEL[2] = 1, the wakeup timer b"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		RTC_CR {
			(flecs.doc.Description, flecs.doc.Brief) : {"control register"}
			Register : {address:0}
			WUCKSEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"ck_wut wakeup clock selection\n10x: ck_spre (usually 1Hz) clock is selected\n11x: ck_spre (usually 1Hz) clock is selected and 216is added to the WUT counter value"}
				Field : {bitoffset:0, bitwidth:3}
			}
			TSEDGE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Timestamp event active edge\nTSE must be reset when TSEDGE is changed to avoid unwanted TSF setting."}
				Field : {bitoffset:3, bitwidth:1}
			}
			REFCKON {
				(flecs.doc.Description, flecs.doc.Brief) : {"RTC_REFIN reference clock detection enable (50 or 60Hz)\nNote: PREDIV_S must be 0x00FF."}
				Field : {bitoffset:4, bitwidth:1}
			}
			BYPSHAD {
				(flecs.doc.Description, flecs.doc.Brief) : {"Bypass the shadow registers\nNote: If the frequency of the APB1 clock is less than seven times the frequency of RTCCLK, BYPSHAD must be set to 1."}
				Field : {bitoffset:5, bitwidth:1}
			}
			FMT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Hour format"}
				Field : {bitoffset:6, bitwidth:1}
			}
			ALRAE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alarm A enable"}
				Field : {bitoffset:8, bitwidth:1}
			}
			ALRBE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alarm B enable"}
				Field : {bitoffset:9, bitwidth:1}
			}
			WUTE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wakeup timer enable\nNote: When the wakeup timer is disabled, wait for WUTWF=1 before enabling it again."}
				Field : {bitoffset:10, bitwidth:1}
			}
			TSE {
				(flecs.doc.Description, flecs.doc.Brief) : {"timestamp enable"}
				Field : {bitoffset:11, bitwidth:1}
			}
			ALRAIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alarm A interrupt enable"}
				Field : {bitoffset:12, bitwidth:1}
			}
			ALRBIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alarm B interrupt enable"}
				Field : {bitoffset:13, bitwidth:1}
			}
			WUTIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wakeup timer interrupt enable"}
				Field : {bitoffset:14, bitwidth:1}
			}
			TSIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Timestamp interrupt enable"}
				Field : {bitoffset:15, bitwidth:1}
			}
			ADD1H {
				(flecs.doc.Description, flecs.doc.Brief) : {"Add 1 hour (summer time change)\nWhen this bit is set outside initialization mode, 1 hour is added to the calendar time. This bit is always read as 0."}
				Field : {bitoffset:16, bitwidth:1}
			}
			SUB1H {
				(flecs.doc.Description, flecs.doc.Brief) : {"Subtract 1 hour (winter time change)\nWhen this bit is set outside initialization mode, 1 hour is subtracted to the calendar time if the current hour is not 0. This bit is always read as 0.\nSetting this bit has no effect when current hour is 0."}
				Field : {bitoffset:17, bitwidth:1}
			}
			BKP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Backup\nThis bit can be written by the user to memorize whether the daylight saving time change has been performed or not."}
				Field : {bitoffset:18, bitwidth:1}
			}
			COSEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Calibration output selection\nWhen COE = 1, this bit selects which signal is output on CALIB.\nThese frequencies are valid for RTCCLK at 32.768kHz and prescalers at their default values (PREDIV_A = 127 and PREDIV_S = 255). Refer to ."}
				Field : {bitoffset:19, bitwidth:1}
			}
			POL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output polarity\nThis bit is used to configure the polarity of TAMPALRM output."}
				Field : {bitoffset:20, bitwidth:1}
			}
			OSEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output selection\nThese bits are used to select the flag to be routed to TAMPALRM output."}
				Field : {bitoffset:21, bitwidth:2}
			}
			COE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Calibration output enable\nThis bit enables the CALIB output"}
				Field : {bitoffset:23, bitwidth:1}
			}
			ITSE {
				(flecs.doc.Description, flecs.doc.Brief) : {"timestamp on internal event enable"}
				Field : {bitoffset:24, bitwidth:1}
			}
			TAMPTS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Activate timestamp on tamper detection event\nTAMPTS is valid even if TSE = 0 in the RTC_CR register. Timestamp flag is set after the tamper flags, therefore if TAMPTS and TSIE are set, it is recommended to disable the tamper interrupts in order to avoid s"}
				Field : {bitoffset:25, bitwidth:1}
			}
			TAMPOE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Tamper detection output enable on TAMPALRM"}
				Field : {bitoffset:26, bitwidth:1}
			}
			TAMPALRM_PU {
				(flecs.doc.Description, flecs.doc.Brief) : {"TAMPALRM pull-up enable"}
				Field : {bitoffset:29, bitwidth:1}
			}
			TAMPALRM_TYPE {
				(flecs.doc.Description, flecs.doc.Brief) : {"TAMPALRM output type"}
				Field : {bitoffset:30, bitwidth:1}
			}
			OUT2EN {
				(flecs.doc.Description, flecs.doc.Brief) : {"RTC_OUT2 output enable"}
				Field : {bitoffset:31, bitwidth:1}
			}
		}
		RTC_WPR {
			(flecs.doc.Description, flecs.doc.Brief) : {"write protection register"}
			Register : {address:0}
			KEY {
				(flecs.doc.Description, flecs.doc.Brief) : {"Write protection key\nThis byte is written by software.\nReading this byte always returns 0x00.\nRefer to  for a description of how to unlock RTC register write protection."}
				Field : {bitoffset:0, bitwidth:8}
			}
		}
		RTC_CALR {
			(flecs.doc.Description, flecs.doc.Brief) : {"RTC calibration register "}
			Register : {address:0}
			CALM {
				(flecs.doc.Description, flecs.doc.Brief) : {"Calibration minus\nThe frequency of the calendar is reduced by masking CALM out of 220 RTCCLK pulses (32 seconds if the input frequency is 32768Hz). This decreases the frequency of the calendar with a resolution of 0.9537ppm.\nTo increase the frequency of t"}
				Field : {bitoffset:0, bitwidth:9}
			}
			CALW16 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Use a 16-second calibration cycle period\nWhen CALW16 is set to 1, the 16-second calibration cycle period is selected. This bit must not be set to 1 if CALW8 = 1.\nNote: CALM[0] is stuck at 0 when CALW16 = 1. Refer to calibration."}
				Field : {bitoffset:13, bitwidth:1}
			}
			CALW8 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Use an 8-second calibration cycle period\nWhen CALW8 is set to 1, the 8-second calibration cycle period is selected.\nNote: CALM[1:0] are stuck at 00 when CALW8 = 1. Refer to digital calibration."}
				Field : {bitoffset:14, bitwidth:1}
			}
			CALP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Increase frequency of RTC by 488.5ppm\nThis feature is intended to be used in conjunction with CALM, which lowers the frequency of the calendar with a fine resolution. if the input frequency is 32768Hz, the number of RTCCLK pulses added during a 32-second "}
				Field : {bitoffset:15, bitwidth:1}
			}
		}
		RTC_SHIFTR {
			(flecs.doc.Description, flecs.doc.Brief) : {"RTC shift control register "}
			Register : {address:0}
			SUBFS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Subtract a fraction of a second\nThese bits are write only and is always read as zero. Writing to this bit has no effect when a shift operation is pending (when SHPF = 1, in RTC_ICSR).\nThe value which is written to SUBFS is added to the synchronous prescal"}
				Field : {bitoffset:0, bitwidth:15}
			}
			ADD1S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Add one second\nThis bit is write only and is always read as zero. Writing to this bit has no effect when a shift operation is pending (when SHPF = 1, in RTC_ICSR).\nThis function is intended to be used with SUBFS (see description below) in order to effecti"}
				Field : {bitoffset:31, bitwidth:1}
			}
		}
		RTC_TSTR {
			(flecs.doc.Description, flecs.doc.Brief) : {"RTC timestamp time register "}
			Register : {address:0}
			SU {
				(flecs.doc.Description, flecs.doc.Brief) : {"Second units in BCD format."}
				Field : {bitoffset:0, bitwidth:4}
			}
			ST {
				(flecs.doc.Description, flecs.doc.Brief) : {"Second tens in BCD format."}
				Field : {bitoffset:4, bitwidth:3}
			}
			MNU {
				(flecs.doc.Description, flecs.doc.Brief) : {"Minute units in BCD format."}
				Field : {bitoffset:8, bitwidth:4}
			}
			MNT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Minute tens in BCD format."}
				Field : {bitoffset:12, bitwidth:3}
			}
			HU {
				(flecs.doc.Description, flecs.doc.Brief) : {"Hour units in BCD format."}
				Field : {bitoffset:16, bitwidth:4}
			}
			HT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Hour tens in BCD format."}
				Field : {bitoffset:20, bitwidth:2}
			}
			PM {
				(flecs.doc.Description, flecs.doc.Brief) : {"AM/PM notation"}
				Field : {bitoffset:22, bitwidth:1}
			}
		}
		RTC_TSDR {
			(flecs.doc.Description, flecs.doc.Brief) : {"RTC timestamp date register "}
			Register : {address:0}
			DU {
				(flecs.doc.Description, flecs.doc.Brief) : {"Date units in BCD format"}
				Field : {bitoffset:0, bitwidth:4}
			}
			DT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Date tens in BCD format"}
				Field : {bitoffset:4, bitwidth:2}
			}
			MU {
				(flecs.doc.Description, flecs.doc.Brief) : {"Month units in BCD format"}
				Field : {bitoffset:8, bitwidth:4}
			}
			MT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Month tens in BCD format"}
				Field : {bitoffset:12, bitwidth:1}
			}
			WDU {
				(flecs.doc.Description, flecs.doc.Brief) : {"Week day units"}
				Field : {bitoffset:13, bitwidth:3}
			}
		}
		RTC_TSSSR {
			(flecs.doc.Description, flecs.doc.Brief) : {"RTC timestamp sub second register "}
			Register : {address:0}
			SS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Sub second value\nSS[15:0] is the value of the synchronous prescaler counter when the timestamp event occurred."}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		RTC_ALRMAR {
			(flecs.doc.Description, flecs.doc.Brief) : {"RTC alarm A register "}
			Register : {address:0}
			SU {
				(flecs.doc.Description, flecs.doc.Brief) : {"Second units in BCD format."}
				Field : {bitoffset:0, bitwidth:4}
			}
			ST {
				(flecs.doc.Description, flecs.doc.Brief) : {"Second tens in BCD format."}
				Field : {bitoffset:4, bitwidth:3}
			}
			MSK1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alarm A seconds mask"}
				Field : {bitoffset:7, bitwidth:1}
			}
			MNU {
				(flecs.doc.Description, flecs.doc.Brief) : {"Minute units in BCD format"}
				Field : {bitoffset:8, bitwidth:4}
			}
			MNT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Minute tens in BCD format"}
				Field : {bitoffset:12, bitwidth:3}
			}
			MSK2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alarm A minutes mask"}
				Field : {bitoffset:15, bitwidth:1}
			}
			HU {
				(flecs.doc.Description, flecs.doc.Brief) : {"Hour units in BCD format"}
				Field : {bitoffset:16, bitwidth:4}
			}
			HT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Hour tens in BCD format"}
				Field : {bitoffset:20, bitwidth:2}
			}
			PM {
				(flecs.doc.Description, flecs.doc.Brief) : {"AM/PM notation"}
				Field : {bitoffset:22, bitwidth:1}
			}
			MSK3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alarm A hours mask"}
				Field : {bitoffset:23, bitwidth:1}
			}
			DU {
				(flecs.doc.Description, flecs.doc.Brief) : {"Date units or day in BCD format"}
				Field : {bitoffset:24, bitwidth:4}
			}
			DT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Date tens in BCD format"}
				Field : {bitoffset:28, bitwidth:2}
			}
			WDSEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Week day selection"}
				Field : {bitoffset:30, bitwidth:1}
			}
			MSK4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alarm A date mask"}
				Field : {bitoffset:31, bitwidth:1}
			}
		}
		RTC_ALRMASSR {
			(flecs.doc.Description, flecs.doc.Brief) : {"RTC alarm A sub second register "}
			Register : {address:0}
			SS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Sub seconds value\nThis value is compared with the contents of the synchronous prescaler counter to determine if alarm A is to be activated. Only bits 0 up MASKSS-1 are compared."}
				Field : {bitoffset:0, bitwidth:15}
			}
			MASKSS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Mask the most-significant bits starting at this bit\n2:\tSS[14:2] are don't care in alarm A comparison. Only SS[1:0] are compared.\n3:\tSS[14:3] are don't care in alarm A comparison. Only SS[2:0] are compared.\n...\n12:\tSS[14:12] are don't care in alarm A compa"}
				Field : {bitoffset:24, bitwidth:4}
			}
		}
		RTC_ALRMBR {
			(flecs.doc.Description, flecs.doc.Brief) : {"RTC alarm B register "}
			Register : {address:0}
			SU {
				(flecs.doc.Description, flecs.doc.Brief) : {"Second units in BCD format"}
				Field : {bitoffset:0, bitwidth:4}
			}
			ST {
				(flecs.doc.Description, flecs.doc.Brief) : {"Second tens in BCD format"}
				Field : {bitoffset:4, bitwidth:3}
			}
			MSK1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alarm B seconds mask"}
				Field : {bitoffset:7, bitwidth:1}
			}
			MNU {
				(flecs.doc.Description, flecs.doc.Brief) : {"Minute units in BCD format"}
				Field : {bitoffset:8, bitwidth:4}
			}
			MNT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Minute tens in BCD format"}
				Field : {bitoffset:12, bitwidth:3}
			}
			MSK2 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alarm B minutes mask"}
				Field : {bitoffset:15, bitwidth:1}
			}
			HU {
				(flecs.doc.Description, flecs.doc.Brief) : {"Hour units in BCD format"}
				Field : {bitoffset:16, bitwidth:4}
			}
			HT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Hour tens in BCD format"}
				Field : {bitoffset:20, bitwidth:2}
			}
			PM {
				(flecs.doc.Description, flecs.doc.Brief) : {"AM/PM notation"}
				Field : {bitoffset:22, bitwidth:1}
			}
			MSK3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alarm B hours mask"}
				Field : {bitoffset:23, bitwidth:1}
			}
			DU {
				(flecs.doc.Description, flecs.doc.Brief) : {"Date units or day in BCD format"}
				Field : {bitoffset:24, bitwidth:4}
			}
			DT {
				(flecs.doc.Description, flecs.doc.Brief) : {"Date tens in BCD format"}
				Field : {bitoffset:28, bitwidth:2}
			}
			WDSEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"Week day selection"}
				Field : {bitoffset:30, bitwidth:1}
			}
			MSK4 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alarm B date mask"}
				Field : {bitoffset:31, bitwidth:1}
			}
		}
		RTC_ALRMBSSR {
			(flecs.doc.Description, flecs.doc.Brief) : {"RTC alarm B sub second register "}
			Register : {address:0}
			SS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Sub seconds value\nThis value is compared with the contents of the synchronous prescaler counter to determine if alarm B is to be activated. Only bits 0 up to MASKSS-1 are compared."}
				Field : {bitoffset:0, bitwidth:15}
			}
			MASKSS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Mask the most-significant bits starting at this bit\n...\nThe overflow bits of the synchronous counter (bits 15) is never compared. This bit can be different from 0 only after a shift operation."}
				Field : {bitoffset:24, bitwidth:4}
			}
		}
		RTC_SR {
			(flecs.doc.Description, flecs.doc.Brief) : {"RTC status register "}
			Register : {address:0}
			ALRAF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alarm A flag\nThis flag is set by hardware when the time/date registers (RTC_TR and RTC_DR) match the alarm A register (RTC_ALRMAR)."}
				Field : {bitoffset:0, bitwidth:1}
			}
			ALRBF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alarm B flag\nThis flag is set by hardware when the time/date registers (RTC_TR and RTC_DR) match the alarm B register (RTC_ALRMBR)."}
				Field : {bitoffset:1, bitwidth:1}
			}
			WUTF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wakeup timer flag\nThis flag is set by hardware when the wakeup auto-reload counter reaches 0.\nThis flag must be cleared by software at least 1.5 RTCCLK periods before WUTF is set to 1 again."}
				Field : {bitoffset:2, bitwidth:1}
			}
			TSF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Timestamp flag\nThis flag is set by hardware when a timestamp event occurs.\nIf ITSF flag is set, TSF must be cleared together with ITSF."}
				Field : {bitoffset:3, bitwidth:1}
			}
			TSOVF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Timestamp overflow flag\nThis flag is set by hardware when a timestamp event occurs while TSF is already set.\nIt is recommended to check and then clear TSOVF only after clearing the TSF bit. Otherwise, an overflow might not be noticed if a timestamp event "}
				Field : {bitoffset:4, bitwidth:1}
			}
			ITSF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Internal timestamp flag\nThis flag is set by hardware when a timestamp on the internal event occurs."}
				Field : {bitoffset:5, bitwidth:1}
			}
		}
		RTC_MISR {
			(flecs.doc.Description, flecs.doc.Brief) : {"RTC masked interrupt status register "}
			Register : {address:0}
			ALRAMF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alarm A masked flag\nThis flag is set by hardware when the alarm A interrupt occurs."}
				Field : {bitoffset:0, bitwidth:1}
			}
			ALRBMF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Alarm B masked flag\nThis flag is set by hardware when the alarm B interrupt occurs."}
				Field : {bitoffset:1, bitwidth:1}
			}
			WUTMF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Wakeup timer masked flag\nThis flag is set by hardware when the wakeup timer interrupt occurs.\nThis flag must be cleared by software at least 1.5 RTCCLK periods before WUTF is set to 1 again."}
				Field : {bitoffset:2, bitwidth:1}
			}
			TSMF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Timestamp masked flag\nThis flag is set by hardware when a timestamp interrupt occurs.\nIf ITSF flag is set, TSF must be cleared together with ITSF."}
				Field : {bitoffset:3, bitwidth:1}
			}
			TSOVMF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Timestamp overflow masked flag\nThis flag is set by hardware when a timestamp interrupt occurs while TSMF is already set.\nIt is recommended to check and then clear TSOVF only after clearing the TSF bit. Otherwise, an overflow might not be noticed if a time"}
				Field : {bitoffset:4, bitwidth:1}
			}
			ITSMF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Internal timestamp masked flag\nThis flag is set by hardware when a timestamp on the internal event occurs and timestampinterrupt is raised."}
				Field : {bitoffset:5, bitwidth:1}
			}
		}
		RTC_SCR {
			(flecs.doc.Description, flecs.doc.Brief) : {"RTC status clear register "}
			Register : {address:0}
			CALRAF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clear alarm A flag\nWriting 1 in this bit clears the ALRAF bit in the RTC_SR register."}
				Field : {bitoffset:0, bitwidth:1}
			}
			CALRBF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clear alarm B flag\nWriting 1 in this bit clears the ALRBF bit in the RTC_SR register."}
				Field : {bitoffset:1, bitwidth:1}
			}
			CWUTF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clear wakeup timer flag\nWriting 1 in this bit clears the WUTF bit in the RTC_SR register."}
				Field : {bitoffset:2, bitwidth:1}
			}
			CTSF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clear timestamp flag\nWriting 1 in this bit clears the TSOVF bit in the RTC_SR register.\nIf ITSF flag is set, TSF must be cleared together with ITSF by setting CRSF and CITSF."}
				Field : {bitoffset:3, bitwidth:1}
			}
			CTSOVF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clear timestamp overflow flag\nWriting 1 in this bit clears the TSOVF bit in the RTC_SR register.\nIt is recommended to check and then clear TSOVF only after clearing the TSF bit. Otherwise, an overflow might not be noticed if a timestamp event occurs immed"}
				Field : {bitoffset:4, bitwidth:1}
			}
			CITSF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clear internal timestamp flag\nWriting 1 in this bit clears the ITSF bit in the RTC_SR register."}
				Field : {bitoffset:5, bitwidth:1}
			}
		}
	}
	TIM14 {
		(flecs.doc.Description, flecs.doc.Brief) : {"General purpose timers"}
		CR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"control register 1"}
			Register : {address:0}
			UIFREMAP {
				(flecs.doc.Description, flecs.doc.Brief) : {"UIF status bit remapping"}
				Field : {bitoffset:11, bitwidth:1}
			}
			CKD {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clock division"}
				Field : {bitoffset:8, bitwidth:2}
			}
			ARPE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Auto-reload preload enable"}
				Field : {bitoffset:7, bitwidth:1}
			}
			OPM {
				(flecs.doc.Description, flecs.doc.Brief) : {"One-pulse mode"}
				Field : {bitoffset:3, bitwidth:1}
			}
			URS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update request source"}
				Field : {bitoffset:2, bitwidth:1}
			}
			UDIS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update disable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			CEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Counter enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		DIER {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA/Interrupt enable register"}
			Register : {address:0}
			CC1IE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 interrupt\n              enable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			UIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update interrupt enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		SR {
			(flecs.doc.Description, flecs.doc.Brief) : {"status register"}
			Register : {address:0}
			CC1OF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 overcapture\n              flag"}
				Field : {bitoffset:9, bitwidth:1}
			}
			CC1IF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare 1 interrupt\n              flag"}
				Field : {bitoffset:1, bitwidth:1}
			}
			UIF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update interrupt flag"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		EGR {
			(flecs.doc.Description, flecs.doc.Brief) : {"event generation register"}
			Register : {address:0}
			CC1G {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare 1\n              generation"}
				Field : {bitoffset:1, bitwidth:1}
			}
			UG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update generation"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		CCMR1_Output {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare mode register 1 (output\n          mode)"}
			Register : {address:0}
			CC1S {
				(flecs.doc.Description, flecs.doc.Brief) : {"CC1S"}
				Field : {bitoffset:0, bitwidth:2}
			}
			OC1FE {
				(flecs.doc.Description, flecs.doc.Brief) : {"OC1FE"}
				Field : {bitoffset:2, bitwidth:1}
			}
			OC1PE {
				(flecs.doc.Description, flecs.doc.Brief) : {"OC1PE"}
				Field : {bitoffset:3, bitwidth:1}
			}
			OC1M {
				(flecs.doc.Description, flecs.doc.Brief) : {"OC1M"}
				Field : {bitoffset:4, bitwidth:3}
			}
			OC1CE {
				(flecs.doc.Description, flecs.doc.Brief) : {"OC1CE"}
				Field : {bitoffset:7, bitwidth:1}
			}
			OC1M_3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 1 mode - bit\n              3"}
				Field : {bitoffset:16, bitwidth:1}
			}
		}
		CCMR1_Input {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare mode register 1 (input\n          mode)"}
			Register : {address:0}
			IC1F {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input capture 1 filter"}
				Field : {bitoffset:4, bitwidth:4}
			}
			ICPCS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input capture 1 prescaler"}
				Field : {bitoffset:2, bitwidth:2}
			}
			CC1S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1\n              selection"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		CCER {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare enable\n          register"}
			Register : {address:0}
			CC1NP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 output\n              Polarity"}
				Field : {bitoffset:3, bitwidth:1}
			}
			CC1P {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 output\n              Polarity"}
				Field : {bitoffset:1, bitwidth:1}
			}
			CC1E {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 output\n              enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		CNT {
			(flecs.doc.Description, flecs.doc.Brief) : {"counter"}
			Register : {address:0}
			CNT {
				(flecs.doc.Description, flecs.doc.Brief) : {"low counter value"}
				Field : {bitoffset:0, bitwidth:16}
			}
			UIFCPY {
				(flecs.doc.Description, flecs.doc.Brief) : {"UIF Copy"}
				Field : {bitoffset:31, bitwidth:1}
			}
		}
		PSC {
			(flecs.doc.Description, flecs.doc.Brief) : {"prescaler"}
			Register : {address:0}
			PSC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Prescaler value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		ARR {
			(flecs.doc.Description, flecs.doc.Brief) : {"auto-reload register"}
			Register : {address:0}
			ARR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Low Auto-reload value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		CCR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare register 1"}
			Register : {address:0}
			CCR1 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Low Capture/Compare 1\n              value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		TISEL {
			(flecs.doc.Description, flecs.doc.Brief) : {"TIM timer input selection\n          register"}
			Register : {address:0}
			TISEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"TI1[0] to TI1[15] input\n              selection"}
				Field : {bitoffset:0, bitwidth:4}
			}
		}
	}
	TIM2 {
		(flecs.doc.Description, flecs.doc.Brief) : {"General-purpose-timers"}
		CR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"control register 1"}
			Register : {address:0}
			UIFREMAP {
				(flecs.doc.Description, flecs.doc.Brief) : {"UIF status bit remapping"}
				Field : {bitoffset:11, bitwidth:1}
			}
			CKD {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clock division"}
				Field : {bitoffset:8, bitwidth:2}
			}
			ARPE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Auto-reload preload enable"}
				Field : {bitoffset:7, bitwidth:1}
			}
			CMS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Center-aligned mode\n              selection"}
				Field : {bitoffset:5, bitwidth:2}
			}
			DIR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Direction"}
				Field : {bitoffset:4, bitwidth:1}
			}
			OPM {
				(flecs.doc.Description, flecs.doc.Brief) : {"One-pulse mode"}
				Field : {bitoffset:3, bitwidth:1}
			}
			URS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update request source"}
				Field : {bitoffset:2, bitwidth:1}
			}
			UDIS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update disable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			CEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Counter enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		CR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"control register 2"}
			Register : {address:0}
			TI1S {
				(flecs.doc.Description, flecs.doc.Brief) : {"TI1 selection"}
				Field : {bitoffset:7, bitwidth:1}
			}
			MMS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Master mode selection"}
				Field : {bitoffset:4, bitwidth:3}
			}
			CCDS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare DMA\n              selection"}
				Field : {bitoffset:3, bitwidth:1}
			}
		}
		SMCR {
			(flecs.doc.Description, flecs.doc.Brief) : {"slave mode control register"}
			Register : {address:0}
			TS_4_3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Trigger selection"}
				Field : {bitoffset:20, bitwidth:2}
			}
			SMS_3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Slave mode selection - bit\n              3"}
				Field : {bitoffset:16, bitwidth:1}
			}
			ETP {
				(flecs.doc.Description, flecs.doc.Brief) : {"External trigger polarity"}
				Field : {bitoffset:15, bitwidth:1}
			}
			ECE {
				(flecs.doc.Description, flecs.doc.Brief) : {"External clock enable"}
				Field : {bitoffset:14, bitwidth:1}
			}
			ETPS {
				(flecs.doc.Description, flecs.doc.Brief) : {"External trigger prescaler"}
				Field : {bitoffset:12, bitwidth:2}
			}
			ETF {
				(flecs.doc.Description, flecs.doc.Brief) : {"External trigger filter"}
				Field : {bitoffset:8, bitwidth:4}
			}
			MSM {
				(flecs.doc.Description, flecs.doc.Brief) : {"Master/Slave mode"}
				Field : {bitoffset:7, bitwidth:1}
			}
			TS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Trigger selection"}
				Field : {bitoffset:4, bitwidth:3}
			}
			OCCS {
				(flecs.doc.Description, flecs.doc.Brief) : {"OCREF clear selection"}
				Field : {bitoffset:3, bitwidth:1}
			}
			SMS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Slave mode selection"}
				Field : {bitoffset:0, bitwidth:3}
			}
		}
		DIER {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA/Interrupt enable register"}
			Register : {address:0}
			TDE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Trigger DMA request enable"}
				Field : {bitoffset:14, bitwidth:1}
			}
			CC4DE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 4 DMA request\n              enable"}
				Field : {bitoffset:12, bitwidth:1}
			}
			CC3DE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3 DMA request\n              enable"}
				Field : {bitoffset:11, bitwidth:1}
			}
			CC2DE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 2 DMA request\n              enable"}
				Field : {bitoffset:10, bitwidth:1}
			}
			CC1DE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 DMA request\n              enable"}
				Field : {bitoffset:9, bitwidth:1}
			}
			UDE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update DMA request enable"}
				Field : {bitoffset:8, bitwidth:1}
			}
			TIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Trigger interrupt enable"}
				Field : {bitoffset:6, bitwidth:1}
			}
			CC4IE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 4 interrupt\n              enable"}
				Field : {bitoffset:4, bitwidth:1}
			}
			CC3IE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3 interrupt\n              enable"}
				Field : {bitoffset:3, bitwidth:1}
			}
			CC2IE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 2 interrupt\n              enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CC1IE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 interrupt\n              enable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			UIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update interrupt enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		SR {
			(flecs.doc.Description, flecs.doc.Brief) : {"status register"}
			Register : {address:0}
			CC4OF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 4 overcapture\n              flag"}
				Field : {bitoffset:12, bitwidth:1}
			}
			CC3OF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3 overcapture\n              flag"}
				Field : {bitoffset:11, bitwidth:1}
			}
			CC2OF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare 2 overcapture\n              flag"}
				Field : {bitoffset:10, bitwidth:1}
			}
			CC1OF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 overcapture\n              flag"}
				Field : {bitoffset:9, bitwidth:1}
			}
			TIF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Trigger interrupt flag"}
				Field : {bitoffset:6, bitwidth:1}
			}
			CC4IF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 4 interrupt\n              flag"}
				Field : {bitoffset:4, bitwidth:1}
			}
			CC3IF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3 interrupt\n              flag"}
				Field : {bitoffset:3, bitwidth:1}
			}
			CC2IF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 2 interrupt\n              flag"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CC1IF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare 1 interrupt\n              flag"}
				Field : {bitoffset:1, bitwidth:1}
			}
			UIF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update interrupt flag"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		EGR {
			(flecs.doc.Description, flecs.doc.Brief) : {"event generation register"}
			Register : {address:0}
			TG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Trigger generation"}
				Field : {bitoffset:6, bitwidth:1}
			}
			CC4G {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare 4\n              generation"}
				Field : {bitoffset:4, bitwidth:1}
			}
			CC3G {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare 3\n              generation"}
				Field : {bitoffset:3, bitwidth:1}
			}
			CC2G {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare 2\n              generation"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CC1G {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare 1\n              generation"}
				Field : {bitoffset:1, bitwidth:1}
			}
			UG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update generation"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		CCMR1_Output {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare mode register 1 (output\n          mode)"}
			Register : {address:0}
			OC2M_3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 2 mode - bit\n              3"}
				Field : {bitoffset:24, bitwidth:1}
			}
			OC1M_3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 1 mode - bit\n              3"}
				Field : {bitoffset:16, bitwidth:1}
			}
			OC2CE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 2 clear\n              enable"}
				Field : {bitoffset:15, bitwidth:1}
			}
			OC2M {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 2 mode"}
				Field : {bitoffset:12, bitwidth:3}
			}
			OC2PE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 2 preload\n              enable"}
				Field : {bitoffset:11, bitwidth:1}
			}
			OC2FE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 2 fast\n              enable"}
				Field : {bitoffset:10, bitwidth:1}
			}
			CC2S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 2\n              selection"}
				Field : {bitoffset:8, bitwidth:2}
			}
			OC1CE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 1 clear\n              enable"}
				Field : {bitoffset:7, bitwidth:1}
			}
			OC1M {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 1 mode"}
				Field : {bitoffset:4, bitwidth:3}
			}
			OC1PE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 1 preload\n              enable"}
				Field : {bitoffset:3, bitwidth:1}
			}
			OC1FE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 1 fast\n              enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CC1S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1\n              selection"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		CCMR1_Input {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare mode register 1 (input\n          mode)"}
			Register : {address:0}
			IC2F {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input capture 2 filter"}
				Field : {bitoffset:12, bitwidth:4}
			}
			IC2PSC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input capture 2 prescaler"}
				Field : {bitoffset:10, bitwidth:2}
			}
			CC2S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare 2\n              selection"}
				Field : {bitoffset:8, bitwidth:2}
			}
			IC1F {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input capture 1 filter"}
				Field : {bitoffset:4, bitwidth:4}
			}
			IC1PSC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input capture 1 prescaler"}
				Field : {bitoffset:2, bitwidth:2}
			}
			CC1S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1\n              selection"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		CCMR2_Output {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare mode register 2 (output\n          mode)"}
			Register : {address:0}
			OC4M_3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 4 mode - bit\n              3"}
				Field : {bitoffset:24, bitwidth:1}
			}
			OC3M_3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 3 mode - bit\n              3"}
				Field : {bitoffset:16, bitwidth:1}
			}
			OC4CE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 4 clear\n              enable"}
				Field : {bitoffset:15, bitwidth:1}
			}
			OC4M {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 4 mode"}
				Field : {bitoffset:12, bitwidth:3}
			}
			OC4PE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 4 preload\n              enable"}
				Field : {bitoffset:11, bitwidth:1}
			}
			OC4FE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 4 fast\n              enable"}
				Field : {bitoffset:10, bitwidth:1}
			}
			CC4S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 4\n              selection"}
				Field : {bitoffset:8, bitwidth:2}
			}
			OC3CE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 3 clear\n              enable"}
				Field : {bitoffset:7, bitwidth:1}
			}
			OC3M {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 3 mode"}
				Field : {bitoffset:4, bitwidth:3}
			}
			OC3PE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 3 preload\n              enable"}
				Field : {bitoffset:3, bitwidth:1}
			}
			OC3FE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 3 fast\n              enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CC3S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3\n              selection"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		CCMR2_Input {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare mode register 2 (input\n          mode)"}
			Register : {address:0}
			IC4F {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input capture 4 filter"}
				Field : {bitoffset:12, bitwidth:4}
			}
			IC4PSC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input capture 4 prescaler"}
				Field : {bitoffset:10, bitwidth:2}
			}
			CC4S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 4\n              selection"}
				Field : {bitoffset:8, bitwidth:2}
			}
			IC3F {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input capture 3 filter"}
				Field : {bitoffset:4, bitwidth:4}
			}
			IC3PSC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input capture 3 prescaler"}
				Field : {bitoffset:2, bitwidth:2}
			}
			CC3S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3\n              selection"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		CCER {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare enable\n          register"}
			Register : {address:0}
			CC4NP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 4 output\n              Polarity"}
				Field : {bitoffset:15, bitwidth:1}
			}
			CC4P {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3 output\n              Polarity"}
				Field : {bitoffset:13, bitwidth:1}
			}
			CC4E {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 4 output\n              enable"}
				Field : {bitoffset:12, bitwidth:1}
			}
			CC3NP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3 output\n              Polarity"}
				Field : {bitoffset:11, bitwidth:1}
			}
			CC3P {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3 output\n              Polarity"}
				Field : {bitoffset:9, bitwidth:1}
			}
			CC3E {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3 output\n              enable"}
				Field : {bitoffset:8, bitwidth:1}
			}
			CC2NP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 2 output\n              Polarity"}
				Field : {bitoffset:7, bitwidth:1}
			}
			CC2P {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 2 output\n              Polarity"}
				Field : {bitoffset:5, bitwidth:1}
			}
			CC2E {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 2 output\n              enable"}
				Field : {bitoffset:4, bitwidth:1}
			}
			CC1NP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 output\n              Polarity"}
				Field : {bitoffset:3, bitwidth:1}
			}
			CC1P {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 output\n              Polarity"}
				Field : {bitoffset:1, bitwidth:1}
			}
			CC1E {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 output\n              enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		CNT {
			(flecs.doc.Description, flecs.doc.Brief) : {"counter"}
			Register : {address:0}
			CNT_H {
				(flecs.doc.Description, flecs.doc.Brief) : {"High counter value (TIM2\n              only)"}
				Field : {bitoffset:16, bitwidth:16}
			}
			CNT_L {
				(flecs.doc.Description, flecs.doc.Brief) : {"Low counter value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		PSC {
			(flecs.doc.Description, flecs.doc.Brief) : {"prescaler"}
			Register : {address:0}
			PSC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Prescaler value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		ARR {
			(flecs.doc.Description, flecs.doc.Brief) : {"auto-reload register"}
			Register : {address:0}
			ARR_H {
				(flecs.doc.Description, flecs.doc.Brief) : {"High Auto-reload value (TIM2\n              only)"}
				Field : {bitoffset:16, bitwidth:16}
			}
			ARR_L {
				(flecs.doc.Description, flecs.doc.Brief) : {"Low Auto-reload value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		CCR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare register 1"}
			Register : {address:0}
			CCR1_H {
				(flecs.doc.Description, flecs.doc.Brief) : {"High Capture/Compare 1 value (TIM2\n              only)"}
				Field : {bitoffset:16, bitwidth:16}
			}
			CCR1_L {
				(flecs.doc.Description, flecs.doc.Brief) : {"Low Capture/Compare 1\n              value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		CCR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare register 2"}
			Register : {address:0}
			CCR2_H {
				(flecs.doc.Description, flecs.doc.Brief) : {"High Capture/Compare 2 value (TIM2\n              only)"}
				Field : {bitoffset:16, bitwidth:16}
			}
			CCR2_L {
				(flecs.doc.Description, flecs.doc.Brief) : {"Low Capture/Compare 2\n              value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		CCR3 {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare register 3"}
			Register : {address:0}
			CCR3_H {
				(flecs.doc.Description, flecs.doc.Brief) : {"High Capture/Compare value (TIM2\n              only)"}
				Field : {bitoffset:16, bitwidth:16}
			}
			CCR3_L {
				(flecs.doc.Description, flecs.doc.Brief) : {"Low Capture/Compare value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		CCR4 {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare register 4"}
			Register : {address:0}
			CCR4_H {
				(flecs.doc.Description, flecs.doc.Brief) : {"High Capture/Compare value (TIM2\n              only)"}
				Field : {bitoffset:16, bitwidth:16}
			}
			CCR4_L {
				(flecs.doc.Description, flecs.doc.Brief) : {"Low Capture/Compare value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		DCR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA control register"}
			Register : {address:0}
			DBL {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA burst length"}
				Field : {bitoffset:8, bitwidth:5}
			}
			DBA {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA base address"}
				Field : {bitoffset:0, bitwidth:5}
			}
		}
		DMAR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA address for full transfer"}
			Register : {address:0}
			DMAB {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA register for burst\n              accesses"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		OR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"TIM option register"}
			Register : {address:0}
			IOCREF_CLR {
				(flecs.doc.Description, flecs.doc.Brief) : {"IOCREF_CLR"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		AF1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"TIM alternate function option register\n          1"}
			Register : {address:0}
			ETRSEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"External trigger source\n              selection"}
				Field : {bitoffset:14, bitwidth:4}
			}
		}
		TISEL {
			(flecs.doc.Description, flecs.doc.Brief) : {"TIM alternate function option register\n          1"}
			Register : {address:0}
			TI1SEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"TI1SEL"}
				Field : {bitoffset:0, bitwidth:4}
			}
			TI2SEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"TI2SEL"}
				Field : {bitoffset:8, bitwidth:4}
			}
		}
	}
	TIM3 {
		(flecs.doc.Description, flecs.doc.Brief) : {"General-purpose-timers"}
		CR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"control register 1"}
			Register : {address:0}
			UIFREMAP {
				(flecs.doc.Description, flecs.doc.Brief) : {"UIF status bit remapping"}
				Field : {bitoffset:11, bitwidth:1}
			}
			CKD {
				(flecs.doc.Description, flecs.doc.Brief) : {"Clock division"}
				Field : {bitoffset:8, bitwidth:2}
			}
			ARPE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Auto-reload preload enable"}
				Field : {bitoffset:7, bitwidth:1}
			}
			CMS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Center-aligned mode\n              selection"}
				Field : {bitoffset:5, bitwidth:2}
			}
			DIR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Direction"}
				Field : {bitoffset:4, bitwidth:1}
			}
			OPM {
				(flecs.doc.Description, flecs.doc.Brief) : {"One-pulse mode"}
				Field : {bitoffset:3, bitwidth:1}
			}
			URS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update request source"}
				Field : {bitoffset:2, bitwidth:1}
			}
			UDIS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update disable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			CEN {
				(flecs.doc.Description, flecs.doc.Brief) : {"Counter enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		CR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"control register 2"}
			Register : {address:0}
			TI1S {
				(flecs.doc.Description, flecs.doc.Brief) : {"TI1 selection"}
				Field : {bitoffset:7, bitwidth:1}
			}
			MMS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Master mode selection"}
				Field : {bitoffset:4, bitwidth:3}
			}
			CCDS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare DMA\n              selection"}
				Field : {bitoffset:3, bitwidth:1}
			}
		}
		SMCR {
			(flecs.doc.Description, flecs.doc.Brief) : {"slave mode control register"}
			Register : {address:0}
			TS_4_3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Trigger selection"}
				Field : {bitoffset:20, bitwidth:2}
			}
			SMS_3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Slave mode selection - bit\n              3"}
				Field : {bitoffset:16, bitwidth:1}
			}
			ETP {
				(flecs.doc.Description, flecs.doc.Brief) : {"External trigger polarity"}
				Field : {bitoffset:15, bitwidth:1}
			}
			ECE {
				(flecs.doc.Description, flecs.doc.Brief) : {"External clock enable"}
				Field : {bitoffset:14, bitwidth:1}
			}
			ETPS {
				(flecs.doc.Description, flecs.doc.Brief) : {"External trigger prescaler"}
				Field : {bitoffset:12, bitwidth:2}
			}
			ETF {
				(flecs.doc.Description, flecs.doc.Brief) : {"External trigger filter"}
				Field : {bitoffset:8, bitwidth:4}
			}
			MSM {
				(flecs.doc.Description, flecs.doc.Brief) : {"Master/Slave mode"}
				Field : {bitoffset:7, bitwidth:1}
			}
			TS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Trigger selection"}
				Field : {bitoffset:4, bitwidth:3}
			}
			OCCS {
				(flecs.doc.Description, flecs.doc.Brief) : {"OCREF clear selection"}
				Field : {bitoffset:3, bitwidth:1}
			}
			SMS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Slave mode selection"}
				Field : {bitoffset:0, bitwidth:3}
			}
		}
		DIER {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA/Interrupt enable register"}
			Register : {address:0}
			TDE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Trigger DMA request enable"}
				Field : {bitoffset:14, bitwidth:1}
			}
			CC4DE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 4 DMA request\n              enable"}
				Field : {bitoffset:12, bitwidth:1}
			}
			CC3DE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3 DMA request\n              enable"}
				Field : {bitoffset:11, bitwidth:1}
			}
			CC2DE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 2 DMA request\n              enable"}
				Field : {bitoffset:10, bitwidth:1}
			}
			CC1DE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 DMA request\n              enable"}
				Field : {bitoffset:9, bitwidth:1}
			}
			UDE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update DMA request enable"}
				Field : {bitoffset:8, bitwidth:1}
			}
			TIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Trigger interrupt enable"}
				Field : {bitoffset:6, bitwidth:1}
			}
			CC4IE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 4 interrupt\n              enable"}
				Field : {bitoffset:4, bitwidth:1}
			}
			CC3IE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3 interrupt\n              enable"}
				Field : {bitoffset:3, bitwidth:1}
			}
			CC2IE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 2 interrupt\n              enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CC1IE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 interrupt\n              enable"}
				Field : {bitoffset:1, bitwidth:1}
			}
			UIE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update interrupt enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		SR {
			(flecs.doc.Description, flecs.doc.Brief) : {"status register"}
			Register : {address:0}
			CC4OF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 4 overcapture\n              flag"}
				Field : {bitoffset:12, bitwidth:1}
			}
			CC3OF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3 overcapture\n              flag"}
				Field : {bitoffset:11, bitwidth:1}
			}
			CC2OF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare 2 overcapture\n              flag"}
				Field : {bitoffset:10, bitwidth:1}
			}
			CC1OF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 overcapture\n              flag"}
				Field : {bitoffset:9, bitwidth:1}
			}
			TIF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Trigger interrupt flag"}
				Field : {bitoffset:6, bitwidth:1}
			}
			CC4IF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 4 interrupt\n              flag"}
				Field : {bitoffset:4, bitwidth:1}
			}
			CC3IF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3 interrupt\n              flag"}
				Field : {bitoffset:3, bitwidth:1}
			}
			CC2IF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 2 interrupt\n              flag"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CC1IF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare 1 interrupt\n              flag"}
				Field : {bitoffset:1, bitwidth:1}
			}
			UIF {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update interrupt flag"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		EGR {
			(flecs.doc.Description, flecs.doc.Brief) : {"event generation register"}
			Register : {address:0}
			TG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Trigger generation"}
				Field : {bitoffset:6, bitwidth:1}
			}
			CC4G {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare 4\n              generation"}
				Field : {bitoffset:4, bitwidth:1}
			}
			CC3G {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare 3\n              generation"}
				Field : {bitoffset:3, bitwidth:1}
			}
			CC2G {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare 2\n              generation"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CC1G {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare 1\n              generation"}
				Field : {bitoffset:1, bitwidth:1}
			}
			UG {
				(flecs.doc.Description, flecs.doc.Brief) : {"Update generation"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		CCMR1_Output {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare mode register 1 (output\n          mode)"}
			Register : {address:0}
			OC2M_3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 2 mode - bit\n              3"}
				Field : {bitoffset:24, bitwidth:1}
			}
			OC1M_3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 1 mode - bit\n              3"}
				Field : {bitoffset:16, bitwidth:1}
			}
			OC2CE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 2 clear\n              enable"}
				Field : {bitoffset:15, bitwidth:1}
			}
			OC2M {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 2 mode"}
				Field : {bitoffset:12, bitwidth:3}
			}
			OC2PE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 2 preload\n              enable"}
				Field : {bitoffset:11, bitwidth:1}
			}
			OC2FE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 2 fast\n              enable"}
				Field : {bitoffset:10, bitwidth:1}
			}
			CC2S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 2\n              selection"}
				Field : {bitoffset:8, bitwidth:2}
			}
			OC1CE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 1 clear\n              enable"}
				Field : {bitoffset:7, bitwidth:1}
			}
			OC1M {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 1 mode"}
				Field : {bitoffset:4, bitwidth:3}
			}
			OC1PE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 1 preload\n              enable"}
				Field : {bitoffset:3, bitwidth:1}
			}
			OC1FE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 1 fast\n              enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CC1S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1\n              selection"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		CCMR1_Input {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare mode register 1 (input\n          mode)"}
			Register : {address:0}
			IC2F {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input capture 2 filter"}
				Field : {bitoffset:12, bitwidth:4}
			}
			IC2PSC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input capture 2 prescaler"}
				Field : {bitoffset:10, bitwidth:2}
			}
			CC2S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/compare 2\n              selection"}
				Field : {bitoffset:8, bitwidth:2}
			}
			IC1F {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input capture 1 filter"}
				Field : {bitoffset:4, bitwidth:4}
			}
			IC1PSC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input capture 1 prescaler"}
				Field : {bitoffset:2, bitwidth:2}
			}
			CC1S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1\n              selection"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		CCMR2_Output {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare mode register 2 (output\n          mode)"}
			Register : {address:0}
			OC4M_3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 4 mode - bit\n              3"}
				Field : {bitoffset:24, bitwidth:1}
			}
			OC3M_3 {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output Compare 3 mode - bit\n              3"}
				Field : {bitoffset:16, bitwidth:1}
			}
			OC4CE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 4 clear\n              enable"}
				Field : {bitoffset:15, bitwidth:1}
			}
			OC4M {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 4 mode"}
				Field : {bitoffset:12, bitwidth:3}
			}
			OC4PE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 4 preload\n              enable"}
				Field : {bitoffset:11, bitwidth:1}
			}
			OC4FE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 4 fast\n              enable"}
				Field : {bitoffset:10, bitwidth:1}
			}
			CC4S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 4\n              selection"}
				Field : {bitoffset:8, bitwidth:2}
			}
			OC3CE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 3 clear\n              enable"}
				Field : {bitoffset:7, bitwidth:1}
			}
			OC3M {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 3 mode"}
				Field : {bitoffset:4, bitwidth:3}
			}
			OC3PE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 3 preload\n              enable"}
				Field : {bitoffset:3, bitwidth:1}
			}
			OC3FE {
				(flecs.doc.Description, flecs.doc.Brief) : {"Output compare 3 fast\n              enable"}
				Field : {bitoffset:2, bitwidth:1}
			}
			CC3S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3\n              selection"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		CCMR2_Input {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare mode register 2 (input\n          mode)"}
			Register : {address:0}
			IC4F {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input capture 4 filter"}
				Field : {bitoffset:12, bitwidth:4}
			}
			IC4PSC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input capture 4 prescaler"}
				Field : {bitoffset:10, bitwidth:2}
			}
			CC4S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 4\n              selection"}
				Field : {bitoffset:8, bitwidth:2}
			}
			IC3F {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input capture 3 filter"}
				Field : {bitoffset:4, bitwidth:4}
			}
			IC3PSC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Input capture 3 prescaler"}
				Field : {bitoffset:2, bitwidth:2}
			}
			CC3S {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3\n              selection"}
				Field : {bitoffset:0, bitwidth:2}
			}
		}
		CCER {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare enable\n          register"}
			Register : {address:0}
			CC4NP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 4 output\n              Polarity"}
				Field : {bitoffset:15, bitwidth:1}
			}
			CC4P {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3 output\n              Polarity"}
				Field : {bitoffset:13, bitwidth:1}
			}
			CC4E {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 4 output\n              enable"}
				Field : {bitoffset:12, bitwidth:1}
			}
			CC3NP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3 output\n              Polarity"}
				Field : {bitoffset:11, bitwidth:1}
			}
			CC3P {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3 output\n              Polarity"}
				Field : {bitoffset:9, bitwidth:1}
			}
			CC3E {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 3 output\n              enable"}
				Field : {bitoffset:8, bitwidth:1}
			}
			CC2NP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 2 output\n              Polarity"}
				Field : {bitoffset:7, bitwidth:1}
			}
			CC2P {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 2 output\n              Polarity"}
				Field : {bitoffset:5, bitwidth:1}
			}
			CC2E {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 2 output\n              enable"}
				Field : {bitoffset:4, bitwidth:1}
			}
			CC1NP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 output\n              Polarity"}
				Field : {bitoffset:3, bitwidth:1}
			}
			CC1P {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 output\n              Polarity"}
				Field : {bitoffset:1, bitwidth:1}
			}
			CC1E {
				(flecs.doc.Description, flecs.doc.Brief) : {"Capture/Compare 1 output\n              enable"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		CNT {
			(flecs.doc.Description, flecs.doc.Brief) : {"counter"}
			Register : {address:0}
			CNT_H {
				(flecs.doc.Description, flecs.doc.Brief) : {"High counter value (TIM2\n              only)"}
				Field : {bitoffset:16, bitwidth:16}
			}
			CNT_L {
				(flecs.doc.Description, flecs.doc.Brief) : {"Low counter value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		PSC {
			(flecs.doc.Description, flecs.doc.Brief) : {"prescaler"}
			Register : {address:0}
			PSC {
				(flecs.doc.Description, flecs.doc.Brief) : {"Prescaler value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		ARR {
			(flecs.doc.Description, flecs.doc.Brief) : {"auto-reload register"}
			Register : {address:0}
			ARR_H {
				(flecs.doc.Description, flecs.doc.Brief) : {"High Auto-reload value (TIM2\n              only)"}
				Field : {bitoffset:16, bitwidth:16}
			}
			ARR_L {
				(flecs.doc.Description, flecs.doc.Brief) : {"Low Auto-reload value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		CCR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare register 1"}
			Register : {address:0}
			CCR1_H {
				(flecs.doc.Description, flecs.doc.Brief) : {"High Capture/Compare 1 value (TIM2\n              only)"}
				Field : {bitoffset:16, bitwidth:16}
			}
			CCR1_L {
				(flecs.doc.Description, flecs.doc.Brief) : {"Low Capture/Compare 1\n              value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		CCR2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare register 2"}
			Register : {address:0}
			CCR2_H {
				(flecs.doc.Description, flecs.doc.Brief) : {"High Capture/Compare 2 value (TIM2\n              only)"}
				Field : {bitoffset:16, bitwidth:16}
			}
			CCR2_L {
				(flecs.doc.Description, flecs.doc.Brief) : {"Low Capture/Compare 2\n              value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		CCR3 {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare register 3"}
			Register : {address:0}
			CCR3_H {
				(flecs.doc.Description, flecs.doc.Brief) : {"High Capture/Compare value (TIM2\n              only)"}
				Field : {bitoffset:16, bitwidth:16}
			}
			CCR3_L {
				(flecs.doc.Description, flecs.doc.Brief) : {"Low Capture/Compare value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		CCR4 {
			(flecs.doc.Description, flecs.doc.Brief) : {"capture/compare register 4"}
			Register : {address:0}
			CCR4_H {
				(flecs.doc.Description, flecs.doc.Brief) : {"High Capture/Compare value (TIM2\n              only)"}
				Field : {bitoffset:16, bitwidth:16}
			}
			CCR4_L {
				(flecs.doc.Description, flecs.doc.Brief) : {"Low Capture/Compare value"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		DCR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA control register"}
			Register : {address:0}
			DBL {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA burst length"}
				Field : {bitoffset:8, bitwidth:5}
			}
			DBA {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA base address"}
				Field : {bitoffset:0, bitwidth:5}
			}
		}
		DMAR {
			(flecs.doc.Description, flecs.doc.Brief) : {"DMA address for full transfer"}
			Register : {address:0}
			DMAB {
				(flecs.doc.Description, flecs.doc.Brief) : {"DMA register for burst\n              accesses"}
				Field : {bitoffset:0, bitwidth:16}
			}
		}
		OR1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"TIM option register"}
			Register : {address:0}
			IOCREF_CLR {
				(flecs.doc.Description, flecs.doc.Brief) : {"IOCREF_CLR"}
				Field : {bitoffset:0, bitwidth:1}
			}
		}
		AF1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"TIM alternate function option register\n          1"}
			Register : {address:0}
			ETRSEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"External trigger source\n              selection"}
				Field : {bitoffset:14, bitwidth:4}
			}
		}
		TISEL {
			(flecs.doc.Description, flecs.doc.Brief) : {"TIM alternate function option register\n          1"}
			Register : {address:0}
			TI1SEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"TI1SEL"}
				Field : {bitoffset:0, bitwidth:4}
			}
			TI2SEL {
				(flecs.doc.Description, flecs.doc.Brief) : {"TI2SEL"}
				Field : {bitoffset:8, bitwidth:4}
			}
		}
	}
	VREFBUF {
		(flecs.doc.Description, flecs.doc.Brief) : {"System configuration controller"}
		CSR {
			(flecs.doc.Description, flecs.doc.Brief) : {"VREFBUF control and status\n          register"}
			Register : {address:0}
			ENVR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Voltage reference buffer mode enable\n              This bit is used to enable the voltage reference\n              buffer mode."}
				Field : {bitoffset:0, bitwidth:1}
			}
			HIZ {
				(flecs.doc.Description, flecs.doc.Brief) : {"High impedance mode This bit controls\n              the analog switch to connect or not the VREF+ pin.\n              Refer to Table196: VREF buffer modes for the mode\n              descriptions depending on ENVR bit\n              configuration."}
				Field : {bitoffset:1, bitwidth:1}
			}
			VRR {
				(flecs.doc.Description, flecs.doc.Brief) : {"Voltage reference buffer\n              ready"}
				Field : {bitoffset:3, bitwidth:1}
			}
			VRS {
				(flecs.doc.Description, flecs.doc.Brief) : {"Voltage reference scale These bits\n              select the value generated by the voltage reference\n              buffer. Other: Reserved"}
				Field : {bitoffset:4, bitwidth:3}
			}
		}
		CCR {
			(flecs.doc.Description, flecs.doc.Brief) : {"VREFBUF calibration control\n          register"}
			Register : {address:0}
			TRIM {
				(flecs.doc.Description, flecs.doc.Brief) : {"Trimming code These bits are\n              automatically initialized after reset with the\n              trimming value stored in the Flash memory during the\n              production test. Writing into these bits allows to\n              tune the internal r"}
				Field : {bitoffset:0, bitwidth:6}
			}
		}
	}
	DBG {
		(flecs.doc.Description, flecs.doc.Brief) : {"MCU debug component"}
		IDCODE {
			(flecs.doc.Description, flecs.doc.Brief) : {"DBGMCU_IDCODE"}
			Register : {address:0}
			DEV_ID {
				(flecs.doc.Description, flecs.doc.Brief) : {"Device identifier"}
				Field : {bitoffset:0, bitwidth:12}
			}
			REV_ID {
				(flecs.doc.Description, flecs.doc.Brief) : {"Revision identifie"}
				Field : {bitoffset:16, bitwidth:16}
			}
		}
		CR {
			(flecs.doc.Description, flecs.doc.Brief) : {"Debug MCU configuration\n          register"}
			Register : {address:0}
			DBG_STOP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Debug Stop mode"}
				Field : {bitoffset:1, bitwidth:1}
			}
			DBG_STANDBY {
				(flecs.doc.Description, flecs.doc.Brief) : {"Debug Standby mode"}
				Field : {bitoffset:2, bitwidth:1}
			}
		}
		APB_FZ1 {
			(flecs.doc.Description, flecs.doc.Brief) : {"Debug MCU APB1 freeze\n          register1"}
			Register : {address:0}
			DBG_TIM2_STOP {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM2 counter stopped when core is\n              halted"}
				Field : {bitoffset:0, bitwidth:1}
			}
			DBG_TIM3_STOP {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM3 counter stopped when core is\n              halted"}
				Field : {bitoffset:1, bitwidth:1}
			}
			DBG_RTC_STOP {
				(flecs.doc.Description, flecs.doc.Brief) : {"RTC counter stopped when core is\n              halted"}
				Field : {bitoffset:10, bitwidth:1}
			}
			DBG_WWDG_STOP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Window watchdog counter stopped when\n              core is halted"}
				Field : {bitoffset:11, bitwidth:1}
			}
			DBG_IWDG_STOP {
				(flecs.doc.Description, flecs.doc.Brief) : {"Independent watchdog counter stopped\n              when core is halted"}
				Field : {bitoffset:12, bitwidth:1}
			}
			DBG_I2C1_STOP {
				(flecs.doc.Description, flecs.doc.Brief) : {"I2C1 SMBUS timeout counter stopped when\n              core is halted"}
				Field : {bitoffset:21, bitwidth:1}
			}
		}
		APB_FZ2 {
			(flecs.doc.Description, flecs.doc.Brief) : {"Debug MCU APB1 freeze register\n          2"}
			Register : {address:0}
			DBG_TIM1_STOP {
				(flecs.doc.Description, flecs.doc.Brief) : {"TIM1 counter stopped when core is\n              halted"}
				Field : {bitoffset:11, bitwidth:1}
			}
			DBG_TIM14_STOP {
				(flecs.doc.Description, flecs.doc.Brief) : {"DBG_TIM14_STOP"}
				Field : {bitoffset:15, bitwidth:1}
			}
			DBG_TIM16_STOP {
				(flecs.doc.Description, flecs.doc.Brief) : {"DBG_TIM16_STOP"}
				Field : {bitoffset:17, bitwidth:1}
			}
			DBG_TIM17_STOP {
				(flecs.doc.Description, flecs.doc.Brief) : {"DBG_TIM17_STOP"}
				Field : {bitoffset:18, bitwidth:1}
			}
		}
	}
}
pins {
	PA0 {
		(AF.AF5, signals.LPTIM1_OUT)
		(AF.AF0, signals.SPI2_SCK)
		(AF.AF2, signals.TIM2_CH1)
		(AF.AF2, signals.TIM2_ETR)
		(AF.AF1, signals.USART2_CTS)
		(AF.AF1, signals.USART2_NSS)
	}
	PA1 {
		(AF.AF7, signals.EVENTOUT)
		(AF.AF6, signals.I2C1_SMBA)
		(AF.AF0, signals.I2S1_CK)
		(AF.AF0, signals.SPI1_SCK)
		(AF.AF2, signals.TIM2_CH2)
		(AF.AF1, signals.USART2_CK)
		(AF.AF1, signals.USART2_DE)
		(AF.AF1, signals.USART2_RTS)
	}
	PA10 {
		(AF.AF7, signals.EVENTOUT)
		(AF.AF6, signals.I2C1_SDA)
		(AF.AF0, signals.SPI2_MOSI)
		(AF.AF5, signals.TIM17_BK)
		(AF.AF2, signals.TIM1_CH3)
		(AF.AF1, signals.USART1_RX)
	}
	PA10__PA12_ {
		(AF.AF7, signals.EVENTOUT)
		(AF.AF6, signals.I2C1_SDA)
		(AF.AF0, signals.SPI2_MOSI)
		(AF.AF5, signals.TIM17_BK)
		(AF.AF2, signals.TIM1_CH3)
		(AF.AF1, signals.USART1_RX)
	}
	PA11__PA9_ {
		(AF.AF6, signals.I2C2_SCL)
		(AF.AF0, signals.I2S1_MCK)
		(AF.AF0, signals.SPI1_MISO)
		(AF.AF5, signals.TIM1_BK2)
		(AF.AF2, signals.TIM1_CH4)
		(AF.AF1, signals.USART1_CTS)
		(AF.AF1, signals.USART1_NSS)
	}
	PA12__PA10_ {
		(AF.AF6, signals.I2C2_SDA)
		(AF.AF0, signals.I2S1_SD)
		(AF.AF5, signals.I2S_CKIN)
		(AF.AF0, signals.SPI1_MOSI)
		(AF.AF2, signals.TIM1_ETR)
		(AF.AF1, signals.USART1_CK)
		(AF.AF1, signals.USART1_DE)
		(AF.AF1, signals.USART1_RTS)
	}
	PA13 {
		(AF.AF7, signals.EVENTOUT)
		(AF.AF1, signals.IR_OUT)
		(AF.AF0, signals.SYS_SWDIO)
	}
	PA14_BOOT0 {
		(AF.AF7, signals.EVENTOUT)
		(AF.AF0, signals.SYS_SWCLK)
		(AF.AF1, signals.USART2_TX)
	}
	PA15 {
		(AF.AF7, signals.EVENTOUT)
		(AF.AF0, signals.I2S1_WS)
		(AF.AF0, signals.SPI1_NSS)
		(AF.AF2, signals.TIM2_CH1)
		(AF.AF2, signals.TIM2_ETR)
		(AF.AF1, signals.USART2_RX)
	}
	PA2 {
		(AF.AF0, signals.I2S1_SD)
		(AF.AF6, signals.LPUART1_TX)
		(AF.AF0, signals.SPI1_MOSI)
		(AF.AF2, signals.TIM2_CH3)
		(AF.AF1, signals.USART2_TX)
	}
	PA3 {
		(AF.AF7, signals.EVENTOUT)
		(AF.AF6, signals.LPUART1_RX)
		(AF.AF0, signals.SPI2_MISO)
		(AF.AF2, signals.TIM2_CH4)
		(AF.AF1, signals.USART2_RX)
	}
	PA4 {
		(AF.AF7, signals.EVENTOUT)
		(AF.AF0, signals.I2S1_WS)
		(AF.AF5, signals.LPTIM2_OUT)
		(AF.AF0, signals.SPI1_NSS)
		(AF.AF1, signals.SPI2_MOSI)
		(AF.AF4, signals.TIM14_CH1)
	}
	PA5 {
		(AF.AF7, signals.EVENTOUT)
		(AF.AF0, signals.I2S1_CK)
		(AF.AF5, signals.LPTIM2_ETR)
		(AF.AF0, signals.SPI1_SCK)
		(AF.AF2, signals.TIM2_CH1)
		(AF.AF2, signals.TIM2_ETR)
	}
	PA6 {
		(AF.AF0, signals.I2S1_MCK)
		(AF.AF6, signals.LPUART1_CTS)
		(AF.AF0, signals.SPI1_MISO)
		(AF.AF5, signals.TIM16_CH1)
		(AF.AF2, signals.TIM1_BK)
		(AF.AF1, signals.TIM3_CH1)
	}
	PA7 {
		(AF.AF0, signals.I2S1_SD)
		(AF.AF0, signals.SPI1_MOSI)
		(AF.AF4, signals.TIM14_CH1)
		(AF.AF5, signals.TIM17_CH1)
		(AF.AF2, signals.TIM1_CH1N)
		(AF.AF1, signals.TIM3_CH2)
	}
	PA8 {
		(AF.AF7, signals.EVENTOUT)
		(AF.AF5, signals.LPTIM2_OUT)
		(AF.AF0, signals.RCC_MCO)
		(AF.AF1, signals.SPI2_NSS)
		(AF.AF2, signals.TIM1_CH1)
	}
	PA9 {
		(AF.AF7, signals.EVENTOUT)
		(AF.AF6, signals.I2C1_SCL)
		(AF.AF0, signals.RCC_MCO)
		(AF.AF4, signals.SPI2_MISO)
		(AF.AF5, signals.TIM15_BK)
		(AF.AF2, signals.TIM1_CH2)
		(AF.AF1, signals.USART1_TX)
	}
	PA9__PA11_ {
		(AF.AF7, signals.EVENTOUT)
		(AF.AF6, signals.I2C1_SCL)
		(AF.AF0, signals.RCC_MCO)
		(AF.AF4, signals.SPI2_MISO)
		(AF.AF2, signals.TIM1_CH2)
		(AF.AF1, signals.USART1_TX)
	}
	PB0 {
		(AF.AF0, signals.I2S1_WS)
		(AF.AF5, signals.LPTIM1_OUT)
		(AF.AF0, signals.SPI1_NSS)
		(AF.AF2, signals.TIM1_CH2N)
		(AF.AF1, signals.TIM3_CH3)
	}
	PB1 {
		(AF.AF7, signals.EVENTOUT)
		(AF.AF5, signals.LPTIM2_IN1)
		(AF.AF6, signals.LPUART1_DE)
		(AF.AF6, signals.LPUART1_RTS)
		(AF.AF0, signals.TIM14_CH1)
		(AF.AF2, signals.TIM1_CH3N)
		(AF.AF1, signals.TIM3_CH4)
	}
	PB10 {
		(AF.AF6, signals.I2C2_SCL)
		(AF.AF1, signals.LPUART1_RX)
		(AF.AF5, signals.SPI2_SCK)
		(AF.AF2, signals.TIM2_CH3)
	}
	PB11 {
		(AF.AF6, signals.I2C2_SDA)
		(AF.AF1, signals.LPUART1_TX)
		(AF.AF0, signals.SPI2_MOSI)
		(AF.AF2, signals.TIM2_CH4)
	}
	PB12 {
		(AF.AF7, signals.EVENTOUT)
		(AF.AF1, signals.LPUART1_DE)
		(AF.AF1, signals.LPUART1_RTS)
		(AF.AF0, signals.SPI2_NSS)
		(AF.AF2, signals.TIM1_BK)
	}
	PB13 {
		(AF.AF7, signals.EVENTOUT)
		(AF.AF6, signals.I2C2_SCL)
		(AF.AF1, signals.LPUART1_CTS)
		(AF.AF0, signals.SPI2_SCK)
		(AF.AF2, signals.TIM1_CH1N)
	}
	PB14 {
		(AF.AF7, signals.EVENTOUT)
		(AF.AF6, signals.I2C2_SDA)
		(AF.AF0, signals.SPI2_MISO)
		(AF.AF2, signals.TIM1_CH2N)
	}
	PB15 {
		(AF.AF7, signals.EVENTOUT)
		(AF.AF0, signals.SPI2_MOSI)
		(AF.AF2, signals.TIM1_CH3N)
	}
	PB2 {
		(AF.AF7, signals.EVENTOUT)
		(AF.AF5, signals.LPTIM1_OUT)
		(AF.AF1, signals.SPI2_MISO)
	}
	PB3 {
		(AF.AF7, signals.EVENTOUT)
		(AF.AF0, signals.I2S1_CK)
		(AF.AF0, signals.SPI1_SCK)
		(AF.AF1, signals.TIM1_CH2)
		(AF.AF2, signals.TIM2_CH2)
		(AF.AF4, signals.USART1_CK)
		(AF.AF4, signals.USART1_DE)
		(AF.AF4, signals.USART1_RTS)
	}
	PB4 {
		(AF.AF7, signals.EVENTOUT)
		(AF.AF0, signals.I2S1_MCK)
		(AF.AF0, signals.SPI1_MISO)
		(AF.AF5, signals.TIM17_BK)
		(AF.AF1, signals.TIM3_CH1)
		(AF.AF4, signals.USART1_CTS)
		(AF.AF4, signals.USART1_NSS)
	}
	PB5 {
		(AF.AF6, signals.I2C1_SMBA)
		(AF.AF0, signals.I2S1_SD)
		(AF.AF5, signals.LPTIM1_IN1)
		(AF.AF0, signals.SPI1_MOSI)
		(AF.AF2, signals.TIM16_BK)
		(AF.AF1, signals.TIM3_CH2)
	}
	PB6 {
		(AF.AF7, signals.EVENTOUT)
		(AF.AF6, signals.I2C1_SCL)
		(AF.AF5, signals.LPTIM1_ETR)
		(AF.AF4, signals.SPI2_MISO)
		(AF.AF2, signals.TIM16_CH1N)
		(AF.AF1, signals.TIM1_CH3)
		(AF.AF0, signals.USART1_TX)
	}
	PB7 {
		(AF.AF7, signals.EVENTOUT)
		(AF.AF6, signals.I2C1_SDA)
		(AF.AF5, signals.LPTIM1_IN2)
		(AF.AF1, signals.SPI2_MOSI)
		(AF.AF2, signals.TIM17_CH1N)
		(AF.AF0, signals.USART1_RX)
	}
	PB8 {
		(AF.AF7, signals.EVENTOUT)
		(AF.AF6, signals.I2C1_SCL)
		(AF.AF1, signals.SPI2_SCK)
		(AF.AF2, signals.TIM16_CH1)
	}
	PB9 {
		(AF.AF7, signals.EVENTOUT)
		(AF.AF6, signals.I2C1_SDA)
		(AF.AF0, signals.IR_OUT)
		(AF.AF5, signals.SPI2_NSS)
		(AF.AF2, signals.TIM17_CH1)
	}
	PC13 {
		(AF.AF2, signals.TIM1_BK)
	}
	PC14_OSC32_IN__PC14_ {
		(AF.AF2, signals.TIM1_BK2)
	}
	PC15_OSC32_OUT__PC15_ {
		(AF.AF0, signals.RCC_OSC32_EN)
		(AF.AF1, signals.RCC_OSC_EN)
	}
	PC6 {
		(AF.AF2, signals.TIM2_CH3)
		(AF.AF1, signals.TIM3_CH1)
	}
	PC7 {
		(AF.AF2, signals.TIM2_CH4)
		(AF.AF1, signals.TIM3_CH2)
	}
	PD0 {
		(AF.AF0, signals.EVENTOUT)
		(AF.AF1, signals.SPI2_NSS)
		(AF.AF2, signals.TIM16_CH1)
	}
	PD1 {
		(AF.AF0, signals.EVENTOUT)
		(AF.AF1, signals.SPI2_SCK)
		(AF.AF2, signals.TIM17_CH1)
	}
	PD2 {
		(AF.AF2, signals.TIM1_CH1N)
		(AF.AF1, signals.TIM3_ETR)
	}
	PD3 {
		(AF.AF1, signals.SPI2_MISO)
		(AF.AF2, signals.TIM1_CH2N)
		(AF.AF0, signals.USART2_CTS)
		(AF.AF0, signals.USART2_NSS)
	}
	PF0_OSC_IN__PF0_ {
		(AF.AF2, signals.TIM14_CH1)
	}
	PF1_OSC_OUT__PF1_ {
		(AF.AF0, signals.RCC_OSC_EN)
	}
	PF2___NRST {
		(AF.AF0, signals.RCC_MCO)
	}
	PI8 {
	}
}
